/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference

#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger,
                                             // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize_() function call wrapper
*/
#define TMP_CONTEXTUALIZE(x)        \
  do                                \
  {                                 \
    Parse_context pc(YYTHD, Select);\
    if ((x)->contextualize_(&pc))   \
      MYSQL_YYABORT;                \
  } while(0)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void MYSQLerror(YYLTYPE *, THD *thd, Parse_tree_root **, const char *s)
{
  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  if (strcmp(s, "syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->syntax_error("%s", s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}


#line 482 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_MNT_WORKSPACE_PERCONA_XTRABACKUP_8_0_SOURCE_TARBALL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_MNT_WORKSPACE_PERCONA_XTRABACKUP_8_0_SOURCE_TARBALL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND = 293,
    BIT_OR = 294,
    BIT_SYM = 295,
    BIT_XOR = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    LOCATOR_SYM = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    SERVER_OPTIONS = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    UDF_RETURNS_SYM = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    OPTIONAL_SYM = 976,
    SECONDARY_ENGINE_SYM = 977,
    SECONDARY_LOAD_SYM = 978,
    SECONDARY_UNLOAD_SYM = 979,
    RETAIN_SYM = 980,
    OLD_SYM = 981,
    CONDITIONLESS_JOIN = 982,
    SUBQUERY_AS_EXPR = 983,
    EMPTY_FROM_CLAUSE = 984
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND 293
#define BIT_OR 294
#define BIT_SYM 295
#define BIT_XOR 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define LOCATOR_SYM 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define SERVER_OPTIONS 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define UDF_RETURNS_SYM 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define OPTIONAL_SYM 976
#define SECONDARY_ENGINE_SYM 977
#define SECONDARY_LOAD_SYM 978
#define SECONDARY_UNLOAD_SYM 979
#define RETAIN_SYM 980
#define OLD_SYM 981
#define CONDITIONLESS_JOIN 982
#define SUBQUERY_AS_EXPR 983
#define EMPTY_FROM_CLAUSE 984

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_MNT_WORKSPACE_PERCONA_XTRABACKUP_8_0_SOURCE_TARBALL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 1999 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  953
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   78290

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  749
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  894
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2873
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5053

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   984

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   746,     2,     2,     2,   734,   729,     2,
     738,   739,   732,   731,   743,   730,   744,   733,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   745,   741,
       2,     2,     2,     2,   742,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   735,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   747,   728,   748,   736,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   737,   740
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1921,  1921,  1922,  1927,  1937,  1955,  1962,  1975,  1974,
    1999,  2006,  2008,  2012,  2013,  2018,  2019,  2020,  2021,  2022,
    2023,  2024,  2025,  2026,  2027,  2028,  2029,  2030,  2031,  2032,
    2033,  2034,  2035,  2036,  2037,  2038,  2039,  2040,  2041,  2042,
    2043,  2044,  2045,  2046,  2047,  2048,  2049,  2050,  2051,  2052,
    2053,  2054,  2055,  2056,  2057,  2058,  2059,  2060,  2061,  2062,
    2063,  2064,  2065,  2066,  2067,  2068,  2069,  2070,  2071,  2072,
    2073,  2074,  2075,  2076,  2077,  2078,  2079,  2080,  2081,  2082,
    2083,  2084,  2085,  2086,  2087,  2088,  2089,  2090,  2091,  2092,
    2093,  2094,  2095,  2096,  2097,  2098,  2099,  2100,  2101,  2102,
    2103,  2104,  2105,  2106,  2107,  2108,  2112,  2122,  2123,  2127,
    2147,  2154,  2165,  2164,  2175,  2177,  2181,  2182,  2186,  2199,
    2198,  2218,  2217,  2231,  2230,  2245,  2246,  2249,  2256,  2263,
    2270,  2277,  2284,  2292,  2301,  2307,  2314,  2321,  2329,  2338,
    2344,  2350,  2358,  2366,  2372,  2379,  2386,  2394,  2406,  2412,
    2419,  2426,  2434,  2444,  2445,  2449,  2453,  2457,  2461,  2471,
    2475,  2479,  2484,  2495,  2500,  2504,  2508,  2512,  2516,  2520,
    2524,  2529,  2533,  2537,  2541,  2547,  2581,  2586,  2593,  2596,
    2598,  2599,  2603,  2609,  2613,  2629,  2633,  2644,  2648,  2663,
    2673,  2683,  2688,  2696,  2703,  2716,  2715,  2730,  2732,  2744,
    2764,  2783,  2803,  2820,  2825,  2834,  2839,  2851,  2863,  2877,
    2893,  2897,  2904,  2913,  2921,  2932,  2933,  2937,  2941,  2945,
    2949,  2953,  2958,  2962,  2970,  2969,  3001,  3000,  3009,  3018,
    3019,  3025,  3031,  3041,  3047,  3055,  3057,  3066,  3067,  3071,
    3077,  3086,  3087,  3095,  3095,  3153,  3154,  3155,  3156,  3157,
    3158,  3159,  3160,  3161,  3162,  3163,  3164,  3165,  3169,  3183,
    3202,  3203,  3207,  3208,  3213,  3215,  3217,  3219,  3221,  3223,
    3225,  3231,  3232,  3233,  3237,  3241,  3248,  3255,  3256,  3263,
    3265,  3269,  3270,  3274,  3325,  3327,  3331,  3332,  3336,  3386,
    3387,  3388,  3389,  3393,  3394,  3398,  3399,  3404,  3407,  3431,
    3530,  3548,  3547,  3626,  3622,  3698,  3699,  3704,  3706,  3711,
    3734,  3745,  3749,  3771,  3772,  3776,  3780,  3793,  3799,  3805,
    3814,  3827,  3853,  3859,  3860,  3866,  3867,  3872,  3878,  3891,
    3893,  3913,  3919,  3921,  3923,  3925,  3927,  3929,  3931,  3933,
    3935,  3937,  3939,  3941,  3946,  3960,  3977,  3978,  3980,  3985,
    3991,  4000,  4006,  4015,  4023,  4051,  4059,  4061,  4070,  4075,
    4081,  4090,  4098,  4100,  4102,  4104,  4106,  4108,  4110,  4112,
    4114,  4116,  4118,  4120,  4122,  4127,  4147,  4171,  4175,  4183,
    4184,  4185,  4186,  4187,  4188,  4189,  4190,  4191,  4192,  4193,
    4194,  4195,  4200,  4199,  4210,  4210,  4270,  4269,  4326,  4326,
    4348,  4405,  4452,  4476,  4475,  4500,  4522,  4524,  4525,  4529,
    4547,  4568,  4576,  4614,  4568,  4642,  4644,  4645,  4649,  4650,
    4655,  4665,  4654,  4717,  4716,  4730,  4731,  4735,  4736,  4741,
    4749,  4740,  4799,  4807,  4798,  4853,  4866,  4871,  4870,  4908,
    4909,  4914,  4913,  4947,  4947,  4966,  4965,  5013,  5028,  5036,
    5027,  5094,  5102,  5091,  5144,  5146,  5151,  5153,  5155,  5170,
    5171,  5178,  5179,  5186,  5187,  5191,  5197,  5206,  5207,  5208,
    5209,  5210,  5211,  5212,  5213,  5214,  5215,  5219,  5220,  5224,
    5230,  5239,  5240,  5241,  5242,  5243,  5244,  5248,  5249,  5253,
    5259,  5268,  5272,  5273,  5277,  5283,  5292,  5293,  5294,  5295,
    5296,  5297,  5298,  5302,  5303,  5307,  5313,  5322,  5323,  5324,
    5328,  5332,  5333,  5337,  5341,  5348,  5355,  5362,  5369,  5376,
    5383,  5390,  5397,  5404,  5411,  5415,  5422,  5429,  5430,  5505,
    5511,  5515,  5520,  5525,  5531,  5539,  5549,  5550,  5564,  5572,
    5576,  5580,  5584,  5588,  5592,  5599,  5600,  5605,  5606,  5624,
    5625,  5637,  5638,  5643,  5652,  5653,  5658,  5664,  5674,  5675,
    5687,  5688,  5692,  5698,  5707,  5716,  5719,  5724,  5732,  5733,
    5737,  5741,  5748,  5755,  5765,  5764,  5782,  5788,  5797,  5798,
    5803,  5804,  5808,  5814,  5823,  5830,  5831,  5835,  5841,  5850,
    5852,  5854,  5856,  5858,  5860,  5862,  5864,  5873,  5874,  5878,
    5879,  5883,  5888,  5896,  5897,  5901,  5907,  5916,  5922,  5930,
    5932,  5936,  5940,  5944,  5948,  5952,  5956,  5960,  5964,  5968,
    5972,  5976,  5980,  5984,  5988,  5992,  6009,  6013,  6017,  6021,
    6025,  6029,  6033,  6037,  6041,  6045,  6049,  6053,  6057,  6061,
    6065,  6069,  6076,  6090,  6094,  6098,  6102,  6103,  6104,  6105,
    6106,  6107,  6111,  6112,  6113,  6117,  6118,  6119,  6120,  6124,
    6130,  6139,  6140,  6144,  6151,  6152,  6161,  6169,  6175,  6181,
    6186,  6196,  6204,  6211,  6223,  6224,  6228,  6232,  6253,  6255,
    6259,  6260,  6261,  6265,  6269,  6273,  6277,  6281,  6285,  6289,
    6293,  6298,  6303,  6312,  6321,  6325,  6329,  6334,  6343,  6347,
    6363,  6367,  6371,  6375,  6379,  6383,  6387,  6388,  6392,  6396,
    6400,  6405,  6410,  6415,  6420,  6425,  6429,  6433,  6438,  6442,
    6449,  6451,  6453,  6455,  6457,  6459,  6461,  6463,  6468,  6469,
    6473,  6474,  6478,  6479,  6480,  6481,  6482,  6486,  6487,  6488,
    6489,  6490,  6494,  6499,  6503,  6505,  6509,  6510,  6511,  6512,
    6517,  6521,  6526,  6530,  6539,  6540,  6544,  6545,  6546,  6554,
    6555,  6559,  6564,  6568,  6569,  6570,  6574,  6575,  6576,  6577,
    6580,  6581,  6586,  6590,  6594,  6595,  6599,  6605,  6615,  6619,
    6623,  6627,  6631,  6635,  6639,  6643,  6647,  6651,  6655,  6659,
    6663,  6667,  6671,  6683,  6684,  6685,  6689,  6690,  6691,  6695,
    6701,  6705,  6709,  6710,  6714,  6723,  6727,  6728,  6732,  6741,
    6745,  6746,  6750,  6759,  6760,  6764,  6765,  6770,  6771,  6772,
    6776,  6784,  6789,  6798,  6802,  6807,  6812,  6817,  6824,  6829,
    6839,  6840,  6845,  6844,  6856,  6858,  6862,  6877,  6878,  6882,
    6889,  6899,  6900,  6901,  6902,  6907,  6911,  6916,  6921,  6927,
    6936,  6937,  6938,  6939,  6940,  6944,  6945,  6949,  6950,  6954,
    6955,  6959,  6960,  6961,  6965,  6966,  6970,  6971,  6975,  6981,
    6990,  6991,  7005,  7006,  7010,  7016,  7025,  7029,  7030,  7034,
    7040,  7049,  7050,  7055,  7056,  7060,  7084,  7085,  7086,  7090,
    7091,  7095,  7096,  7100,  7101,  7105,  7106,  7107,  7111,  7117,
    7127,  7133,  7148,  7154,  7164,  7165,  7174,  7175,  7179,  7180,
    7184,  7190,  7202,  7212,  7226,  7225,  7246,  7245,  7267,  7266,
    7288,  7287,  7306,  7300,  7323,  7322,  7358,  7380,  7399,  7419,
    7427,  7449,  7473,  7484,  7486,  7500,  7506,  7518,  7530,  7544,
    7545,  7549,  7559,  7568,  7569,  7573,  7574,  7578,  7584,  7590,
    7598,  7613,  7621,  7629,  7636,  7643,  7650,  7657,  7663,  7669,
    7678,  7679,  7683,  7684,  7688,  7694,  7700,  7706,  7715,  7729,
    7730,  7731,  7732,  7736,  7737,  7749,  7750,  7754,  7755,  7759,
    7760,  7775,  7780,  7788,  7792,  7800,  7804,  7809,  7810,  7819,
    7823,  7834,  7838,  7842,  7846,  7850,  7855,  7860,  7865,  7870,
    7877,  7881,  7885,  7889,  7894,  7899,  7904,  7909,  7913,  7920,
    7921,  7925,  7929,  7936,  7937,  7945,  7952,  7957,  7961,  7966,
    7977,  7978,  7986,  7990,  7994,  7998,  8002,  8006,  8011,  8015,
    8019,  8023,  8027,  8031,  8035,  8039,  8043,  8047,  8051,  8055,
    8059,  8063,  8069,  8073,  8080,  8085,  8090,  8098,  8099,  8104,
    8109,  8115,  8124,  8128,  8132,  8149,  8153,  8157,  8173,  8175,
    8179,  8180,  8184,  8185,  8186,  8190,  8191,  8192,  8196,  8197,
    8198,  8199,  8203,  8208,  8216,  8217,  8227,  8243,  8241,  8263,
    8280,  8283,  8290,  8294,  8301,  8305,  8309,  8316,  8321,  8324,
    8331,  8334,  8341,  8344,  8351,  8354,  8362,  8365,  8372,  8376,
    8383,  8387,  8395,  8399,  8424,  8425,  8426,  8431,  8436,  8443,
    8457,  8458,  8459,  8463,  8472,  8473,  8477,  8478,  8486,  8487,
    8488,  8492,  8502,  8503,  8522,  8527,  8534,  8544,  8552,  8560,
    8561,  8565,  8566,  8574,  8576,  8578,  8580,  8582,  8584,  8589,
    8596,  8597,  8598,  8603,  8602,  8608,  8615,  8620,  8628,  8629,
    8633,  8646,  8650,  8659,  8665,  8674,  8681,  8682,  8686,  8691,
    8698,  8704,  8713,  8720,  8727,  8728,  8738,  8739,  8743,  8747,
    8753,  8789,  8793,  8838,  8845,  8853,  8862,  8872,  8880,  8889,
    8900,  8904,  8908,  8917,  8931,  8949,  8950,  8970,  8978,  8999,
    9022,  9023,  9027,  9031,  9032,  9036,  9042,  9052,  9055,  9059,
    9064,  9068,  9072,  9081,  9082,  9086,  9092,  9101,  9105,  9109,
    9116,  9117,  9121,  9125,  9126,  9130,  9131,  9135,  9141,  9147,
    9157,  9158,  9166,  9167,  9168,  9169,  9170,  9174,  9175,  9180,
    9186,  9191,  9197,  9201,  9205,  9209,  9213,  9217,  9221,  9225,
    9229,  9233,  9237,  9241,  9254,  9258,  9262,  9267,  9271,  9278,
    9282,  9289,  9293,  9297,  9305,  9309,  9316,  9324,  9332,  9336,
    9340,  9344,  9348,  9352,  9356,  9360,  9364,  9368,  9372,  9376,
    9380,  9384,  9388,  9392,  9396,  9397,  9401,  9402,  9406,  9407,
    9411,  9412,  9416,  9417,  9418,  9419,  9420,  9421,  9422,  9426,
    9427,  9431,  9432,  9433,  9434,  9435,  9436,  9440,  9441,  9442,
    9443,  9444,  9445,  9449,  9453,  9457,  9461,  9465,  9469,  9470,
    9474,  9478,  9482,  9486,  9490,  9494,  9498,  9502,  9506,  9510,
    9514,  9518,  9523,  9530,  9547,  9551,  9555,  9559,  9563,  9567,
    9571,  9575,  9579,  9583,  9587,  9591,  9595,  9599,  9603,  9607,
    9611,  9615,  9620,  9625,  9630,  9634,  9638,  9642,  9646,  9651,
    9655,  9674,  9678,  9682,  9686,  9690,  9695,  9700,  9704,  9708,
    9713,  9717,  9721,  9725,  9729,  9733,  9737,  9741,  9746,  9750,
    9754,  9758,  9762,  9774,  9778,  9782,  9786,  9790,  9794,  9798,
    9802,  9806,  9810,  9814,  9818,  9822,  9826,  9830,  9834,  9838,
    9842,  9846,  9850,  9854,  9858,  9862,  9866,  9872,  9878,  9884,
    9890,  9896,  9900,  9918,  9922,  9929,  9931,  9944,  9945,  9949,
    9950,  9954,  9955,  9959,  9965,  9974,  9981,  9982,  9986,  9990,
    9994,  9998, 10002, 10006, 10010, 10014, 10018, 10022, 10026, 10035,
   10039, 10043, 10047, 10051, 10055, 10059, 10063, 10067, 10071, 10081,
   10085, 10089, 10093, 10097, 10101, 10105, 10116, 10127, 10131, 10135,
   10148, 10152, 10157, 10166, 10169, 10177, 10180, 10184, 10193, 10196,
   10200, 10208, 10211, 10218, 10225, 10229, 10236, 10243, 10250, 10271,
   10274, 10282, 10285, 10293, 10296, 10304, 10307, 10316, 10321, 10328,
   10332, 10336, 10340, 10344, 10351, 10358, 10362, 10366, 10370, 10374,
   10382, 10385, 10389, 10393, 10397, 10403, 10404, 10405, 10409, 10416,
   10420, 10427, 10431, 10438, 10439, 10444, 10449, 10453, 10454, 10458,
   10463, 10473, 10480, 10487, 10506, 10514, 10521, 10528, 10535, 10542,
   10549, 10556, 10563, 10570, 10580, 10581, 10585, 10591, 10600, 10601,
   10605, 10611, 10620, 10621, 10625, 10626, 10630, 10638, 10647, 10648,
   10649, 10660, 10661, 10742, 10746, 10751, 10755, 10759, 10769, 10776,
   10777, 10778, 10782, 10783, 10784, 10785, 10788, 10789, 10792, 10794,
   10797, 10799, 10807, 10808, 10812, 10841, 10842, 10843, 10844, 10846,
   10848, 10852, 10853, 10862, 10863, 10867, 10874, 10875, 10879, 10892,
   10903, 10919, 10926, 10932, 10941, 10945, 10954, 10961, 10964, 10972,
   10979, 10987, 10995, 11003, 11014, 11017, 11020, 11025, 11030, 11039,
   11042, 11043, 11044, 11048, 11049, 11053, 11059, 11068, 11069, 11077,
   11078, 11082, 11087, 11093, 11097, 11103, 11112, 11118, 11126, 11130,
   11139, 11151, 11152, 11153, 11154, 11155, 11156, 11157, 11158, 11159,
   11160, 11161, 11162, 11166, 11167, 11168, 11169, 11170, 11171, 11172,
   11173, 11174, 11178, 11179, 11180, 11181, 11184, 11186, 11187, 11191,
   11192, 11195, 11197, 11201, 11210, 11211, 11218, 11219, 11226, 11230,
   11237, 11242, 11251, 11268, 11276, 11283, 11289, 11299, 11302, 11309,
   11315, 11324, 11334, 11335, 11343, 11344, 11351, 11356, 11367, 11368,
   11383, 11388, 11398, 11409, 11410, 11414, 11421, 11426, 11436, 11437,
   11441, 11442, 11446, 11447, 11451, 11458, 11464, 11470, 11479, 11483,
   11487, 11491, 11495, 11502, 11503, 11507, 11508, 11509, 11510, 11511,
   11512, 11516, 11517, 11518, 11519, 11520, 11524, 11525, 11526, 11527,
   11528, 11532, 11533, 11534, 11535, 11539, 11544, 11545, 11549, 11555,
   11564, 11568, 11575, 11582, 11588, 11592, 11600, 11611, 11621, 11637,
   11646, 11656, 11679, 11714, 11721, 11736, 11746, 11761, 11770, 11781,
   11801, 11823, 11846, 11854, 11861, 11868, 11874, 11883, 11889, 11898,
   11899, 11903, 11904, 11908, 11909, 11913, 11919, 11928, 11929, 11936,
   11950, 11968, 11985, 11997, 12013, 12028, 12029, 12030, 12039, 12043,
   12044, 12055, 12057, 12061, 12066, 12071, 12079, 12084, 12089, 12097,
   12103, 12112, 12119, 12120, 12124, 12125, 12129, 12134, 12144, 12145,
   12148, 12150, 12154, 12159, 12164, 12168, 12174, 12183, 12184, 12192,
   12196, 12205, 12222, 12223, 12227, 12234, 12246, 12254, 12255, 12261,
   12273, 12283, 12296, 12298, 12302, 12303, 12307, 12308, 12309, 12313,
   12319, 12321, 12324, 12326, 12329, 12330, 12333, 12337, 12341, 12345,
   12349, 12353, 12357, 12361, 12365, 12373, 12376, 12390, 12389, 12400,
   12409, 12415, 12427, 12438, 12449, 12457, 12464, 12472, 12474, 12497,
   12501, 12506, 12505, 12516, 12515, 12525, 12543, 12550, 12558, 12566,
   12574, 12582, 12590, 12600, 12622, 12627, 12649, 12658, 12667, 12673,
   12678, 12683, 12688, 12694, 12703, 12711, 12715, 12719, 12726, 12733,
   12739, 12749, 12759, 12764, 12769, 12774, 12783, 12785, 12787, 12792,
   12793, 12796, 12798, 12802, 12803, 12807, 12808, 12812, 12813, 12817,
   12818, 12819, 12820, 12824, 12825, 12829, 12830, 12834, 12835, 12838,
   12840, 12845, 12856, 12857, 12858, 12863, 12870, 12877, 12878, 12879,
   12880, 12881, 12882, 12889, 12890, 12895, 12898, 12913, 12914, 12919,
   12927, 12926, 12939, 12938, 12952, 12956, 12957, 12970, 12969, 12992,
   12993, 12998, 13000, 13002, 13004, 13006, 13008, 13010, 13012, 13014,
   13016, 13018, 13020, 13025, 13026, 13031, 13030, 13037, 13047, 13048,
   13053, 13058, 13067, 13067, 13070, 13069, 13089, 13090, 13094, 13095,
   13110, 13109, 13120, 13124, 13128, 13142, 13154, 13155, 13156, 13162,
   13173, 13212, 13213, 13217, 13218, 13222, 13223, 13224, 13228, 13229,
   13233, 13234, 13238, 13239, 13243, 13248, 13252, 13257, 13263, 13268,
   13276, 13277, 13281, 13286, 13290, 13295, 13303, 13304, 13308, 13309,
   13313, 13314, 13318, 13319, 13320, 13324, 13330, 13339, 13340, 13347,
   13348, 13352, 13360, 13380, 13401, 13406, 13412, 13417, 13425, 13432,
   13439, 13449, 13468, 13469, 13470, 13481, 13482, 13483, 13484, 13496,
   13500, 13504, 13508, 13512, 13516, 13523, 13527, 13531, 13535, 13539,
   13547, 13551, 13555, 13569, 13570, 13574, 13578, 13585, 13592, 13599,
   13603, 13607, 13611, 13615, 13619, 13626, 13632, 13645, 13651, 13662,
   13663, 13693, 13706, 13719, 13735, 13751, 13768, 13772, 13776, 13777,
   13788, 13789, 13799, 13800, 13811, 13812, 13813, 13817, 13818, 13819,
   13823, 13828, 13833, 13847, 13852, 13873, 13874, 13875, 13876, 13877,
   13882, 13883, 13884, 13885, 13886, 13887, 13888, 13889, 13890, 13891,
   13892, 13893, 13894, 13895, 13896, 13897, 13898, 13899, 13900, 13901,
   13902, 13903, 13904, 13905, 13906, 13907, 13908, 13909, 13910, 13911,
   13912, 13913, 13914, 13915, 13916, 13917, 13918, 13919, 13920, 13921,
   13922, 13923, 13924, 13925, 13926, 13927, 13928, 13929, 13930, 13931,
   13932, 13933, 13934, 13935, 13936, 13937, 13938, 13939, 13940, 13941,
   13942, 13952, 13953, 13954, 13955, 13956, 13957, 13958, 13959, 13960,
   13961, 13966, 13967, 13968, 13969, 13970, 13971, 13972, 13973, 13974,
   13975, 13976, 13977, 13978, 13979, 13980, 13981, 13982, 13983, 13984,
   13985, 13986, 13987, 13988, 13989, 13990, 13991, 13992, 13993, 13994,
   13995, 13996, 13997, 13998, 13999, 14000, 14001, 14002, 14003, 14004,
   14005, 14006, 14007, 14008, 14009, 14010, 14011, 14012, 14013, 14014,
   14019, 14020, 14021, 14022, 14023, 14024, 14025, 14026, 14027, 14028,
   14029, 14030, 14031, 14032, 14033, 14034, 14035, 14036, 14037, 14038,
   14039, 14040, 14041, 14042, 14043, 14044, 14045, 14046, 14047, 14048,
   14049, 14050, 14051, 14052, 14053, 14054, 14055, 14056, 14057, 14058,
   14059, 14060, 14061, 14062, 14063, 14064, 14065, 14066, 14067, 14068,
   14069, 14070, 14071, 14072, 14073, 14074, 14075, 14076, 14077, 14078,
   14079, 14080, 14081, 14082, 14083, 14084, 14085, 14086, 14087, 14088,
   14089, 14090, 14091, 14092, 14093, 14094, 14095, 14096, 14097, 14098,
   14099, 14100, 14101, 14102, 14103, 14104, 14105, 14106, 14107, 14108,
   14109, 14110, 14111, 14112, 14113, 14114, 14115, 14116, 14117, 14118,
   14119, 14120, 14121, 14122, 14123, 14124, 14125, 14126, 14127, 14128,
   14129, 14130, 14131, 14132, 14133, 14134, 14135, 14136, 14137, 14138,
   14139, 14140, 14141, 14142, 14143, 14144, 14145, 14146, 14147, 14148,
   14149, 14150, 14151, 14152, 14153, 14154, 14155, 14156, 14157, 14158,
   14159, 14160, 14161, 14162, 14163, 14164, 14165, 14166, 14167, 14168,
   14169, 14170, 14171, 14172, 14173, 14174, 14175, 14176, 14177, 14178,
   14179, 14180, 14181, 14182, 14183, 14184, 14185, 14186, 14187, 14188,
   14189, 14190, 14191, 14192, 14193, 14194, 14195, 14196, 14197, 14198,
   14199, 14200, 14201, 14202, 14203, 14204, 14205, 14206, 14207, 14208,
   14209, 14210, 14211, 14212, 14213, 14214, 14215, 14216, 14217, 14218,
   14219, 14220, 14221, 14222, 14223, 14224, 14225, 14226, 14227, 14228,
   14229, 14230, 14231, 14232, 14233, 14234, 14235, 14236, 14237, 14238,
   14239, 14240, 14241, 14242, 14243, 14244, 14245, 14246, 14247, 14248,
   14249, 14250, 14251, 14252, 14253, 14254, 14255, 14256, 14257, 14258,
   14259, 14260, 14261, 14262, 14263, 14264, 14265, 14266, 14267, 14268,
   14269, 14270, 14271, 14272, 14273, 14274, 14275, 14276, 14277, 14278,
   14279, 14280, 14281, 14282, 14283, 14284, 14285, 14286, 14287, 14288,
   14289, 14290, 14291, 14292, 14293, 14294, 14295, 14296, 14297, 14298,
   14299, 14300, 14301, 14302, 14303, 14304, 14305, 14306, 14328, 14329,
   14340, 14349, 14353, 14357, 14361, 14367, 14377, 14381, 14386, 14391,
   14396, 14401, 14406, 14414, 14415, 14419, 14423, 14430, 14436, 14445,
   14450, 14457, 14467, 14468, 14473, 14477, 14485, 14489, 14493, 14494,
   14495, 14496, 14497, 14501, 14502, 14503, 14504, 14508, 14509, 14510,
   14511, 14515, 14516, 14517, 14518, 14519, 14520, 14525, 14533, 14539,
   14543, 14548, 14552, 14559, 14563, 14570, 14574, 14578, 14585, 14589,
   14596, 14603, 14604, 14608, 14615, 14616, 14620, 14621, 14625, 14626,
   14627, 14628, 14632, 14633, 14634, 14638, 14642, 14646, 14650, 14660,
   14659, 14672, 14682, 14683, 14687, 14688, 14692, 14720, 14721, 14722,
   14727, 14732, 14731, 14744, 14755, 14763, 14770, 14777, 14796, 14800,
   14804, 14813, 14824, 14840, 14841, 14845, 14846, 14847, 14848, 14852,
   14853, 14854, 14855, 14856, 14862, 14867, 14883, 14882, 14901, 14906,
   14917, 14922, 14939, 14938, 14955, 14968, 14969, 14970, 14971, 14974,
   14976, 14980, 14986, 14995, 15002, 15004, 15006, 15008, 15010, 15012,
   15014, 15016, 15018, 15020, 15022, 15024, 15026, 15028, 15030, 15032,
   15034, 15039, 15041, 15055, 15057, 15059, 15061, 15063, 15065, 15067,
   15069, 15071, 15073, 15075, 15077, 15079, 15081, 15086, 15087, 15090,
   15092, 15096, 15097, 15101, 15111, 15121, 15134, 15148, 15160, 15172,
   15184, 15190, 15199, 15205, 15214, 15215, 15219, 15220, 15223, 15233,
   15243, 15255, 15268, 15278, 15291, 15308, 15318, 15328, 15341, 15355,
   15365, 15370, 15378, 15383, 15391, 15392, 15396, 15402, 15410, 15412,
   15416, 15420, 15424, 15431, 15432, 15437, 15438, 15443, 15442, 15452,
   15453, 15458, 15459, 15460, 15465, 15466, 15467, 15471, 15472, 15476,
   15488, 15497, 15507, 15516, 15530, 15531, 15532, 15536, 15540, 15544,
   15557, 15558, 15559, 15560, 15561, 15562, 15563, 15564, 15575, 15584,
   15586, 15588, 15593, 15594, 15595, 15596, 15597, 15601, 15602, 15603,
   15604, 15605, 15606, 15616, 15617, 15622, 15635, 15648, 15650, 15652,
   15657, 15662, 15664, 15666, 15672, 15673, 15675, 15681, 15680, 15720,
   15771, 15772, 15773, 15774, 15784, 15786, 15792, 15797, 15815, 15805,
   15882, 15900, 15924, 15948, 15954, 15995, 15921, 16062, 16082, 16087,
   16095, 16060, 16116, 16121, 16126, 16131, 16136, 16141, 16149, 16150,
   16153, 16162, 16172, 16190, 16191, 16195, 16196, 16197, 16201, 16202,
   16207, 16208, 16210, 16215, 16221, 16230, 16236, 16245, 16251, 16260,
   16277, 16286, 16309, 16313, 16321, 16324, 16328, 16335, 16336, 16341,
   16347, 16351, 16358, 16368, 16375, 16388, 16389, 16393, 16394, 16402,
   16403, 16408, 16416, 16417
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR", "BIT_SYM",
  "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH",
  "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM", "CASCADE",
  "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM", "CHAIN_SYM",
  "CHANGE", "CHANGED", "CHANNEL_SYM", "CHARSET", "CHAR_SYM",
  "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM",
  "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COLLATE_SYM",
  "COLLATION_SYM", "COLUMNS", "COLUMN_SYM", "COLUMN_FORMAT_SYM",
  "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM",
  "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM", "COMPRESSION_SYM",
  "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM",
  "CONSISTENT_SYM", "CONSTRAINT", "CONSTRAINT_CATALOG_SYM",
  "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM",
  "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM",
  "CREATE", "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME_SYM", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388",
  "DETERMINISTIC_SYM", "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM",
  "DISCARD_SYM", "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM",
  "DROP", "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM",
  "EACH_SYM", "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END",
  "ENDS_SYM", "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM",
  "EQ", "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM",
  "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM", "LONG_SYM",
  "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "SERVER_OPTIONS", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "OPTIONAL_SYM", "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM",
  "SECONDARY_UNLOAD_SYM", "RETAIN_SYM", "OLD_SYM", "CONDITIONLESS_JOIN",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'",
  "SUBQUERY_AS_EXPR", "'('", "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'",
  "','", "'.'", "':'", "'!'", "'{'", "'}'", "$accept", "start_entry",
  "sql_statement", "$@1", "opt_end_of_input", "simple_statement_or_begin",
  "simple_statement", "deallocate", "deallocate_or_drop", "prepare",
  "prepare_src", "execute", "$@2", "execute_using", "execute_var_list",
  "execute_var_ident", "help", "$@3", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "server_options_list", "server_option",
  "event_tail", "$@7", "ev_schedule_time", "$@8", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@10", "$@11", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@12", "sp_proc_stmt_statement",
  "$@13", "sp_proc_stmt_return", "$@14", "sp_proc_stmt_unlabeled", "$@15",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@17", "$@18", "$@19", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@20", "$@21",
  "searched_case_stmt", "$@22", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@23", "$@24",
  "searched_when_clause", "$@25", "$@26", "else_clause_opt",
  "sp_labeled_control", "$@27", "sp_opt_label", "sp_labeled_block", "$@28",
  "sp_unlabeled_block", "$@29", "sp_block_content", "$@30",
  "sp_unlabeled_control", "$@31", "$@32", "$@33", "$@34",
  "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "row_types", "merge_insert_types", "udf_type",
  "table_element_list", "table_element", "column_def",
  "opt_check_or_references", "table_constraint_def", "check_constraint",
  "opt_constraint", "field_def", "opt_generated_always",
  "opt_stored_attribute", "type", "spatial_type", "nchar", "varchar",
  "nvarchar", "int_type", "real_type", "opt_PRECISION", "numeric_type",
  "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_column_attribute_list", "column_attribute_list", "column_attribute",
  "column_format", "storage_media", "now", "now_or_signed_literal",
  "character_set", "charset_name", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "opt_default", "ascii", "unicode",
  "opt_charset_with_opt_binary", "opt_bin_mod", "ws_num_codepoints",
  "$@36", "opt_primary", "references", "opt_ref_list", "reference_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "opt_unique", "opt_fulltext_index_options",
  "fulltext_index_options", "fulltext_index_option",
  "opt_spatial_index_options", "spatial_index_options",
  "spatial_index_option", "opt_index_options", "index_options",
  "index_option", "common_index_option", "opt_index_name_and_type",
  "opt_index_type_clause", "index_type_clause", "visibility", "index_type",
  "key_list", "key_part", "key_list_with_expression",
  "key_part_with_expression", "opt_ident", "opt_component", "string_list",
  "alter_table_stmt", "alter_database_stmt", "$@37",
  "alter_procedure_stmt", "$@38", "alter_function_stmt", "$@39",
  "alter_view_stmt", "$@40", "$@41", "alter_event_stmt", "$@42",
  "alter_logfile_stmt", "alter_tablespace_stmt",
  "alter_undo_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "opt_replace_password", "alter_resource_group_stmt",
  "alter_user_command", "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@43", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@44", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "select_options",
  "select_option_list", "select_option", "opt_locking_clause_list",
  "locking_clause_list", "locking_clause", "lock_strength",
  "table_locking_list", "opt_locked_row_action", "locked_row_action",
  "select_item_list", "select_item", "select_alias", "optional_braces",
  "expr", "bool_pri", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "set_function_specification", "sum_expr",
  "window_func_call", "opt_lead_lag_info", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error", "opt_on_empty",
  "opt_on_error", "jt_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as_or_eq",
  "opt_table_alias", "opt_all", "opt_where_clause",
  "opt_where_clause_expr", "opt_having_clause", "with_clause", "with_list",
  "common_table_expr", "opt_derived_column_list", "simple_ident_list",
  "opt_window_clause", "window_definition_list", "window_definition",
  "opt_escape", "opt_group_clause", "group_list", "olap_opt",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "order_list", "opt_ordering_direction",
  "ordering_direction", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "opt_simple_limit", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "select_var_list", "select_var_ident", "into_clause",
  "into_destination", "do_stmt", "empty_select_options", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list", "equal",
  "opt_equal", "row_value", "opt_values", "values", "expr_or_default",
  "opt_insert_update_list", "update_stmt", "opt_with_clause",
  "update_list", "update_elem", "opt_low_priority", "delete_stmt",
  "opt_wild", "opt_delete_options", "opt_delete_option", "truncate_stmt",
  "opt_table", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@45", "show_param", "$@46", "$@47",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where",
  "opt_wild_or_where_for_show", "describe_stmt", "explain_stmt",
  "explainable_stmt", "describe_command", "opt_explain_format_type",
  "opt_describe_column", "flush", "$@48", "flush_options", "$@49",
  "opt_flush_lock", "$@50", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "ident", "role_ident", "label_ident", "ident_or_text",
  "role_ident_or_text", "user", "role", "ident_keyword",
  "role_or_ident_keyword", "label_keyword", "role_or_label_keyword",
  "role_keyword", "set", "start_option_value_list", "set_role_stmt",
  "opt_except_role_list", "set_resource_group_stmt", "thread_id_list",
  "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@56",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@57", "grant",
  "$@58", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password", "create_user",
  "alter_user", "create_user_list", "alter_user_list", "opt_column_list",
  "column_list", "require_clause", "grant_options", "opt_grant_option",
  "begin_stmt", "$@59", "opt_work", "opt_chain", "opt_release",
  "opt_savepoint", "commit", "rollback", "savepoint", "release",
  "union_option", "row_subquery", "table_subquery", "subquery",
  "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@60",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@61", "udf_tail",
  "sf_tail", "$@62", "$@63", "$@64", "$@65", "sp_tail", "$@66", "$@67",
  "$@68", "$@69", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   124,    38,
      45,    43,    42,    47,    37,    94,   126,   983,    40,    41,
     984,    59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4268

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4268)))

#define YYTABLE_NINF -2690

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    5119,  2404,   159, -4268,  -109,  1049, 63942,    46,   673,   673,
     735,  2857, -4268, -4268, -4268, -4268,  3789, -4268, 63942,   159,
     171, 43004, 63942, -4268,   748,  1721,   -43,  1192,   314,  1219,
     159, 63942, -4268,  1037,  1572,   159,   298,  1059, 56000, 43726,
     735, 63942,  2654, 24931, -4268, -4268, 56000,   971,  1016,  1151,
     805,  1533, 63942, 56722,  2389, 19804,  2140,  1336,  1190,  1489,
   -4268,  1131,  1889, -4268,  1832, -4268, -4268,  1552, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, 50224, -4268, -4268,  1390, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
    1763,     2,  1081, -4268, -4268,  -120, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268,   221, -4268, -4268, -4268,
   -4268, -4268, 64664, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
    1861, 63942,  1931, 63942,  1585,  1891, 63942, 54556, 63942, 63942,
    1670,  2081,  2072,  2186, -4268, -4268,  2264, -4268, -4268,   673,
     735, -4268, -4268, 63942, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268,  1636, -4268,  1659, -4268,
   -4268, -4268, -4268,  1846,  2253, -4268, -4268, 63942, 63942, -4268,
    2396,  2229,  2212,  2280,  2089, 54556,    24, 63942, -4268,  1942,
   -4268,  2229,  2229,  2341,  2316,  1992, -4268, -4268, -4268,  2264,
    2548, -4268, 10888,  2081,  2081,  2081, 63942,  2363,  2081,  2081,
    1883, 63942,  2081,  2039,  2081,  2081,  2081,  2405,   673, -4268,
   -4268, -4268, -4268,  2470,  2206,  2165,  2058, -4268,  1999, -4268,
   -4268, -4268,  2278, -4268,  1934, -4268,  2122, -4268,  2309,  1934,
   -4268,   197,  1934,   143, -4268, -4268, -4268,  1934, -4268, -4268,
   -4268, -4268,  1583, -4268, -4268, -4268,   816, -4268,  2308,   167,
   54556,  2509, -4268, -4268, -4268,  2490, 63942,  -109, -4268, -4268,
   14603, -4268,  2465, -4268,  1161,  2534, -4268,   673,  2540,   310,
   63942, 50946, -4268,   673, -4268, -4268,  2530, -4268,   190,    32,
    2161, -4268, -4268,  2300, -4268,  2206,  2441,    54,   199, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, 10888,
    2654, -4268, -4268,    34,  2327,  1453,   179,   200, 46614,  1225,
     219,   972, -4268, 66830, -4268,  2623, 27100, 48058,  2105, -4268,
   57444,  2108,  1065,  6436,  2300, -4268,  1295,   -61, -4268,  1295,
   -4268, 63942, 63942,  -109, -4268,   673, -4268, 63942,  2114, -4268,
    2125, -4268,   468,   468,   468,  2770,   468, -4268,   468,  2158,
    2170,  2188, 19804, -4268,  2197,  2200,  2215, 14603,  2218,  2226,
    2228,  2234,  2236,  2244,  2250,  2252,  2252,  2255,  2258,  2261,
    2265,  -220,  2268, -4268,  2277,  1190,  2285, -4268, -4268,  2286,
    2291,  2299,  2310, -4268,  2319,  2322,  2334, 15346,  2336,  2360,
   -4268, 36491,  2369,  2370,  2392,  2410,  2411,  2417,  2434,  2442,
    2453, -4268, -4268,  2255, -4268, -4268, -4268,  2455,  2456,  2471,
    2473,  2474,  2482,  2483,  2486,  2488,  2492,  2493,  2500,  2501,
    2503,  2507,  2508,  2255, -4268,  -106,  2511,  2512,   -85,  2513,
   -4268,  2517, -4268,   696,  2518,  2252,  2255,  2255,  2519,  2520,
    2521,  2522,  2526,  2527,  2528,  2532,  2533,  2535,  2537,  2538,
    2539,  2541,  2542,  2544,  2546,  2549,  2550,  2551, 19804, 19804,
   19804, 10145, 27823, -4268, 63942, -4268, -4268,  3754, 19804,  1184,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
    2306, -4268, -4268, -4268, -4268,    26, -4268,  2552,  2214, -4268,
   -4268,  2555,  2852,  2799,  1246,  2829, -4268,  2811,  2928,  2342,
     204,  1230,  -120, -4268, -4268,  2347, 63942,  2252, -4268,  2559,
    1913, -4268, -4268,  2422,  2247, -4268,  -134,  3138, -4268,  2558,
   26377, -4268,  3057,  1485,  2942, -4268, 48780,  1485,  2942,  1778,
       2,  1761,  1523,  2935,  3108,   543, 51668,  2556,  1045, -4268,
   -4268, 50946, -4268, 54556, -4268, 63942, -4268,  2894,  2834,  6545,
   63942,  3128, -4268, 63942, 63942,  2768, -4268, 63942, -4268,   231,
   -4268,  1418, 14603, -4268, 63942, -4268, -4268,    97, -4268,   118,
     259,   876,  1974, 63942, 63942, 63942,  2785,  3114, 63942,  2599,
    3302, 63942, 50946, 68996, 63942, 63942,  2229,  1393,  1838, -4268,
   -4268, 14603, -4268,  2571, -4268, 45892,  3989, -4268,  2999, -4268,
    2572, 63942, 63942, 63942,  2946, 63942, 63942, 54556,  2620,  1211,
   63942, 63942, 50946, 63942, 68996, 63942,  2081,  2719,  3686, 29269,
   -4268, -4268, -4268, -4268, -4268,  2769, -4268, -4268, -4268, -4268,
   -4268, 63942, -4268, -4268, 50946, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, 54556, -4268,   866, 50946, 44448,   163, -4268, 65386,
   63942, -4268,  -109, -4268,  2530,  2819, -4268,  2593,   623,  3289,
   -4268, -4268,  3059,  3313, 63942, 63942,  -156, -4268, -4268,  3058,
   -4268, -4268,  2603,  2764, 63942, 63942, -4268, 63942, 63942, -4268,
   -4268, -4268,  2605, -4268, -4268,  2306,  2649, -4268,  2606, 50946,
   50946,   866,  2863,   876,   112, -4268, -4268, 67552, 63942, -4268,
   -4268, -4268, -4268,  3282, 14603, -4268, 50946,  2783,  3084,     4,
   -4268,  2621,  2624, -4268,  2710, -4268, -4268,  2628, -4268,  2629,
   63942,  1317,  1065, -4268, -4268, -4268, -4268, -4268, 63942,  2636,
     972, -4268,  2108,  1065, 25654, -4268,  8659,  3207, -4268,   839,
    2640,  1318,   839, 52390,  2942,   246,   471,   439,   220, -4268,
    3198, -4268,  2858,  2832, -4268, -4268,   478,  2873, -4268,  3234,
   -4268,   107, -4268,  2861,  2942,   839, -4268,  3118,  3250,   969,
    2217,   446,   782, -4268, -4268, -4268, -4268,  2666, -4268,   858,
    3325, -4268,  2673, -4268,  3223, -4268, -4268,  2593, -4268,  2114,
   63942, 63942,  3397, -4268, -4268, -4268,  2677, -4268,  3043,  2868,
   -4268,  2788, -4268, -4268,   130, 14603, 14603,  1720,  3358,  3422,
    3422,  3422,   623,  2806, 14603, 14603, 14603, 14603, 14603, 14603,
    1768,  2703, -4268, -4268,   -56, -4268,  2708, 14603, 14603, -4268,
   14603, 14603, 63942, -4268,  4391, 14603, 14603,   209,  3308, 14603,
   14603, 14603, 10145,  5299, 14603, 14603, 63942,  3439,  2707, -4268,
    2711,  1795, 14603, 14603,  1808, 14603, 14603, 14603, 14603, 14603,
   -4268, 14603, 14603, 19804, 14603, 14603, 14603, 14603, 14603, 14603,
    2712, 14603,  3422,  3422, 14603, 14603,  1950, -4268, -4268, 14603,
    2984,  2984, -4268, 14603,  9402, 14603, -4268, -4268, -4268,  2713,
   -4268, -4268, -4268, 63942,  3422,  3422, 14603, 14603, 14603,  3422,
    3422, 14603,  2723,  2724, 14603, 14603, 14603, 14603, 14603, 19804,
    2727,  2731,  2733,  3358,  3358,  3358,  2735,  1230,   178,  1395,
   -4268,  2975, 14603, 19804, -4268, 19804, 19804, 19804, 19804, 19804,
   20547, 21290, 19804, 19804, 19804, 19804,  3358, 54556, 19804, -4268,
    2306,  2306, 14603, 63942, 14603,  1446, -4268, -4268, 50946,  3343,
   -4268, -4268, -4268,  3329, -4268, -4268,  2748,  2765,  3444, 54556,
    2835,  2767,   154, -4268,  1036, 50946,  2862,  3334,  3338,  3347,
    3348,  3352, -4268,  3354, -4268,  2752,  3368, -4268,  3125,  2960,
    2960, 54556,  2790, -4268, -4268, -4268, 14603, -4268, -4268,  -120,
    1778, -4268, -4268, -4268, -4268, -4268,   -45, -4268, -4268,  -120,
    1778,  1160,  3297, -4268,  1778, -4268,  2942, -4268,  2942,  1778,
   -4268, -4268, -4268, 58166,  1523,  2490, 54556,  3451, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
    3424, -4268, -4268,  3231,  3543, -4268,  2813,  3442,  1065,  1065,
    3442,  1065,  1065, -4268,  2971, -4268,   292, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268,  3399,  3549,  1065,   320,  3154,  1065,
    1065,  3485,  1065,  3165,  3166,  1065,  1065,  1065,  1065,  2988,
    3445, -4268,  1065,  3319,  1095,  1687,  3331,  1065,  3192, -4268,
    1270,  3464,  1065,  1065,  1065,  1065,  1065,  3485,  3195,  3553,
    1065,  1065,  3201,   409,  3202,  3203,  1065,  1065,  1065,  1065,
    1089,  1065,  1065,  3204,  1065,  2987,  2995,  1065, -4268, -4268,
    5196, -4268, -4268, -4268,  2365, -4268, -4268,    -4, -4268, -4268,
    2866,  2872, -4268, -4268, -4268, -4268,  3120, -4268,  2912, -4268,
    3136,  3001, -4268,  2768,    47, 58888, 63942, -4268, -4268,  2898,
    2901,   216, -4268,   623,  2902,  2897, -4268,  5173,  2354, -4268,
   -4268, 63942, -4268, -4268, -4268, -4268,  3033, -4268, -4268, -4268,
   -4268,  2763, -4268,  3589,  3199, -4268, -4268, -4268, -4268,  3480,
   -4268,  3276,  3650,  2938,  3548,  3283,  2229,  3442,  3052,  3662,
    3446, -4268,    56,  2629,  3080,  -150, 63942,  3473,  2229, 63942,
   63942, 63942, -4268, -4268, -4268, -4268, -4268, -4268, -4268, 63942,
   -4268, -4268, -4268, -4268, -4268, -4268,  2768, -4268, 14603, -4268,
   -4268, 59610, -4268, -4268, 14603, -4268, 14603, 14603, -4268, -4268,
   -4268, -4268, -4268, -4268,  2400, -4268, -4268, -4268, 16089, 19804,
    2940, 19804, 19804,  3405,  1096, 39379, -4268, -4268,  2941, 63942,
    1211, -4268, -4268,  2081, -4268, -4268, -4268,   319, -4268, -4268,
     477, -4268,  2939,   114,  2629,  3492, 63942,  2944, -4268,  3400,
    3401,  3402,  3403, -4268, -4268, -4268, -4268,  3404, -4268,  3406,
   -4268, -4268,  2955, -4268, 63942, 24208, 54556, -4268,  2956, -4268,
    3540, -4268,  3326, -4268, -4268,  1715,  3123, -4268, -4268, -4268,
   -4268, 40104,  1136, -4268, -4268, -4268, 63942, -4268,   379,   935,
    3999,  3074, -4268,  2593, 63942,  -109,  -109, 63942, -4268,  3472,
   -4268,   249,  2967, -4268,  2969, 54556, -4268, -4268,   189, 50946,
   50946,  2973, -4268,  3131,    72,  3316, -4268,  3137,  3709,    32,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268,  2980,  3564,  3515,  3360,  3529,  2939, 40104,
   -4268, 63942, -4268, 22758,  3074, -4268,  3539,  3157,  3158,  -185,
   -4268, 54556, -4268,   623,  1065, -4268,  3290,  1711, -4268, -4268,
    3495, -4268,  3314, -4268, 68996, -4268, 54556, 68996,  3555,  3007,
    3010,  3017,  3020,  3021, 60332, 14603, -4268, -4268, -4268,  8659,
    3025, -4268, 60332, -4268, -4268, 19804,  2277, -4268,  2488, -4268,
     623, -4268,  3520,  2306, 14603, -4268,  3038,  2229, 63942, 63942,
   63942, 63942, 63942, 50946, 63942, -4268,  1106,  1106, -4268, -4268,
   -4268,   839, 63942, -4268, 63942,   839, 50946, -4268,   246, 63942,
     839, -4268,  3522,  3214, -4268, -4268, -4268,  3599, -4268, -4268,
    3583,  3044, -4268,  3520, -4268,  3223,   246, -4268, -4268, -4268,
   -4268, -4268,   246, -4268, -4268, -4268,   246,   246,   246,   839,
     839,  1295, -4268, -4268,  3267,   -61,  3728, -4268, -4268,  1727,
   -4268,  1190,   468,  3388, -4268,  3604, -4268, -4268, -4268, -4268,
   -4268,   203,  1107, -4268,  3422,  3062, 14603,  3063,  3066,  3068,
   14603,   447,   396,  1122,  1305,  1811,  1143,   235, 14603,  3070,
   11631, -4268,  3076, -4268, -4268,   247,   359,  1397,  1416,  3077,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
    3620, -4268,   426,  3083, -4268, -4268, -4268, -4268,  3082, -4268,
   14603,  1516,   455,   459,   195,  3088,   480,  1827,  1841,  3085,
   63942, 63942,  3422,  3087,  1528,  1557,  3422,  3089,   490,  1564,
    1847,  1854,  1863,   506,  1876,  3870,  1595,   510,   515,  1603,
     542,   640, -4268,  1613,  3097,  3098,   854,   205,  3422,  3099,
     277,  3096,  3104,  1668, 12374, 13117, 13860,   227,   860, -4268,
    3101, -4268,  2711,  3113,  3116,   309,   212,  1689,  3110,  3117,
    1877,  3170,  3170,  1691,   869,  1706,   869,   880,   124,  3170,
    3170,  3170, -4268, 14603,  3119,  3121,  3122, 54556, 14603,   180,
    3092,  3092,  1396,  1396,  3262,  2856, 15346,   529, 15346,   529,
    3092,  3092,  3092, -4268, -4268,  3358, -4268, -4268, 45892,  3129,
    3130, -4268,  1733,  1728, -4268,   109,   110,  3459,  1946,  3133,
    1065, -4268, -4268, -4268,  3470,  3292, -4268, 68274,  3476,  3304,
   54556,  3312,  3315, -4268, -4268,  3317, -4268, -4268,  1235,  1945,
   -4268,  2183,   288,  -109,  1273,  -109,  2328,  -109,  -109,  1674,
    -109,  3223,  3725,  3764, -4268, -4268,   431, -4268, 28546,  1152,
    3148, -4268, -4268, -4268, -4268, 48780, 48780, -4268, -4268, -4268,
   -4268, -4268,  1915,  3389, -4268,  1778,  1778, -4268, 63942,    52,
   -4268,  3152, -4268, 23483, -4268,  2793,   125, -4268, -4268, -4268,
    2245,  3651,  3344,  2245,  2340,  -109,  1429, -4268,  2889,  -109,
    1429,  2889,  2889, 63942, -4268,  2429,  1065, -4268, 63942,   216,
     159,   216, -4268,  1047, 63942, 37213, 61054, 63942, 63942,   159,
    1273,  2328, 63942,  2328, 61776,   159,  -109,  -109,  -109,  -109,
     431,  1065,  2328, -4268, 61776, -4268,  3652, 63942,  3661, 63942,
   63942, -4268, 54556, 63942, 61776, -4268,  1065,  1661,  2328, 62498,
    1273,  1273, 63942,   159, 63942,  1591,  -109,   159, -4268, 63942,
   -4268, -4268, 63942, 63942,   159,   159,  3494,  1591,  1591,  2646,
   -4268, -4268, 63942,  2328, 61776,  3189, -4268, -4268, 53112, -4268,
    1065,  1065,  3538, -4268, -4268,  7361,  7096,  1905,  1065,  3236,
    3569,  1546, 63942, -4268,  3275,  3281, -4268, -4268, -4268, -4268,
   -4268,   216, 61776, 63220,  3700, -4268, 14603,  3795,  3798,  3799,
    3800,  3801,  3802,  3803,  3805,  3806,  3808,  3809,  3811,  3812,
    3816,  3819,  3822,  3828,  3839,  3840,  3842,  3845,  3846,  3848,
      44, -4268, -4268,  3849,  3852,  3854,  3855,  3856,  3857,  3858,
     176, -4268, -4268, -4268, -4268, -4268, -4268, -4268,   166, 63942,
    3344,  3310,  3380, 63942,  1439, -4268,  3737,  3634,  3442,   228,
    3371, 50946,  3561,  1065,  1170,  1170,  3649, -4268,  4009, 63942,
   63942,  3291,  -129, -4268,  2231, -4268, -4268, -4268, -4268,  2576,
     223, -4268, -4268, -4268, -4268, -4268,   104, -4268,  3295, -4268,
    1190,  1900, 10145, -4268,   272,  3954, 19804, 19804,  3296, 19804,
   19804, -4268,  1776, 63942,   381, -4268,  1439,  1280, -4268,   139,
   -4268, -4268, 50946, -4268, -4268, -4268, -4268, -4268,   114, 54556,
    3285, -4268, -4268, -4268, -4268, -4268,  3223, -4268,  3648,  2969,
   -4268,  3466,  3467,  3471, -4268, 30715, -4268, -4268, -4268, -4268,
   30715,  1448,   866, -4268, 63942, 50946,  3298, -4268,  3306,  3463,
    3393, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268,  3074,  3321, 14603,  2942, -4268,  3316, -4268, -4268,
    3309, -4268,  1418,  2960,   886, 63942, -4268, 14603,  -109, -4268,
    3468, -4268, 63942, 63942, -4268, -4268, -4268, -4268,  1013, -4268,
    3327,  2260, -4268,  2793, -4268, -4268,  3223, -4268,  2649, 24208,
    3668,   866, 50946,  3867, -4268, -4268,  3328,  1190, 22033, 63942,
   -4268,  3336,   961, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268,  3316,  3242,  3859,  3074, 68996, 68996, 68996, -4268, -4268,
    2783,  2783,  3349,   147,  3645, -4268, -4268, -4268, -4268,  2629,
   -4268, -4268,  2793, -4268, -4268, -4268, -4268, -4268,  1065,   623,
   -4268, 25654, -4268,  -109,  3884, -4268,   623,  3345, 63942, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268,  3474,   929, -4268, -4268, -4268,
   -4268, -4268,  3654,  2942,  2873,  3884, -4268,   839,   839, 63942,
   63942,   839, -4268, -4268, -4268, -4268, -4268,  -109, -4268, 63942,
   -4268,  3342, -4268,  3758, 16832, -4268,  3359,  3170,   623,  3170,
    3170,  3170,   421, 14603, 14603,  3947,  3863, -4268, 53834, -4268,
   -4268, -4268, 53834,  3863,  1917,  3170,  3363, -4268,  3864,  3865,
   -4268, -4268, -4268, 14603, 14603, -4268, 14603,   -63, -4268, 14603,
   14603, 14603, 14603, 14603, -4268, -4268, 19804, -4268,  3369,  3364,
    3170, -4268, -4268,  3373,  3170, 14603, -4268, -4268, -4268, -4268,
   14603, -4268, 14603, -4268, 14603, 14603, -4268, 14603, 14603, -4268,
    3170,  3170, 17575, 14603, 14603,  3375,  3170, -4268, 14603, 14603,
   14603, -4268, 14603,  1097, 14603,  1620, 14603,  2339, 14603, -4268,
   14603, -4268,  3170,  3170, -4268, 14603,   423, -4268,  2328, -4268,
    3422,  3170, -4268, 37935, -4268, -4268,   348,  1466,  3376,   348,
    3382, 19804,  3170, -4268, -4268, -4268,  1930, -4268, -4268, -4268,
    3381,   623, -4268,  5299,  5299, -4268, -4268, 14603, 14603, 63942,
    3968,  3390, 19804,  3392, 19804,  2793,  3572,  3395,  4119,  2328,
    2960, -4268,  3290, -4268, -4268,  2629, -4268,  3679,  3349,  1239,
   -4268, -4268, -4268, -4268,   958,  2328,  2328,  2328,  2328,  2183,
   -4268,   792,   943, -4268,   288, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268,  -109,  3976,  3731,
   53834,  4066, -4268, -4268, -4268, -4268, -4268, 14603, -4268, -4268,
   63942,  3478, -4268,  1752, -4268, -4268,  3813, -4268, -4268,   987,
    3316,  1428, 23483, 63942, 40829, -4268,  -140, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268,  -109,  3607,  3608,
    3609,  3610,  3615,  3665, -4268, -4268, -4268,  -109,  2012,  -109,
    -109,  -109,  -109,  2328,  -109,  -109,  1940, -4268, -4268, -4268,
     330, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, 54556, -4268, -4268, -4268, 63942,   819,
   63942,  3420,  3898,  3899,   216, -4268, 63942,  3425,  3551,  3576,
   47336, 77640, -4268, -4268, -4268,  1983,  1042, 61776, -4268, -4268,
   63942, -4268, -4268,  2763,  3434, -4268,  2793, -4268, -4268, -4268,
   -4268, 49502,  -109, -4268,  3614, 63942,  3434, -4268, -4268,   236,
   -4268,  3542,  3619,  -109, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, 77640, 61776,  3449, -4268,  1200, -4268,
   -4268, -4268, -4268, 61776,  3601,  3606, -4268, 63942, 61776, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, 63942, -4268, -4268, 54556, 53834, -4268,  2990,
    1952,  5196, -4268, -4268, -4268,  2866, -4268, -4268, -4268,   477,
    3814,  1065,  2156,   930, -4268,  3742, -4268, -4268,  2125,  3817,
    3818,  3458, -4268,  3462, -4268,  3465, -4268, 58888,   623,  3481,
    2328,  -109,  2328,  2328,  -109,  -109,  2328,  2328,  -109,  -109,
    -109,  -109,  -109,  -109,  -109,  -109,  2328,  2328,  -109,  1472,
    -109,  2328,  5173, -4268,  3483,  3483,  3487,  3487,  3488,  3488,
    3489,  2354, -4268, -4268,   215,  3496,  2274,  1439, 54556,  3499,
   -4268,  3990,  1065,  1065,  1065,  1065, -4268,   344, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,   477,
    2783, 54556, 68996, -4268,  2862,   645, -4268, -4268, -4268, -4268,
   -4268, 63942,  1246, -4268, 63942, -4268, 35047, -4268, -4268, -4268,
   -4268,   182,  1484, -4268, -4268,  1081, -4268,   172,  3732, -4268,
   -4268,  1301,  3500, -4268, -4268,   150, -4268, -4268, -4268, -4268,
   -4268, 19804,   357, 19804, -4268,  3954,  2160, 10145, -4268,   272,
    3954, 41554, -4268, -4268,  3921,  4198, -4268, -4268,  3667, -4268,
   -4268, -4268,  2944, -4268, -4268,    93,  4052,  3475, -4268, -4268,
   -4268, -4268, -4268, 40104, -4268,  1371,  3484, 42279, 50946,  3847,
    2942, 18318,   623, -4268,  2304, 63942,   216,  4008,   119,  3587,
    3960, -4268, -4268, -4268,   623, -4268, 50946, -4268, -4268, -4268,
   63942, 63942, -4268, -4268, 32881, -4268, -4268, -4268, -4268,  3507,
   -4268, -4268,  4086, -4268,  4050, 40104,  2939, 50946, 14603,  3242,
    3510,  3511,  3521,  3523,  3528,  3531, 23483, 23483,  3996,  4003,
   -4268,  3881,  1251,  3881, -4268, 35769, 23483, 23483,  2996,  2125,
    4230,  4062,  3859,  2629,  2629,  2629,  3290, -4268,  4177, -4268,
   -4268, -4268, -4268, -4268,   354, -4268,  8659, -4268, -4268,  1273,
   -4268,    98, -4268, 50946,  -109, 14603, -4268,  3908, -4268, -4268,
   -4268, -4268, -4268,   246,   246, -4268, -4268, -4268,  2328, -4268,
   15346,  1747,  3170, -4268, -4268, -4268, -4268, -4268, 14603,   623,
    2301, -4268,  3544,  3544,  3552, -4268,  3554, -4268,  4224, -4268,
    4042,  3552,  4044,  3544,  3556,  3557,  3558,  3559,  3170, -4268,
    3170, 14603, 14603,  1882,   367,  1898,  4252,  3807,   918,   963,
     417, -4268,  1920,  3903,  3170, -4268,  3170, -4268,  1939,  1941,
    1943,  1960,  1105,  1978,  1953, -4268, -4268, 15346,  1993,   237,
     434,  3170, -4268,  1997,  1129,  1178,  2009, 14603,  2050, 14603,
    2052, 14603,  2054,  2056, -4268, -4268,  2094,  3565,  3565,  3562,
    3567, -4268, 63942, -4268, -4268, -4268, -4268,  3616,  3621,  3170,
    3568,  3568,   348,  3170,   348,   191, -4268, -4268, 63942, -4268,
   -4268, -4268, -4268,  3573, -4268, -4268, 63942,  2791, 63942,  3172,
   -4268,  4265,  3579, 19804,  4154,  3580,  4091, -4268,  3349,  2783,
   -4268,  -109,  2783, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268,   222,  4217,  3073,  4077, -4268, -4268,  -109,  4164, -4268,
   -4268,  1073,  4047, -4268,  3584, -4268, -4268, -4268, 23483,  3074,
   40829,   647, -4268, -4268,  3582, 63942, -4268, -4268, -4268,  4218,
   -4268,  4219,  1787, -4268, -4268,   408, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,  2340, -4268,
    3594,  2793,  3933,  3603, 14603, 63942, -4268, -4268,  3605, 38657,
    1170,  1170,  1975, -4268, -4268, -4268, 77640, -4268,  3544,  3544,
    3544, -4268, -4268,   334,  3552, -4268, -4268,  3928,  3612, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268,   628,  2613, -4268,
   -4268,   628, -4268, -4268, -4268,   170,  1535, -4268, -4268, -4268,
   -4268, -4268, -4268,  3617, -4268,  3544,  3552,  3552, -4268, -4268,
     628,  3544, -4268,  3544,   256,  2959, -4268,   153,  3544,  3544,
    3544,  3618,  3554, -4268, -4268, -4268,  4220,  4222, -4268, 77640,
   -4268, 63942, -4268,  3282,  3282, -4268, -4268, -4268, -4268,  3786,
   -4268, -4268,  1471, -4268, 63942, -4268, -4268, 63942, 63942,   175,
    1013,  3622, -4268, -4268, -4268,  3624,   771, -4268,   -14, -4268,
   -4268,  3492,  1570,  1639,  3774,  2157, -4268, 63942, 63942, -4268,
   -4268, 63220, -4268,  2328, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, 33603, -4268, -4268,
   34325, -4268, -4268,  -161, -4268, -4268,  1916, -4268, -4268, 38657,
    1065,  1065, -4268,   416, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268,  3975, 38657,  1128, 63942,  -109,  2889,  2889,
    2793,  3460, -4268, -4268,  2112,  2629,   288, -4268, -4268,  2912,
    3625, -4268, -4268, 63942,  1980, -4268, -4268,  3993, -4268,  1301,
    3982, 63942, -4268, -4268, -4268, -4268,  3850, -4268, -4268, -4268,
   -4268,  3986, -4268, -4268, 14603,  1184, 19804,   442, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268,  3932, -4268,  4437, 30715,  3784,
    4158, -4268, -4268, -4268,  1410, -4268, -4268,  2277,   623,  1981,
   -4268, 63942,  3991,  3991, -4268,   216,  4008,  4102, -4268,  4127,
   -4268, -4268, -4268, -4268,  3638,  3434,  3635, -4268,  1065,  1843,
    2004, -4268, -4268, -4268,  3636, 18318,  3639, -4268, 24208, 50946,
    4182,  2939,  1182,  2125, 23483, -4268, -4268, -4268, -4268, -4268,
     961,  3633,  3637,  3642,   961, -4268, -4268, -4268,  4125, -4268,
    3881,  3881,  4126,  4129, -4268,  2756,  3337,   134, -4268, 14603,
   14603,  3693,  4062,  3349,  3988,  2793, -4268, -4268,  2942, -4268,
   -4268,  2939, -4268,   623, -4268,  2942,  3074,   839, -4268,  5299,
   -4268, -4268,   623, 14603,  1120, -4268, -4268,   628,  4020, -4268,
    1189, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268,  5299,  5299, -4268, -4268, 14603,
   -4268, 14603,   468,  3655, 14603, 14603, -4268, 14603, -4268,  1253,
    3656,  3759, -4268, -4268, -4268, -4268, -4268, -4268, 14603, -4268,
   -4268,  5299, -4268, 14603, -4268, -4268, 14603, -4268, -4268, 14603,
   14603, -4268,  2098, -4268,  2106, -4268,  2148, -4268, -4268, -4268,
    2793,  3659,  3660,  2328,  3170, -4268,  3663,  4002, -4268, -4268,
   -4268, 14603, -4268, -4268,  3170, -4268,  3170,  4208, -4268, -4268,
    2006, -4268, -4268,  2017, -4268,  4132,  3933, -4268,  3441,  2793,
   63942,  4358, -4268,  3349, -4268,  3349,  -118, -4268,  2793, -4268,
      80, -4268, -4268,  3674, -4268,  -109,  4363,  4366,  4262,  4370,
    1073, -4268,  -103, -4268,   647,  4031,  1477, -4268,  3688, -4268,
     740, -4268, -4268, -4268, -4268,    49, -4268, 38657, -4268, 63942,
    2020, -4268, 38657,  2162,  3683, 38657, 14603, -4268,  2036, -4268,
     138, -4268, -4268, -4268, 47336,   256, -4268, -4268, -4268,  4392,
     366, -4268,  4394, -4268,   628, 53834, -4268, -4268, -4268, -4268,
   -4268, -4268,   468, -4268,  -119, -4268,   628, -4268, -4268,  3804,
   -4268, -4268, -4268,   468,   628, -4268, -4268, -4268, -4268,   934,
   63942,  1471, -4268, -4268, -4268, 54556,  2207,  -109,  3200, -4268,
    3824, -4268,  4301,  1503,  4168,  1439, -4268,  3335, -4268,  4231,
    4172,  4064, -4268,  4402, -4268,   628,  4402,   934,  4065, -4268,
     934,   934, -4268,  3206,  1471, -4268, -4268, -4268, 63942, 63942,
   -4268, -4268, -4268, -4268, -4268,  3701, -4268, -4268,  4067,  3814,
   -4268,  4068, -4268, -4268,  4028, -4268, 14603, 14603,  4076, 63942,
    4083, -4268,  4385,  4442,  3434,  1452, -4268,  2038, -4268, -4268,
   -4268,  2063, -4268, -4268, -4268,  2086, -4268,  3720, -4268,  2097,
   -4268, -4268, -4268, 63942, -4268,  2104,  2109,  2889,  2889,  1672,
    1128,  3729,  2119,  -109,  -109,  -109,  -109, -4268, -4268, -4268,
   -4268, -4268, -4268,  -109,  2783, -4268,  3236, 38657,  3727,  5879,
   -4268,  3952,  3981,  3733,  3734, -4268, 77640,  -109,    19, 63942,
    2163, -4268, -4268, 14603,  4296,  4189, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, 50946,  4090,  4268, -4268,  3074, 18318,   788,  4332, -4268,
   -4268, -4268, -4268,  3924, -4268, 63942, 18318, -4268, -4268,  1843,
   63942, 39379,  3752,  3753,  3507, -4268,  2939, 50946,  -109, -4268,
    1348, -4268, -4268,  4237,  4240, -4268, -4268, 14603,  3762, 14603,
    3763, -4268, -4268,   216,   216, -4268,   134, -4268, -4268,   623,
    1365, -4268,   623, 63942, -4268,  3693, -4268, -4268, -4268, -4268,
    3223, -4268, -4268,  1575,   623,  3765,  3767,  3773,  3775, -4268,
    3776,  2174,  3777,  3779,  2175,  3778, -4268, -4268,  3170,  2182,
    1288,  2194,  4178,  4257, -4268,  4095, -4268,  2184,  1667,  2211,
    2220,  2262,  2271, -4268, -4268, -4268, -4268, -4268, -4268,  3781,
   -4268, -4268,  4477,  4142,   623, -4268, -4268,   224,   348, -4268,
   63942, -4268,  1947,  2201, -4268, -4268,  3793,  3794,  -109, -4268,
   -4268,  2783, -4268,  4416, -4268, -4268, -4268,  4419, -4268,   468,
     468,  4494,   468, -4268,  4496,  4500,  -103, -4268, -4268,  4276,
    4031, -4268,  2230,  3934, -4268,  3933,  2270, -4268, 63942,  2279,
    2281,  1175, 38657,  4185, -4268, -4268, -4268, -4268, -4268, -4268,
   53834, -4268, -4268,  4402,  2307, -4268, -4268, -4268,  2312, -4268,
   -4268, -4268, -4268, -4268,   934, -4268,  3821, -4268,  1248, -4268,
   -4268, -4268, -4268, -4268,  3466,  3467,  3471,  1472,  1472, 14603,
   -4268, -4268, -4268, -4268,  4193,  3941, -4268, -4268, -4268, -4268,
   -4268, -4268, 54556, -4268,  4548,  4543, -4268, -4268, -4268, -4268,
   -4268, -4268,  3823, -4268, -4268, 14603, -4268, -4268,  1897, -4268,
    3933, -4268, -4268, -4268, -4268,   623,  5299,  4484, -4268, -4268,
    4056,  -109,  4425,  1246,  4196, -4268, -4268,  2328, -4268, 63942,
   -4268, 63942, 63942, -4268,  -109,  3829, -4268,  3833,   315, -4268,
   -4268, -4268,  2340,   489, -4268, -4268, -4268,  4346, -4268, -4268,
    2156,  2330, -4268, -4268,  -109,  1639, -4268, 63942,  3282, -4268,
   -4268, -4268, -4268,  3836,  3841, -4268, 63942,  4389, -4268,  2348,
   -4268, -4268,  1410, -4268,  4200,  2942, -4268, -4268,  4323, 63942,
   -4268, -4268, -4268, -4268, -4268,  3843, -4268, -4268,  2939,  4517,
   -4268, -4268, -4268,   623, 63942,   623, 63942,  4397,  4397, -4268,
   -4268, 14603, -4268,  4571,  3851, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268,  4236, -4268, -4268, -4268, 14603, -4268,
   -4268, 14603, -4268, -4268,  4251,  4422, -4268, -4268, -4268, -4268,
   -4268, -4268,  3872,  2328, 14603,  4549,   -76, -4268, -4268,  3170,
   -4268,  3875,  4119, -4268, -4268,  1113,  3349, -4268, -4268, -4268,
   -4268,   468, -4268,   468,   468, -4268, 48780, -4268,  4276,   315,
    1433,  4006, -4268,   489,  2350, -4268,  1175,  1200,  -109,  1065,
   -4268,  1175, -4268, -4268, -4268, -4268, -4268,  3879, -4268, -4268,
     628,   468,   628, -4268, 63942,  4300, -4268, -4268,  2294, -4268,
   -4268, -4268, -4268,  3883,  2343, -4268, -4268,  2356, -4268, -4268,
   -4268, -4268, -4268,  3985, -4268,  3949, -4268, -4268, -4268, -4268,
   -4268, 63942, 63942,  4226,   381,   315, -4268, -4268,  2367,   381,
     489, -4268, -4268,  4577, -4268,  1175, -4268,  4076,  4153, -4268,
   -4268, -4268,  1790, 77640,  4478, -4268, -4268, -4268, -4268,  4019,
    3316,  3891,  3900,  3902,  3904,  1116,  3906,  3909, -4268,  3910,
   63942,  3913, -4268,  2383, -4268, -4268, -4268,  3914,  3911, 14603,
   -4268, -4268, -4268, -4268,  2717, -4268, 19804,  3918,  4506,   951,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,  3920,
    4075,  1065,  4524,  4527,  1065,  1065,  1065,  1065,  3926,  4006,
   -4268,  4507, -4268,  4225, 63942, -4268, -4268, -4268,  2328, -4268,
    1200, -4268, -4268, -4268,  2380, -4268,  1100,  4289, -4268, 14603,
   -4268, -4268,  4131, -4268, 75485,  1468, -4268, -4268,  3931,  3929,
    2140, -4268, -4268, -4268, -4268, -4268,  1439,   381,  2157, -4268,
   77640, -4268, -4268,  3282,  4187, 63942,   431, 66108,  3596, -4268,
   -4268,  4626, -4268,  4627, 63220, 63220, -4268, -4268, -4268, -4268,
   -4268,  3148,  2689,  4194, 14603,  3998,  4001, -4268, -4268,  4000,
    4004,  3718, 63942,  1065,  4156, -4268,  3939, -4268, -4268,   -28,
    -109,  1065,  1065,  1439,  1439,  2793, 63942,  4138, -4268, -4268,
    1065, -4268, -4268, -4268, -4268, -4268, 63942, -4268, -4268, -4268,
     444, -4268,  2393, 14603,  4539,  4061, 63942,  1274, -4268, 76927,
   76927, 63942, -4268, -4268, -4268, -4268,  5618, -4268, -4268,   884,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268,  4665, -4268,  3953, -4268,  4635,  4316,  4639, -4268, 63942,
   -4268, -4268, -4268,  4385,  3282,  2951, -4268,  1057,  3635,  4223,
    4005,  2388, -4268,  7733, -4268, -4268, -4268,  3965,  2390, 14603,
    1242, -4268,  4687,  1494,  1543, -4268,  5299, -4268,   137, -4268,
   -4268, -4268,  4155,  2415,  2960, -4268, -4268,  2426, -4268, 19061,
   -4268, -4268, -4268, -4268,  -109,  -109, -4268, -4268, -4268, -4268,
   54556,  2432, -4268, 54556, -4268,   952,   952,  -125,   623, 14603,
   -4268, 14603,  4073, -4268, -4268,  4513, 63942, -4268, -4268, -4268,
   -4268, 14603, -4268, 75485, 75485, -4268, -4268, -4268, -4268,  4679,
    4327, -4268,  4328,  3977,  4574, -4268, -4268, -4268, -4268,  4580,
   75485, -4268, -4268, 54556, -4268,  4490,  4066,  -109, -4268, 66108,
    4018,  3282, -4268, -4268,  5299, -4268,  2689, -4268, -4268,  4029,
    4238, -4268,  4034, -4268,  2793, -4268,  4155,  4260, -4268,  3939,
   -4268,  2463, -4268,  3954, -4268, -4268,  4006, -4268,  4138, -4268,
   -4268,  4726, -4268,   282,  4355,  4356, -4268, -4268,  3335,   623,
     623, -4268,   521, -4268, -4268,  4489,  4582, 14603,   623, 71880,
    3997, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, 76206, 14603, -4268,   884,  4665, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, 75485,  4691,  4047,
    4517, -4268, -4268,  4570,  1561, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, 19061, -4268, -4268, -4268, -4268, -4268,
    4133,  4613, -4268,  4110, 14603, 75485, -4268,  4591, -4268,  4516,
     623,  4456,  4010, -4268,  4007,   623,  4625, 76927, 76927, -4268,
    2951, -4268,   468,  4522, -4268, -4268,  4051, -4268, -4268,   952,
     952, -4268,   534, -4268,   623, 72601,  4701, 63942, -4268,  4181,
   -4268, -4268, 14603,  4614, 55278, 73322,  4017, -4268, -4268, -4268,
   75485, -4268,  4386,  4022,  -109, -4268, -4268, 14603, -4268,  4607,
    4190, -4268,  4021, -4268, 75485,   623, 75485, -4268, -4268,  4547,
   77545,  2219, -4268,  4025, -4268, -4268,   126, 29992,  4267,   276,
     623,  4718, 75485, 63942, 69717,  4620, 74043,  4581, 63942,  3282,
    4583,  4590, -4268, -4268, -4268, -4268, -4268, 54556,  2480, -4268,
   -4268, 63942, -4268,  -109, -4268, -4268, -4268,   276,   276,  4398,
    4210, -4268, 70438, -4268,  2634,  4331,  4151, -4268, -4268,  4664,
    2954, -4268, -4268, -4268, 31438,  4053, -4268,  1065, -4268, -4268,
    4412, -4268,  4415,    74, 75485, 75485, -4268, -4268, -4268, -4268,
   45170, 14603, -4268, -4268, -4268, -4268,  1131, -4268, 63942, 18318,
    4636,  4098, -4268, -4268, 71159, 74764, -4268, -4268, -4268, 32159,
   -4268, -4268, -4268,  4605, -4268,   623, -4268, -4268, -4268, 45170,
   -4268, -4268, -4268
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1812,  2785,  1140,  2737,     0,     0,     0,     0,     0,     0,
    2739,  2785,   107,  1933,  1934,  1737,  1761,     7,     0,  1140,
     346,     0,     0,   119,     0,  1775,     0,  1986,     0,     0,
    1140,     0,  1980,     0,     0,  1140,  1817,  1965,   323,     0,
    2739,     0,  1197,     0,  1847,  2614,     0,     0,     0,  1830,
       0,  2611,     0,     0,     0,     0,     0,     0,     0,     0,
    2615,     0,     0,     2,     8,    13,    42,     0,    79,    62,
      69,    31,    41,    39,    38,    36,    40,    37,    30,    95,
      86,    65,    25,    15,    20,    17,    27,    16,    19,    23,
      24,    22,    26,    21,     0,    66,    98,  1102,    99,    33,
      83,    28,    29,    32,    76,    82,    77,    78,    91,  1170,
    1168,  1683,  1169,  1180,  1187,  1813,    45,    58,    49,    46,
      48,    52,    51,    60,    61,    47,    59,    56,    57,    50,
      54,    55,    53,    71,    84,   103,     0,    43,   100,    96,
      44,    63,  1935,    64,    85,    80,    73,   104,    74,    92,
      94,    93,    75,   102,    97,    87,    18,    68,    88,    67,
      14,    35,    89,    90,    81,   105,    72,   101,    70,    34,
       0,   977,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1759,     0,   922,  2783,  2784,  2785,  1142,  1141,     0,
    2739,  2083,  1127,     0,  2110,  2181,  2183,  2185,  2186,  2187,
    2188,  2111,  2189,  2112,  2190,  2191,  2192,  2193,  2194,  2113,
    2114,  2195,  2196,  2197,  2198,  2199,  2200,  2115,  2116,  2202,
    2203,  2204,  2205,  2206,  2117,  2118,  2207,  2208,  2209,  2120,
    2210,  2211,  2212,  2215,  2213,  2214,  2121,  2216,  2122,  2217,
    2218,  2220,  2221,  2251,  2222,  2223,  2224,  2225,  2226,  2227,
    2123,  2228,  2229,  2230,  2231,  2232,  2233,  2235,  2234,  2236,
    2124,  2237,  2238,  2240,  2242,  2243,  2244,  2245,  2246,  2125,
    2247,  2248,  2249,  2250,  2126,  2252,  2253,  2254,  2255,  2257,
    2256,  2258,  2259,  2172,  2260,  2261,  2107,  2263,  2264,  2265,
    2266,  2267,  2268,  2269,  2173,  2270,  2271,  2272,  2273,  2127,
    2128,  2129,  2275,  2276,  2277,  2130,  2278,  2279,  2280,  2282,
    2283,  2131,  2284,  2132,  2133,  2287,  2288,  2079,  2289,  2080,
    2290,  2134,  2291,  2292,  2293,  2294,  2135,  2296,  2297,  2298,
    2299,  2300,  2301,  2302,  2137,  2303,  2304,  2305,  2306,  2307,
    2308,  2309,  2311,  2312,  2313,  2314,  2315,  2316,  2318,  2319,
    2320,  2321,  2322,  2324,  2325,  2326,  2335,  2327,  2328,  2329,
    2331,  2330,  2332,  2333,  2334,  2336,  2317,  2337,  2338,  2339,
    2340,  2341,  2342,  2343,  2344,  2345,  2346,  2347,  2348,  2350,
    2349,  2351,  2352,  2353,  2354,  2355,  2356,  2357,  2358,  2359,
    2360,  2361,  2362,  2363,  2365,  2366,  2367,  2368,  2174,  2138,
    2369,  2372,  2373,  2374,  2376,  2377,  2139,  2140,  2141,  2382,
    2383,  2142,  2384,  2386,  2385,  2387,  2389,  2390,  2392,  2391,
    2393,  2394,  2143,  2144,  2145,  2396,  2397,  2398,  2175,  2399,
    2401,  2400,  2176,  2402,  2403,  2404,  2405,  2406,  2407,  2408,
    2409,  2411,  2414,  2412,  2413,  2415,  2177,  2146,  2416,  2147,
    2417,  2178,  2418,  2420,  2419,  2421,  2423,  2424,  2422,  2148,
    2425,  2149,  2427,  2429,  2430,  2432,  2151,  2433,  2434,  2435,
    2437,  2436,  2438,  2152,  2439,  2440,  2441,  2156,  2442,  2443,
    2444,  2157,  2445,  2109,  2158,  2446,  2159,  2448,  2449,  2160,
    2161,  2450,  2451,  2452,  2453,  2454,  2455,  2456,  2457,  2459,
    2460,  2162,  2461,  2462,  2463,  2464,  2163,  2465,  2466,  2467,
    2468,  2469,  2470,  2471,  2180,  2472,  2473,  2474,  2477,  2478,
    2475,  2476,  2479,  2480,  2481,  2482,  2487,  2485,  2486,  2488,
    2489,  2490,  2164,  2491,  2492,  2493,  2495,  2496,  2498,  2497,
    2165,  2166,  2499,  2500,  2167,  2502,  2501,  2503,  2504,  2505,
    2507,  2508,  2509,  2510,  2511,  2512,  2513,  2169,  2514,  2170,
    2515,  2516,  2517,  2150,  2184,  2136,  2168,  2219,  2447,  2310,
    2370,  2285,  2201,  2119,  2262,  2274,  2371,  2381,  2395,  2426,
    2484,  2494,  2364,  2379,  2388,  2286,  2431,  2458,  2483,  2179,
    2506,  2323,  2281,  2108,  2239,  2241,  2380,  2410,  2182,  2295,
    2378,  2153,  2154,  2155,  2428,  2375,   277,  2088,   259,  2089,
    2106,  2105,  2171,     0,     0,  2603,  2602,     0,     0,  2740,
    2741,   603,     0,     0,     0,     0,     0,     0,  1762,     0,
     865,   603,   603,     0,     0,     0,   197,  2768,  2768,  2785,
    2787,  2789,     0,  1759,  1759,  1759,     0,     0,  1759,  1759,
       0,     0,  1759,     0,  1759,  1759,  1759,     0,     0,   112,
    1940,   347,   348,     0,  2649,  2662,  2663,  2659,  2664,  2682,
    2665,  2669,     0,  2661,  2724,  2099,     0,  2668,     0,  2724,
    2666,     0,  2724,     0,  2667,  2672,  2683,  2724,  2660,  2090,
    2098,  2097,  2724,  2519,  2518,  2091,     0,  2651,     0,  2075,
       0,     0,  1777,  1778,  1776,  1060,     0,     0,  1987,  1988,
       0,  1991,     0,  1992,  1995,     0,  2599,     0,     0,     0,
       0,     0,  1143,     0,  1780,  1818,  1781,  1779,  1759,     0,
     313,   322,   324,   325,   321,  2649,     0,     0,  2741,  2752,
    2767,  2762,  2761,  2764,  2765,  2766,  1202,  2763,  2760,     0,
    1198,  1200,  1201,   803,     0,     0,  2548,  2551,  2359,  2387,
    2552,  2489,  2549,  2150,  2550,  2179,     0,     0,  2575,  2520,
       0,  2542,     0,  1907,   325,  1072,  1096,  1080,  1073,  1096,
    1831,     0,     0,     0,  2613,     0,  1989,     0,  1658,  1661,
    1663,  2833,     0,     0,     0,  2828,     0,  2834,     0,  2183,
    2112,  2194,     0,  2052,     0,     0,     0,  1532,     0,  2117,
       0,  2210,  2212,     0,     0,  1227,  1227,   756,     0,     0,
       0,  2234,  2236,  2058,     0,     0,     0,  2049,  2059,  2129,
    2278,  2280,     0,  2051,  2288,     0,     0,     0,     0,  2307,
    2056,     0,     0,  2347,  2350,     0,     0,  2353,  2354,  2355,
    2356,  2035,  1281,   756,  2048,  2055,  2041,  2393,  2394,     0,
    2402,     0,     0,  2432,     0,     0,  2436,  2441,     0,     0,
    2468,     0,     0,   756,  2034,  2487,  2485,  2486,  2488,     0,
    2050,  2164,  2057,     0,  2502,  1227,   756,   756,     0,     0,
       0,  2510,  2511,  2517,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1280,     0,  1359,  2759,     0,     0,  1273,
    1292,  1293,  1295,  1395,  1294,  1300,  1416,  1301,  1417,  1299,
    2045,  1298,  1297,  2046,  2047,  1291,  2070,  2088,  2069,  1307,
    2757,     0,     0,     0,     0,     0,  2758,     0,     0,     0,
       0,     0,     0,     1,    10,     0,     0,  1227,  2096,  2502,
       0,  2095,  2094,  2100,  2706,  2722,  2728,     0,  1074,  1088,
       0,  1172,     0,  2754,  1692,  1684,     0,  2754,  1692,  1203,
    1683,  1203,  1824,  1817,  2129,  1812,  1937,  2075,     0,   914,
     978,     0,   918,     0,  2616,     0,   916,     0,  1901,   985,
       0,     0,   942,     0,     0,  2794,   920,     0,  2738,     0,
    1153,  1164,  1524,   276,     0,   121,   123,  1110,  1755,  1129,
       0,  2744,     0,     0,     0,     0,  2790,     0,     0,     0,
     459,     0,     0,     0,     0,     0,   603,  2794,  2794,  2768,
    2788,     0,  1219,  1736,  1218,  1222,  1239,  1244,  1258,  1220,
    2069,     0,     0,     0,     0,     0,     0,     0,     0,  1763,
       0,     0,     0,     0,     0,     0,  1759,   114,     0,     0,
    2650,  2642,  2680,  2679,  2684,     0,  2681,  2677,  2685,  2686,
    2670,     0,  2656,  2674,     0,  2658,  2676,  2675,  2655,  2671,
    2678,  2657,     0,  2653,  2645,     0,     0,  1646,  2619,     0,
       0,   120,     0,  1061,  1781,     0,  2847,  2844,  1985,     0,
    1996,  1997,  1993,     0,     0,     0,     0,  1900,  1899,     0,
    1981,  2753,  1145,     0,     0,     0,  1782,     0,     0,  1967,
    1974,  1972,  1966,  1969,   314,     0,     0,   344,  2636,     0,
       0,  2645,  2747,  2744,  1190,  1199,   802,     0,     0,   805,
    2574,  1798,  1799,   813,     0,   804,     0,     0,     0,     0,
    2522,  2584,  2581,  2580,  2533,  2528,  2527,  2103,  2702,  2526,
       0,  2561,     0,   809,   811,   810,  2571,   808,     0,     0,
    2489,  2523,  2542,     0,     0,  2521,     0,     0,   803,  1922,
       0,     0,  1922,     0,  1692,  1903,  1908,  1906,     0,  2554,
    1879,  2555,  1899,     0,  1855,  1878,     0,  1832,  1871,     0,
    2556,     0,  1902,     0,  1692,  1922,  1848,     0,     0,     0,
       0,     0,     0,   320,  1101,  1100,  1076,  1097,  1098,     0,
       0,  1079,  1081,  1082,   187,  1829,  2845,  2846,  2612,  1659,
       0,     0,     0,  2040,  2039,  2084,  2830,  2038,  2838,  2840,
    2824,     0,  2827,  2826,  2835,     0,     0,  1651,  1314,  1651,
    1651,  1651,  1533,     0,     0,     0,     0,     0,     0,     0,
    1651,     0,  1353,  1326,     0,  1354,     0,     0,     0,  2060,
       0,     0,     0,  1311,     0,     0,  1524,     0,  1503,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1528,  1530,
    2069,  1651,     0,     0,  1651,     0,     0,     0,     0,     0,
     799,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1651,  1651,     0,     0,  1651,  1367,  2062,     0,
       0,     0,  2061,     0,     0,     0,  2054,  2053,  2036,     0,
    1370,  1372,  1371,     0,  1651,  1651,     0,     0,     0,  1651,
    1651,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1304,  1303,  1305,     0,  2759,     0,  2557,
    1499,  1501,     0,     0,     3,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1306,     0,     0,  2037,
       0,     0,  1411,     0,     0,   545,     4,     6,     0,     0,
    1171,  1186,  1185,    11,   106,  2102,     0,     0,     0,     0,
       0,     0,     0,  2719,     0,     0,   960,     0,     0,     0,
       0,     0,  1108,     0,  1104,  1103,     0,  1077,  1090,  2247,
       0,     0,  1735,  1729,  1732,  1731,     0,  2756,  2755,     0,
    1203,  1693,  1701,  1702,  1700,  1694,  1695,  1699,  1698,     0,
    1203,     0,     0,  1177,  1204,  1206,  1692,  1179,  1692,  1203,
    1828,  1827,  1826,     0,  1824,  1060,     0,     0,  1927,  1928,
    1929,  1930,  1931,  1926,  1925,  1938,  1939,  2792,  2793,  2791,
     815,  2786,   260,     0,     0,   260,     0,     0,  1800,  1800,
       0,  1800,  1800,   525,     0,   524,   609,   479,   481,   482,
     483,   484,   485,   486,     0,  1058,  1800,  1058,     0,  1800,
    1800,  1058,  1800,     0,     0,  1800,  1800,  1800,  1800,     0,
       0,   816,  1800,     0,     0,  1058,     0,  1800,     0,  1042,
       0,     0,  1800,  1800,  1800,  1800,  1800,  1058,     0,     0,
    1800,  1800,     0,  1068,     0,     0,  1800,  1800,  1800,  1800,
       0,  1800,  1800,     0,  1800,     0,     0,  1800,  1007,  1008,
    1018,   605,   632,   633,     0,   912,   913,   979,   981,  1046,
     987,   986,  1015,  1020,  1044,  1045,     0,  1760,  2859,   924,
       0,     0,   923,  2794,  1124,     0,     0,   858,   857,     0,
       0,  1164,  1155,  1526,     0,  1525,   258,     0,     0,  1112,
    1111,     0,  1109,  1137,  1136,  1134,     0,  1135,  1133,  1128,
    1130,  1131,  2743,     0,     0,  2745,  2749,  1279,  1278,     0,
     195,     0,     0,     0,     0,     0,   603,     0,   461,     0,
    2712,  2720,   210,   193,     0,   889,     0,     0,   603,     0,
       0,     0,  2782,  2770,  2777,  2778,  2781,  2780,  2779,     0,
    2776,  2769,  2772,  2773,  2775,  2774,  2794,  1232,     0,  1277,
    1276,     0,  1275,  1274,     0,  1221,     0,     0,  1226,  1225,
    1282,  1283,  1284,  1285,     0,  1286,  1287,  1288,     0,     0,
       0,     0,     0,     0,     0,     0,  1740,  1747,  1742,     0,
    1763,  1744,  1752,  1759,  1767,  1768,  1749,   609,  1765,  1748,
     487,  2700,  1745,  1062,  1754,  2872,     0,     0,   113,     0,
       0,     0,     0,  1957,  1959,  1962,  1958,     0,  1961,     0,
    1960,  1941,  1944,  1950,  1963,     0,     0,   345,   349,   351,
       0,   354,     0,  2673,  2726,     0,     0,  2654,  2647,  2648,
    2646,     0,  2687,  2652,  1647,  1648,     0,  2618,  2272,  2367,
       0,  1654,  2076,  2849,     0,     0,     0,     0,  1994,     0,
    2601,  1646,  2600,  2604,  1139,     0,   109,   110,     0,     0,
       0,  1144,  1148,     0,  1114,  1562,  1971,  1978,  1976,     0,
     312,   337,   332,   340,   334,   336,   335,   341,   342,   343,
     338,   333,   339,   326,     0,     0,     0,     0,  2634,     0,
    2748,     0,  2750,     0,  1654,  1191,  1190,     0,     0,     0,
    2577,     0,  2573,  2572,     0,  2086,   939,     0,  2586,  2587,
       0,  2578,     0,  2579,     0,  2532,     0,     0,  2535,     0,
       0,     0,     0,     0,     0,     0,  2576,  2541,  2540,     0,
    2543,  2544,     0,  2547,  2595,  2596,  2593,  2594,  2597,  2598,
    2592,  2568,  1915,     0,     0,  1877,     0,   603,     0,     0,
       0,     0,     0,     0,     0,  1849,     0,     0,  1870,  1913,
    1914,  1922,     0,  1912,     0,  1922,     0,  1885,  1903,     0,
    1922,  1844,     0,     0,  1836,  1841,  1837,     0,  1843,  1842,
    1845,  1833,  1834,  1915,  1860,   187,  1903,  1869,  1876,  1859,
    1866,  1874,  1903,   863,   862,   861,     0,     0,  1903,  1922,
    1922,     0,  1085,  1086,     0,     0,     0,  1075,  1660,     0,
    1665,     0,     0,     0,  2825,  2841,  2823,  2829,  2836,  2837,
    2822,     0,     0,  1652,  1651,     0,     0,     0,     0,     0,
       0,  1534,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1228,     0,   757,  1377,     0,     0,     0,     0,     0,
    1622,  1623,  1624,  1625,  1633,  1626,  1627,  1628,  1635,  1640,
    1629,  1630,  1636,  1637,  1638,  1631,  1639,  1634,  1632,  1641,
       0,  1621,     0,     0,  1645,  1642,  1644,  1643,     0,  1504,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1651,     0,     0,     0,  1651,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1387,     0,     0,     0,     0,     0,  1651,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1349,
       0,  2072,  2071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1450,     0,  1450,     0,     0,     0,
       0,     0,  1308,     0,     0,     0,     0,     0,     0,     0,
    1270,  1271,  1261,  1262,  1259,  1260,     0,  1264,     0,  1263,
    1267,  1268,  1269,  1272,  1296,  1302,  1322,  1323,  1222,     0,
    1412,  1413,  2073,     0,   546,     0,     0,   549,     0,     0,
    1800,    12,     9,   968,     0,     0,  2101,     0,     0,     0,
       0,     0,     0,  2732,  2730,     0,  2731,  2729,  2692,  2706,
    2723,     0,   943,     0,     0,     0,     0,     0,     0,     0,
       0,   187,     0,  1092,  2085,  1734,   806,  1730,     0,  1688,
    1685,  1687,  1183,  1181,  1173,     0,     0,  1184,  1182,  1175,
    1211,  1210,  1213,     0,  1205,  1203,  1203,  1178,     0,     0,
    1757,  1822,  1825,     0,  1936,     0,   815,   599,   602,   601,
     919,     0,     0,   917,     0,     0,   477,  1801,     0,     0,
     477,     0,     0,     0,   610,  1901,  1800,  1059,   906,   859,
    1140,   859,  1024,     0,   906,     0,     0,     0,     0,  1140,
       0,     0,     0,     0,     0,  1140,     0,     0,     0,     0,
       0,  1800,     0,  1031,     0,   989,     0,     0,     0,     0,
       0,  1032,     0,     0,     0,   990,  1800,     0,     0,     0,
       0,     0,     0,  1140,     0,     0,     0,  1140,  1071,     0,
    1070,  1069,     0,     0,  1140,  1140,     0,     0,     0,     0,
     638,   639,     0,     0,     0,     0,  1011,  1012,     0,   606,
    1800,  1800,     0,   983,   980,   815,   815,     0,  1800,  2867,
     969,     0,     0,   921,     0,     0,  1121,  1157,  1151,  1156,
    1154,  1164,     0,  1612,     0,   278,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     187,   153,   178,     0,     0,     0,     0,     0,     0,     0,
     187,   125,  1756,  1138,  1132,  2742,  2746,   604,   815,     0,
       0,     0,     0,     0,     0,   460,     0,   463,     0,     0,
       0,     0,  2728,  1800,     0,     0,     0,   890,   815,     0,
       0,     0,   259,  2817,     0,  2771,  1217,  1224,  1223,  1230,
    1229,  1231,  1235,  1240,  1233,  1237,     0,  1289,  2189,  1242,
       0,     0,     0,  1245,  1673,  1256,     0,     0,     0,     0,
       0,  2065,  2073,     0,  1047,  1751,     0,  1901,  1750,   488,
     489,   491,     0,  1064,  1063,  1746,  2873,  1743,  1062,     0,
     115,   117,  1955,  1952,  1951,  1953,   187,  1954,     0,  1964,
    1942,  2234,  2487,  2488,   358,     0,   330,   329,   331,   355,
       0,     0,  2645,  2725,     0,     0,  2696,  2699,  2075,     0,
       0,  2640,  1650,  2629,  2625,  2630,  2632,  2628,  2631,  2633,
    2626,  2627,  1654,     0,     0,  1692,  1653,  1562,  2843,  2848,
    1159,  1160,  1164,     0,     0,     0,   111,     0,     0,  1982,
       0,  1146,     0,     0,  1119,  1118,  1120,  1113,  1115,  1116,
       0,     0,  1563,     0,  1975,  1977,   187,  1968,     0,     0,
       0,  2645,     0,     0,  2751,  1193,     0,     0,     0,     0,
    1192,  1194,  1195,  1539,  1538,  1569,  1566,  1565,  1568,  1567,
    1570,  1562,  1646,  1674,  1654,     0,     0,     0,   814,   812,
       0,     0,  2704,     0,     0,  2591,  2583,  2585,  2582,  2534,
    2104,  2703,     0,  2564,  2565,  2566,  2562,  2563,     0,  2569,
    2567,     0,  2546,     0,  1917,  1923,  1924,     0,     0,  1894,
    1888,  1887,  1883,  1889,  1895,  1884,  1898,  1897,  1896,  1857,
    1856,  1852,  1904,  1893,  1891,  1880,  1919,  1892,  1890,  1838,
    1839,  1840,     0,  1692,     0,  1917,  1886,  1922,  1922,     0,
       0,  1922,  1873,  1875,  1099,  1084,  1083,     0,  1664,     0,
    1662,  2831,  2839,     0,     0,  1373,     0,  1461,  1511,  1461,
    1461,  1461,     0,     0,     0,     0,     0,  1374,     0,  1324,
    1375,  1376,     0,     0,     0,  1461,     0,   758,     0,     0,
    1327,  1328,  1319,     0,     0,  1396,     0,  1507,  1329,     0,
       0,     0,     0,     0,  1397,  1529,     0,  1531,  2073,     0,
    1461,  1381,  1334,     0,  1461,     0,  1335,  1398,  1399,  1400,
       0,  1402,     0,  1383,     0,     0,  1386,     0,     0,  1337,
    1461,  1461,     0,     0,     0,     0,  1461,  1339,     0,     0,
       0,  1338,     0,     0,     0,     0,     0,     0,     0,  1341,
       0,  1320,  1461,  1461,  1389,     0,     0,  1391,     0,  1350,
    1651,  1461,  1498,     0,  1442,  1441,  1455,     0,     0,  1455,
       0,     0,     0,  1443,  1440,  1439,     0,  2558,  2559,  2560,
     908,  1500,  1312,     0,     0,  1415,  1403,     0,  1524,     0,
       0,     0,     0,     0,     0,     0,   551,     0,   547,     0,
       0,   935,   939,   936,   937,   938,  2707,  2086,  2704,  2716,
    2695,  2694,  2693,  2690,     0,     0,     0,     0,     0,   961,
     963,     0,     0,   933,   944,   945,   183,  2081,  1719,  1720,
    1718,  1716,  1717,   184,   185,  1709,  1710,  1706,  1707,  1705,
    1708,   186,  1107,  1106,  1105,  1089,  1078,     0,     0,  1094,
       0,  2002,  1728,  1690,  1691,  2067,  1689,     0,  1697,  1696,
       0,     0,  1216,  1213,  1207,  1214,     0,  1174,  1176,     0,
    1562,  2075,     0,     0,     0,  2077,     0,  1726,  1727,  1712,
    1713,  1711,  1714,  1932,  1715,  1725,   600,     0,     0,     0,
       0,     0,     0,     0,   261,   270,  2617,     0,   503,     0,
       0,     0,     0,     0,     0,     0,     0,   215,   510,   927,
     609,  1723,  1721,  1722,   515,   527,  1724,   528,   526,   928,
     514,   516,   929,   480,     0,   675,   907,   860,   906,   991,
     906,     0,     0,     0,   859,   672,   906,     0,   886,   907,
     674,     0,  1053,  1052,  1054,     0,     0,     0,   621,   616,
       0,   627,  1013,  1129,  1014,  1619,     0,   618,   619,   620,
     640,     0,     0,   629,     0,     0,   994,  1029,  1030,  1062,
     611,     0,     0,     0,   653,   654,   652,   634,   641,  1056,
    1055,  1057,   614,   615,     0,     0,  1043,  1681,  1688,   643,
     622,   642,   617,     0,     0,     0,  1037,  1002,     0,   651,
     649,   646,   648,   647,   650,   630,   623,   624,   626,   625,
     637,   628,  1001,  1963,   612,   613,     0,     0,   984,  1058,
    1058,  1019,  1016,  1017,   982,   988,  1021,   511,   512,   487,
       0,  1800,  2869,     0,   971,   973,  2795,  2796,  1663,     0,
       0,     0,  1615,     0,  1616,  1613,  1614,     0,  1527,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   122,     0,     0,     0,     0,     0,     0,
       0,     0,   124,   196,   815,     0,   492,     0,     0,     0,
     205,     0,  1800,  1800,  1800,  1800,   200,   609,   465,   467,
     468,   469,   470,   471,   474,   472,   475,   473,   476,   487,
       0,     0,     0,  2721,   960,     0,   895,   897,   896,   892,
     891,     0,     0,  2001,     0,  2000,   674,   190,   530,   532,
     535,   533,   609,   607,  1792,  1793,   537,     0,     0,   224,
    2812,     0,     0,   455,   454,     0,  1236,  1241,  1234,  1238,
    1243,     0,     0,     0,  1254,  1253,     0,     0,  1246,  1673,
    1257,     0,  1741,  1739,  1049,  1048,  1753,  1766,  1901,  2701,
    1738,   118,     0,  1956,  1949,  1945,     0,   350,   359,   352,
     356,   357,   353,     0,  2727,  2735,     0,     0,     0,     0,
    1692,     0,  1655,  2620,     0,     0,  1164,  1166,  1998,     0,
    2607,  2608,  2606,  2605,  1984,  1983,     0,  1149,  1150,  1117,
       0,     0,  1795,  1794,     0,  1772,  1774,  1783,  1786,     0,
    1979,  1973,     0,   327,     0,     0,  2639,     0,     0,  1646,
       0,  1539,  1569,  1566,  1565,  1568,     0,     0,     0,     0,
    1552,  1560,  1558,  1560,  1555,     0,     0,     0,  1646,  1663,
       0,  1656,  1674,  2531,  2530,  2529,   939,   940,     0,  2524,
    2589,  2588,  2590,  2537,   609,  2536,     0,  2545,  1916,     0,
    1861,     0,  1882,     0,     0,     0,  1854,     0,  1872,  1835,
    1863,  1853,  1851,  1903,  1903,  1850,   188,  1666,     0,  2842,
       0,     0,  1461,  1418,  1462,  1420,  1421,  1424,     0,  1535,
       0,  1316,   770,   770,   754,  1519,   750,  1523,     0,   728,
    1515,   754,  1517,   770,     0,     0,     0,     0,  1461,  1426,
    1461,     0,     0,     0,     0,     0,     0,  1505,     0,     0,
       0,  1321,     0,  1407,  1461,  1430,  1461,  1428,     0,     0,
       0,     0,     0,     0,     0,  1434,  1432,     0,     0,     0,
       0,  1461,  1436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1433,  1435,     0,     0,     0,     0,
       0,  1422,  1469,  1463,  1464,  1465,  1466,     0,     0,     0,
    1453,  1453,  1455,     0,  1455,     0,  1444,  1309,     0,  1502,
    1266,  1265,  1414,     0,  2074,     5,     0,     0,     0,     0,
     550,     0,   560,     0,     0,     0,     0,  2850,  2704,     0,
    2715,     0,     0,  2691,   966,   964,   965,   967,   962,   948,
     947,   949,     0,     0,     0,   946,  1091,     0,     0,  1087,
     807,     0,  2010,  1686,  1212,  1215,  1208,  1209,     0,  1654,
       0,  1654,  1758,  1823,  1822,     0,   264,   267,   265,     0,
     266,     0,     0,   513,   926,   609,   505,   507,   508,   509,
     219,   218,   220,   221,   223,   222,   217,   932,     0,   522,
       0,     0,     0,     0,     0,   906,   855,   856,     0,     0,
       0,     0,     0,   659,   661,   662,     0,   741,   695,   686,
     770,   689,   688,   823,   754,   700,   747,   744,     0,   749,
     746,   721,   720,   737,   719,   724,   708,   823,   823,   707,
     740,   823,   725,   723,   727,     0,   728,   748,   733,   722,
     726,   742,   718,     0,   739,   770,   754,   754,   704,   738,
     823,     0,   731,   770,   664,   774,   706,   830,     0,     0,
     770,   772,   750,   894,   893,  1036,     0,     0,   997,     0,
     998,     0,  1000,   813,   813,   635,  1005,  1028,  1027,     0,
    1006,   636,  1065,   996,     0,  1682,   995,     0,     0,     0,
    1114,     0,   645,   644,   931,  2863,  2860,  2861,     0,  2871,
    2870,  2872,     0,     0,     0,   229,  2797,     0,     0,  1163,
    1165,     0,  1152,   179,   177,   156,   160,   162,   155,   158,
     159,   161,   165,   166,   164,   167,   168,   171,   172,   169,
     163,   170,   157,   175,   173,   174,   154,     0,   127,   128,
       0,   129,   130,     0,   131,   132,     0,   133,   126,     0,
    1800,  1800,   199,   609,   494,   496,   497,   498,   499,   502,
     500,   501,   205,     0,     0,   204,     0,     0,     0,     0,
       0,  1901,   201,  2708,  2709,   211,   943,  2857,  2858,  2859,
       0,   536,   191,     0,     0,   531,   529,   815,   534,     0,
       0,   279,   657,   658,   656,   655,     0,  2818,   458,   456,
     457,     0,  1251,  1247,     0,  1672,     0,     0,  1255,  2066,
    1051,  1050,   490,   116,  1947,     0,  1943,     0,     0,     0,
       0,  2644,  2698,  2697,  2733,  2688,  2621,  1808,  1807,     0,
    1806,     0,  1809,  1809,  1161,  1164,  1166,     0,  1162,     0,
    1999,  2609,  2610,  1147,     0,  1618,  1773,  1815,     0,     0,
       0,  1790,  2064,  2063,  2071,  1803,  1791,  1797,     0,     0,
       0,  2635,     0,  1663,     0,  1577,  1571,  1573,  1574,  1576,
       0,     0,  1539,  1538,  1196,  1554,  1553,  1561,     0,  1559,
    1560,  1560,     0,     0,  1548,  1547,     0,  1609,  1578,     0,
       0,  1667,  1656,  2704,     0,     0,  2570,  1918,  1692,  1868,
    1867,  1881,  1920,  1921,  1846,  1692,  1654,  1922,  2832,     0,
    1351,  1419,  1536,     0,     0,   771,  1512,   823,     0,  1521,
       0,  1522,   752,   751,   729,  1516,  1520,  1518,  1514,  1315,
    1325,  1318,  1317,  1427,  1425,     0,     0,  1357,  1379,     0,
    1358,     0,     0,     0,     0,     0,  1331,     0,  1333,     0,
       0,  1409,  1431,  1429,  1382,  1401,  1360,  1384,     0,  1336,
    1310,     0,  1361,     0,  1366,  1364,     0,  1437,  1340,     0,
       0,  1347,     0,  1345,     0,  1346,     0,  1348,  1388,  1390,
       0,     0,     0,     0,  1461,  1470,     0,  1471,  1457,  1456,
    1447,     0,  1452,  1451,     0,  1448,     0,  1458,   909,  1404,
       0,   556,   543,     0,   541,   545,     0,   538,     0,     0,
     554,     0,   934,  2704,  2087,  2704,  2704,   952,     0,   951,
     957,   954,   953,     0,  1093,     0,     0,     0,     0,     0,
    2003,  2005,     0,  1733,  1654,  1683,  2076,  1820,     0,  2078,
    1654,   269,   268,   274,   275,  1901,   216,     0,   993,     0,
       0,   562,     0,     0,     0,     0,     0,   904,     0,   903,
    1688,   887,   888,  1023,   674,   664,   694,   687,   705,   817,
     828,   826,   820,   730,   823,     0,   824,   825,   691,   703,
     745,   743,     0,   714,     0,   709,   823,   717,   713,   729,
     732,   734,   736,     0,   823,   702,   701,   711,   698,   759,
       0,  1065,   665,   666,   783,     0,     0,     0,     0,   778,
       0,   835,     0,     0,   786,     0,   676,   775,   777,   678,
       0,     0,   831,   830,   693,   823,   830,   759,     0,   773,
     759,   759,  1035,     0,  1065,  1620,  1041,  1040,     0,     0,
    1067,  1026,  1680,  1039,  1038,     0,   999,   631,     0,     0,
    2865,     0,  2868,   941,     0,   239,     0,     0,   970,     0,
     232,   230,   241,     0,  1126,  1122,  1617,     0,   180,   182,
     134,     0,   136,   138,   143,     0,   145,     0,   148,     0,
     150,  2082,   152,     0,   139,     0,     0,     0,     0,  1901,
     203,     0,     0,     0,     0,     0,     0,   462,   521,   517,
     523,   520,   466,     0,     0,   198,  2867,     0,     0,   815,
     608,     0,     0,     0,   280,   282,     0,     0,   289,     0,
       0,  1252,  1249,     0,     0,     0,   367,   362,   370,   364,
     366,   365,   371,   372,   373,   374,   368,   363,   369,   361,
     360,     0,     0,     0,  2641,  1654,     0,  1809,     0,  1769,
    1771,  1158,  1167,     0,  1564,     0,     0,  1784,  1787,     0,
       0,     0,     0,  1804,     0,   328,  2638,     0,     0,  1579,
    1196,  1540,  1556,     0,     0,  1549,  1557,     0,     0,     0,
       0,  1603,  1604,     0,     0,  1607,  1610,  1611,  1575,  2068,
    1678,  1677,  1657,     0,  1189,  1667,  2525,  2705,  2538,  1862,
     187,  1865,  1858,     0,  1537,     0,     0,     0,     0,  1513,
       0,     0,     0,     0,     0,  1508,  1510,  1506,  1461,     0,
       0,     0,     0,     0,  1313,     0,  1405,     0,     0,     0,
       0,     0,     0,  1344,  1342,  1343,   832,  1393,  1392,     0,
    1423,  1467,     0,  1473,  1454,  1446,  1445,     0,  1455,   544,
       0,   542,     0,     0,   540,   548,     0,   555,     0,  2713,
    2717,     0,  2718,     0,   958,   959,   956,     0,  1095,     0,
       0,     0,     0,  2004,     0,     0,  2011,  2013,  1821,  1703,
    1683,   506,     0,   565,   992,     0,     0,   673,     0,     0,
       0,   877,     0,     0,   900,   660,   663,   819,   818,   822,
       0,   821,   690,   830,     0,   910,   710,   735,     0,   712,
     763,   764,   765,   699,   760,   762,   837,  1022,   789,   793,
     795,   794,   790,   788,     0,     0,     0,     0,     0,     0,
     800,   780,   801,  2042,     0,     0,   796,   797,   798,   791,
     787,   792,     0,   776,     0,     0,   785,   779,   692,   696,
     697,   683,     0,   684,   685,     0,  1033,  1025,  1009,  1066,
       0,  2864,  2862,  2866,   240,   228,     0,     0,   972,   974,
       0,     0,   975,     0,     0,  1125,   176,     0,   135,     0,
     144,     0,     0,   149,     0,     0,   140,     0,   866,   519,
     518,   495,     0,   872,   206,   207,   209,     0,  2710,  2711,
    2869,     0,   192,   189,     0,     0,  2813,     0,   813,  2811,
     292,   290,   291,     0,   285,   287,     0,     0,  1248,     0,
    1948,  1946,  2733,  2736,     0,  1692,  1805,  1770,     0,     0,
    1814,  1816,  1785,  1788,  1789,  2073,  1802,  1796,  2637,     0,
    1572,  1551,  1550,  1543,     0,  1545,     0,  1599,  1599,  1608,
    1679,     0,  1675,     0,  1668,  1669,  1188,  1864,  1352,   768,
     766,   769,   767,   755,     0,  1355,  1356,  1380,     0,  1438,
    1378,     0,  1332,  1406,     0,     0,  1385,  1362,  1365,  1363,
    1368,  1369,     0,     0,     0,     0,  1475,  1459,  1460,     0,
     557,     0,   547,   561,   539,  2854,  2704,   950,   955,  2008,
    2009,     0,  2006,     0,     0,  2012,     0,  1819,  1703,   866,
       0,   585,   563,   872,     0,   899,   877,  1688,     0,  1800,
     667,   878,   879,   881,   882,   885,   902,     0,   829,   827,
     823,     0,   823,   761,     0,   841,  2044,  2043,     0,   782,
     784,   789,   679,     0,     0,  1004,  1010,     0,   226,   231,
     242,   243,   925,  2800,  2798,     0,   181,   137,   146,   147,
     151,     0,     0,     0,  1047,   867,   868,   870,     0,  1047,
     873,   874,   876,     0,   194,   877,  2810,   237,     0,   281,
     283,  2819,   289,     0,     0,  1250,  2643,  2734,  2622,     0,
    1562,     0,     0,     0,     0,     0,     0,     0,  1676,     0,
       0,     0,  1509,     0,  1408,  1410,   833,     0,  1472,     0,
    1496,  1495,  1497,  1468,     0,  1449,     0,     0,     0,     0,
    2851,  2852,  2714,  2007,  2015,  2014,  1704,  1811,   668,     0,
       0,  1800,     0,     0,  1800,  1800,  1800,  1800,   580,   586,
     588,     0,   669,     0,     0,   670,   905,   884,     0,   880,
    1688,   715,   911,   716,     0,   840,     0,   845,   781,     0,
    1034,  1003,   233,   976,   394,     0,  2799,  1123,     0,     0,
       0,   213,   869,   202,   214,   875,     0,  1047,   229,   238,
       0,   262,   286,   813,     0,     0,   806,     0,  1646,  1544,
    1546,     0,  1600,     0,  1612,     0,  1671,  1670,   753,  1330,
    1394,  1474,     0,     0,     0,     0,  1490,  1477,  1478,     0,
       0,     0,     0,  1800,     0,  2855,   574,   567,   570,     0,
       0,  1800,  1800,     0,     0,     0,     0,     0,   564,   587,
    1800,   671,   898,   883,   901,   838,     0,   842,   843,   844,
       0,   836,     0,     0,   235,   420,     0,   406,   392,     0,
       0,     0,   396,   244,   247,   245,  1812,   246,   252,     0,
     253,   254,   255,   256,   257,   248,   418,   419,   251,   249,
     250,     0,  2092,     0,  2093,     0,     0,     0,   141,     0,
     871,   208,   212,   241,   813,  2820,   288,  2806,  1810,  2016,
    2364,     0,  1582,     0,  1580,  1602,  1601,     0,     0,     0,
       0,  1485,     0,     0,     0,  1483,     0,  1479,     0,  1476,
    1481,  1480,   558,     0,     0,  2856,   574,     0,   572,     0,
     568,   566,   569,   596,     0,     0,   592,   593,   591,   589,
       0,     0,   582,     0,   839,     0,     0,   680,   234,     0,
     227,     0,     0,   405,   408,     0,     0,   411,   401,   400,
     402,     0,   395,   394,   394,   448,   399,   445,   444,   437,
       0,  2801,     0,     0,     0,  2814,   272,   271,   263,     0,
     394,  2804,  2805,     0,  2808,     0,  2002,     0,  1581,     0,
       0,   813,  1606,  1605,     0,  1486,     0,  1488,  1487,     0,
       0,  1492,     0,  1493,     0,   552,   558,  2854,   571,     0,
     578,     0,   576,   579,   594,   595,   585,   581,     0,   590,
     851,     0,   850,     0,   847,   846,   682,   681,   774,   236,
     421,   432,   435,   427,   407,     0,     0,     0,   397,   394,
       0,   381,   379,   380,   386,   387,   388,   389,   390,   391,
     382,   385,   383,   384,   394,     0,   297,     0,     0,  2802,
    2803,   142,   243,   262,   273,  2821,  2807,   394,     0,  2010,
       0,  1583,  1584,  1587,     0,  1484,  1482,  1491,  1494,   559,
     553,  2853,   573,   575,     0,   584,   583,   853,   854,   852,
       0,     0,   677,     0,     0,   394,   428,     0,   403,     0,
     412,     0,     0,   295,   451,   449,   293,   439,   439,   225,
    2815,  2809,     0,  2018,  1586,  1588,     0,  1489,   577,     0,
       0,   429,   435,   425,   433,   394,     0,     0,   393,     0,
     447,   296,     0,     0,     0,   394,     0,   438,   440,   442,
     394,  2017,     0,  2022,     0,   849,   848,     0,   426,     0,
       0,   424,   404,   409,   394,   452,   394,   306,   305,     0,
       0,   375,   446,     0,   298,  2816,     0,     0,  2029,  1589,
     430,     0,   394,     0,   394,     0,   394,     0,     0,   813,
       0,     0,   294,  2020,  2021,  2019,  2024,     0,     0,  2026,
    2027,     0,  1990,     0,  1596,  1597,  1585,  1590,  1591,     0,
       0,   422,   394,   410,   415,     0,     0,   301,   376,   377,
       0,   303,  2028,  2023,     0,  2030,  2032,     0,  1598,  1592,
       0,  1593,     0,     0,   394,   394,   411,   414,   453,   450,
       0,     0,   299,   300,   311,   310,     0,  2025,     0,     0,
       0,     0,  1595,  1594,   394,   394,   416,   319,   317,   394,
     307,   315,   309,     0,   316,   378,   304,  2031,  2033,     0,
     302,   318,   308
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4268, -4268, -4268, -4268, -4268, -4268,   146, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268,  1718, -4268, -4268, -4268, -4268,
   -4268, -4268,  1806,  1817, -4268, -3706, -4268, -4268,  1816, -4268,
     533,  1825, -4268,   531, -4268,  1842, -4268,   559,  -840, -1856,
   -4268, -4268, -4268, -4268, -4268, -4268,  1275, -4268, -4268,   548,
    1454,  3815, -4268,   536, -4268,   266, -4268, -4268, -4268, -3724,
     168,    -2, -4268, -4268,    28,  3361,    -1, -4267, -4268, -4268,
   -4268, -4268, -4268, -4268,   547, -4268, -4268,   373, -4268, -4268,
   -1547, -4268, -4268, -4268, -4268, -4268, -4268,  -193,  -142,  2362,
   -4268, -4268, -4268,  4813, -4268,  4089, -4268, -2357,  2386, -4268,
   -4268, -4268, -4268, -4268,  2446, -2296, -4268, -4268, -4268,  1249,
   -4268, -4268, -4268,  -384,   311, -4268,   312, -4268,   313, -4268,
     316, -4268,   321,   324,   336,   337, -4268,   339, -4268, -4268,
    -138, -4268, -4268, -4268, -4268,   340, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268,   -38, -4268, -4268,    57, -4268, -4268,   -29,
     341, -4268,     9,   346, -4268,   349, -4268,    36, -4268,    65,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
    1343,  2736,  3917,  2732,  -976, -4268,  1831, -4268, -4268,   931,
   -4268, -4268,  1076, -1338, -4268,  2592, -2229, -2230, -2225, -4268,
   -4268, -4268, -2877, -2857, -1038, -4268, -1014, -2220, -2096,   916,
    1875,  1878,  1871,    10, -4268,  1125,   544, -4268, -4268, -4268,
   -3212,   141, -4268, -3534,   750, -4268, -4268, -4268, -4268, -4211,
   -4268, -4268,    64, -4268, -4268,   131,   136, -4268,   401, -4268,
    2615, -2011,  -473,  2679, -4268, -1600, -1530,   561, -1404, -1387,
   -4268, -4268,  1356,  1901,  1082, -4268,  1083, -1414,  2759, -4268,
   -2695, -4268, -4268, -3852, -4268,  -397,  1521, -4268, -4268, -4268,
   -4268, -4268,  1491,  1493, -1164,  1537, -1412, -4268,   744,   649,
     -70, -4268,   142, -4268,  1044, -4268, -4268, -3566, -4268,   -41,
   -2478,   377, -4268, -4268, -2835, -3340, -4268, -4268, -4268, -3094,
   -3560,  1671, -4268, -4268,   422, -4268, -4268, -4268, -4268, -2812,
   -4268, -1472, -2002, -4268, -4268,   555, -4268,   501,   554, -4268,
     498, -3987, -4268,   549, -1996,  2113, -4268,  3339,  2107, -2217,
   -4268, -3870, -1753,   781, -2025, -4268,  1084, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -2438, -4268, -4268,  1400, -4268,  2235,
    1944, -4268,  2241, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268,  2715, -4268,   724, -1360,  2718, -4268,  2720,   606,
   -2646,  -939, -4268,  -936, -4268, -1386,  3518, -2155, -3432, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,  3071, -4268,
   -4268, -4268, -4268, -4268,  4211, -4268,  3078, -4268, -4268, -4268,
   -4268, -4268,  1497, -4268,  2523, -4268, -4268, -4268, -4268, -4268,
    2120,  3383, -4268, -4268,    42, -4268, -4268, -4268, -4268,  2545,
   -4268, -4268,  3409,  2025, -4268, -4268,  1881,  2547, -1526,  1361,
    -981,  4939,     3,    60,     1,  -992, -4268,  3196, -4268, -4268,
   -2026, -4268, -4268,  4253,  -846, -4268,  3547, -4268, -4268,  2221,
   -4268,  4259,  3351,  2922,   986,  3770, -4268, -1605,   -17, -4268,
   -4268, -1017, -4268, -4268, -4268,  -778, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268,  2305, -4268, -4268, -4268,
    2957,  1710, -2599, -4268, -2444, -1956, -4268, -2475,   516, -4268,
   -4268, -4268, -4268, -4268, -4268,   502, -4268,   232, -4268, -4268,
   -4268, -1659, -4268, -4268, -4268, -4268, -4268, -1044,  2414, -1205,
   -1225, -4268,  3723, -4268, -4268, -4268, -2685, -4268, -2312, -4268,
   -4268, -4268, -4268, -2472, -2390, -4268,  -768,  2536,  2543,  2554,
    2557, -4268, -4268,   160, -4268,   242, -4268, -4268,    40,    43,
   -2103,   684, -4268,   947, -4268, -4268, -4268,   443,  1525,   449,
   -1817, -2190, -1274,  1615, -4268, -4268, -1735,  3782, -1754,  1340,
    1357,     6,  4266,  3825, -2801, -4268,   959, -4268,   556,  1979,
    1885,   679, -4268, -4268,  1582,  -965,   -95,   558, -2819, -4268,
    -967,   -92, -4268, -2102,   660,  -713, -2360, -2052, -2306, -2123,
   -4268, -4268,  2931,  3927, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268,  -476, -1958,  -341,  5054,  3384, -4268,  2690,
    4093,  4094, -4268, -4268,  3978,  1966,  1969, -4268, -3339, -2369,
   -4268, -4268,  -750,  -995,  1026, -4268,  1437, -3902, -2911,  4108,
   -4268, -3251,  1043,  4114,  4115, -3097,  3643, -4268, -4268, -4268,
   -4268, -4268,  2565, -4268, -4268, -4268, -4268, -4268, -4268,  3235,
    4333,  -766, -1728, -4268, -4268, -4268,  1041,  3208,  2566, -4268,
   -1140, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268,  2700,  2176, -4268, -4268, -4268, -4268,
    3332, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268,  1994,   338, -4268,
    1283,   251, -4268,   939, -4268, -4268, -4268, -4268, -4268,   115,
   -4268, -4268,    92, -4268,  -973,  -953,  1188, -1677, -2636, -4268,
    1062, -2981, -2698,   772,  -812, -1325, -1333,   188,  2337,  3514,
   -1286, -4268,   938,  -761, -1416, -2055,  1132,    -6, -4268, -2775,
     -54,   117,   -26,  3305, -4268,    35,  1346,    71, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268,  3955, -4268,  2607,
    5091, -4268, -4268, -4268,  3299,  5096,  -627,  3963,  3318, -4268,
    3324, -4268, -4268, -4268, -1739, -4268, -4268,   210, -4268,  2691,
   -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268, -4268,
   -4268, -4268, -4268, -4268, -4268, -1042,  4410,  5108,  4054, -4268,
   -4268,  2418, -4268, -1701, -1046,  -955, -2610, -4268,  2807,  3738,
   -4268, -4268,  1815, -4268,  2812,   827, -4268, -4268, -4268,  1354,
    4418,  4014, -4268, -4268, -4268, -4268, -4268,  4183, -4268,   -22,
      11, -4268,   438, -4268, -4268, -4268,    85,  5147,  5148, -4268,
   -4268,   174, -4268,  -702, -4268, -4268, -4268, -4268, -4268,  4123,
   -4268, -4268,  4128, -4268, -4268, -4268, -4268,  4130, -4268, -4268,
   -4268, -4268, -4268, -4268,  1730, -4268, -4268, -4268, -4268, -4268,
   -4268,  -442, -4268, -4268, -4268,   368, -4268,  1584, -4268,  1218,
   -4268,  1165,   873,  1673
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    62,    63,   955,  2102,    64,    65,    66,    67,    68,
    1766,    69,  1067,  1708,  2400,  2401,    70,   700,    71,  1597,
    1598,  2320,  2321,  3538,  3971,  3972,  3547,  3985,  3541,  3975,
    3976,  3544,  3979,  3980,  2310,  2311,  3967,  3968,  2312,  1917,
      72,    73,    74,    75,  2328,    76,  3565,  2342,    77,  2826,
    2827,  1642,  3590,  3958,  4562,  3962,  4644,  4740,  4578,  2954,
    4272,  4563,  4564,  4653,  2351,  2170,  4685,  2814,  4768,  2815,
      78,  1013,  4013,  4014,  4015,  4313,  4314,  4315,  4316,  4925,
    4829,  4896,  4926,  5020,  5026,  4949,  5039,  5040,  5041,  5024,
    1135,  5042,    79,   732,   733,  1137,  1793,  2414,  1794,    80,
      81,   663,  1727,  1728,  1729,  1730,  3102,  2415,  3097,  3098,
    4039,  4950,  5022,  4830,  4831,  4747,  4832,  4656,  4833,  4751,
    4834,  4659,  4835,  4836,  4837,  4838,  4917,  4839,  4746,  4942,
    4826,  4827,  4919,  4994,  5017,  4840,  4666,  4741,  4883,  4667,
    4742,  4912,  4822,  4913,  4937,  4990,  4823,  4884,  4940,  4887,
    4841,  4847,  4927,  4842,  4848,  4843,  4671,  4758,  4846,  4756,
    4845,  4923,  4922,  4965,  3065,  3601,  1628,  2337,  3016,  3017,
    3018,  2829,  2830,  1497,  2388,  2389,  2390,  3552,  3553,  3554,
    3374,  3375,  3376,  2176,  2949,  2818,  1498,  1499,  1500,  3022,
    3556,  3557,  3023,  3024,  1501,  3026,  1502,  1503,  2834,  3047,
    3048,  3049,  3050,  3051,  2097,  2098,  3325,  2716,  3322,  4156,
    3800,  4795,  3807,  3850,  3851,  4411,  4721,  4617,  4717,  4618,
    4719,  4801,  4802,  4628,  4731,  4732,  4538,  4539,  4540,  3003,
    2166,  2167,  1023,  1560,  3052,  2185,  1561,  2910,  1562,  1563,
    2925,  2897,  3596,  3402,  3403,  3404,  3901,  3405,  3902,  2193,
    3454,  4245,  4818,  3455,  3456,  3457,  3458,  3459,  3460,  3461,
    3881,  3462,  3721,  3722,  3719,  1275,  4213,  4214,  4215,  3715,
    3716,  3930,  3916,  3917,  3918,  4222,  4239,   915,  4231,  3875,
    1153,  2771,  1175,  1176,  2508,  1812,  1564,  3876,  3877,  3878,
    3924,  3781,  4382,  3920,  3903,  4435,  4554,  4557,  4641,  4814,
    2856,  1590,  2848,  1906,   634,  4464,  4465,  4466,  4469,  4470,
    4471,  4420,  4421,  4422,  4423,  2857,  2346,  4424,  4425,  3039,
    4414,  3857,  3858,  3859,  2858,  3309,  4204,    82,    83,  1480,
      84,  1485,    85,  1482,    86,  1583,  1005,    87,  2270,    88,
      89,    90,    91,    92,  2512,    93,    94,  2743,  2744,  2745,
    2122,  2739,  2740,   960,  2955,  3505,  4452,   989,  1565,  1566,
    2264,  1567,  1568,  4445,  1569,  2873,  1570,  1571,  1572,  1573,
    3083,  3084,  2863,  3085,  2900,  2195,  1104,  2395,  3941,  2243,
      95,    96,    97,   968,  2131,    98,  1231,  1232,  1233,  1427,
    1428,  2133,  2769,  3349,  1226,  1227,  1228,   969,  1425,    99,
    1602,   100,  2467,  2468,  2469,   101,  4275,  2276,   102,   103,
    1609,  1610,  1611,   104,   189,   105,  1124,  1122,  1771,  1772,
     106,  1009,  1010,  2278,   107,  2450,  2451,  1591,  1592,  3638,
     108,   109,  3054,   111,   916,   113,   114,  1804,  1805,  2490,
    2491,   749,   750,   751,  1453,  1454,  1455,  2152,  2783,  2784,
    2785,  1043,  1044,  1665,  1272,  1593,  1046,  1047,  1048,  1666,
    1667,  3921,   918,  1678,  2370,   919,   920,   921,   922,   923,
     924,  3750,  3751,  4126,  2089,  2090,  2091,   925,   926,   927,
    2688,  3792,  3299,  4148,  3213,  3214,  3293,  4353,  3295,  3786,
    3787,  4143,  4386,  4513,  4606,  4701,  4608,  4702,  4709,  4514,
     928,   929,  1370,  1990,  3743,  3247,  4115,  1935,  3234,  1594,
    1595,  1297,  1298,  1263,  2595,  1941,  2492,  3671,  2493,  3165,
    3166,  3167,  3682,  3678,  2471,  2472,  2494,  2495,  2496,  2497,
    2498,  2499,  2500,  4492,  4691,  4692,  4906,  4986,  4987,  4988,
    4989,  4496,  4084,  4085,  4086,  4087,  4088,  2963,  2964,  2965,
    3644,  2874,  1980,  1981,  1988,  1746,  1747,  1936,  2445,  2446,
    3691,   952,   788,   789,  1242,  1919,  4094,  4354,  4355,  3074,
    3171,  4090,  4352,  2906,  2907,   974,   975,  2140,  2775,  2776,
    1440,  1441,  1445,  1446,  4407,  2911,  2803,  2753,  2835,  2804,
    2805,  1432,  1433,   971,  1434,   116,   642,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,  2409,  2159,  1002,   635,  1696,  1697,  1698,
     133,   134,   705,   726,  1127,  3135,  3136,  3650,  3137,  3056,
    3139,  3656,  2177,  2178,  3657,  4062,  3629,  3630,  4049,   135,
     136,  3646,  3647,   727,   137,  2795,  1463,  1464,   138,   781,
    1890,  1891,  1892,  2563,   139,   773,  1216,  3698,  3705,  2549,
    1119,  1504,  1871,  1219,  1220,  1221,  1872,  2534,  3190,  3196,
    1855,   140,   141,  1473,   142,   985,  1474,   143,  1068,  1721,
    3095,  3616,  4024,  1722,  1723,  2410,   144,   729,  1132,  1129,
    1133,  1778,  1777,  2476,  2474,   145,   719,  1120,  2459,   146,
     710,   147,   148,   714,  1759,  1112,  3639,  3057,  3352,  3830,
    3831,  3833,  4176,  4177,  4776,  4933,  4975,  4958,  4978,  4979,
    4982,  5005,  5006,   930,  1246,   931,  4232,   932,   933,   934,
    3651,  1049,  2141,  4091,   935,  3648,   936,  2501,  2160,   607,
    3981,  3982,   961,  1247,  2135,  1816,  3815,   938,   691,  4673,
     963,  1167,  1701,  1168,   609,   610,   611,   612,   695,   149,
     769,   150,  1825,   151,  3184,  3185,  1181,  1185,  1840,  1841,
    1842,  1222,  2067,  1834,  1182,  1843,   772,  1160,  1161,  1823,
    1162,  1821,  1163,  2516,  1851,   152,  1114,   617,  1762,  1763,
    3122,   153,   785,   154,   155,   156,   994,   157,  1751,  2442,
    2443,   158,  1796,   159,  1732,  1741,  1071,   696,   697,  2431,
    2734,  2117,  2118,  2429,  1702,  1169,  3179,  1413,  1631,   965,
    1632,   966,  1082,  1735,  1416,  4044,  3621,   160,   190,   620,
    1021,  1616,  1801,   161,   162,   163,   164,  1439,   939,  2502,
     940,   752,  1037,   636,  1651,  1643,   183,   184,   185,   639,
     640,   186,  1581,  1582,  3963,  4454,  4566,  4773,  4774,  1645,
    4857,  1646,  1647,  3591,  4478,  4853,  4930,  1648,  3062,  4018,
    4581,  4770,   165,  1252,  1248,   798,  1930,  1924,  1926,   166,
     167,  1107,   168,   169,  4520,  4521,  3579,  2269,  3496,  3497,
    3952,  2952,  3501,  2397
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     608,   112,   767,   110,  1468,  1619,   115,  1218,  1154,  1157,
    2041,  1450,   659,  1475,  2136,  1456,   699,   978,  2040,  1995,
     979,  1694,  1186,  1447,  1258,   718,  2454,  2886,  3010,  1299,
    2259,  1684,   734,  2194,   606,   739,   945,   768,   917,  2566,
     734,  1944,  1945,  2778,  2779,  1695,   786,   790,  2417,  1742,
    2503,  3301,  1865,  2219,  2728,  2836,   693,  3114,  2836,  2836,
    1574,   660,   951,  1575,   950,  2284,  2416,   943,   964,   946,
    1997,  2242,   717,  2369,   693,  1898,  2168,   723,  1633,  3353,
    3086,  1983,  2010,  2011,  2012,  2840,  2841,  2014,   962,  3485,
    3303,  2192,   694,  2169,  1798,  2684,  2685,  2387,  2483,  1799,
    2530,  3492,  3138,  2693,  2694,  2695,  3803,  3020,  3019,  1704,
     694,  3168,  3021,  3140,  3840,  3919,   981,  3028,  3330,  3096,
    3235,  2198,  3143,   997,  3236,  2202,  2050,  1424,  3040,  3558,
    1363,  1364,  1365,  3936,  3937,  1457,   987,  2796,   692,  2220,
    1386,  1017,  1019,  1183,  4326,  3215,  3216,  3217,  2868,  3559,
    2556,  2232,  2180,  3652,  4331,  2806,   692,  3506,  1032,  1033,
    2773,  3239,  3183,  2845,  4308,   990,  2393,   608,  2567,  1389,
     608,   962,   998,   987,  2568,   980,  3151,  1603,  2902,  2903,
    2571,  2340,  2711,  2713,  1744,   641,  3255,   987,  3922,  2850,
    3257,  2274,  1809,  3042, -2117,  1387,  1659,  1660,  1659,  1660,
    2789,   992,  2109,  3042,   996,  4164,  3265,  3266,  3294,  3482,
     698,  2836,  3272,  1659,  1660,  1937,  1938,  1939,  1020,   618,
    2457,  1659,  1660,  1659,  1660,  3180,  1949,  1868,  3284,  3285,
    1659,  1660,  3889,  2676,  4268,  1098,  5032,  3291,  1916,   716,
    4790,  1659,  1660,  3090,   722,  1659,  1660,  1897,  2464,  2792,
    1521,  1140,  1089,  1659,  1660,  1659,  1660,  2003,  4310,  1028,
    2007,  3699,  1387,  2836,  1086,  1659,  1660,  3839,  4311,  2774,
    1744,  1006,  4153,  1599,   661,  2766,  3030,  4285,  2024,  2025,
    3598,  -915,  2029,  3066,  3328,  1390,  1491,  3614,  2393,  2335,
    1874,  1521,  3350,  2741,  1604,  1659,  1660,  -609,  1605,  4720,
    2043,  2044,  1051,  1052,  1053,  2048,  2049,  1056,  1057,  1803,
    4057,  1060,  1606,  1062,  1063,  1064,  1612,  1952,  4415, -1649,
    2851,  1984,  -597,  1745,  1985,  3246,  4081,  1659,  1660,  1894,
     986,  1414,  2145,  3883,  3887,  1644,  1652,  3888,  4161, -2282,
    1521,  1237,  4230,  1387,  3061,  1117, -1970,  3817,  1130,  4791,
    3043,   982,  1279,  3533,  4510,  3320,  3897,  3869,   970,  3950,
   -2309,  3365,   613,  4248,   706,  4082,  4250,   999,  3688,  3870,
    1916,  -598,  1229,    42,  1780,  1659,  1660,  1659,  1660, -2444,
    4047,  1011,  1146,  3871,  1818,  1659,  1660,  1128,  1928,  4198,
     972,  3599,  4418,  1506,  2187,  1188,   754,   942,  2507,  1007,
    3359,  4983,  2653,  3474,  4973,  4718,  4511,  4878,  4722,  1745,
    4387,   191,  4312,  3043,  1659,  1660,   191,  2596,  4767,  1493,
    1001,  3945,  1835,  4816,  2668,   711,   724,  1188,   754,  4545,
    2238,  3763,  1141,  1839,  4174,  1659,  1660,  3073,  4984,  1659,
    1660,   187,  2344,  1869,  1659,  1660,  2262,  2143,  -930,  1607,
     970,  1587,  1659,  1660,  2993,  3176,  3177,  2148,  3287,  3493,
    1659,  1660,  3150,   191,  3002,  2345,  1328,  3818,  4175,  4217,
    1959,  3670,  3674,  1659,  1660, -1764,  3067,  1659,  1660,  1588,
    1585,  3685,  3686,  2239,  1299,  3288,  -478,  1332,  4577,  2155,
    4388,  2156,  1188,   754,  2179,  1870,  2181,  2182,  1659,  1660,
    -464,  2465,  4257,   614,  4817,  1243,  4792,  3873,  1659,  1660,
   -2539,  2196, -1910,  1388,  2200,  2201,  3472,  2203,  1280,  1907,
    2206,  2207,  2208,  2209,  1659,  1660,  1600,  2212,  1659,  1660,
     188,  1584,  2222,  1659,  1660, -2623, -2117,  2227,  2228,  2229,
    2230,  2231, -1649,  1131, -1911,  2235,  2236,  1608,  1879,   712,
    3093,  2246,  2247,  2248,  2249,  2197,  2252,  2253,  1827,  2255,
    1659,  1660,  2258,  1636,  -504,  1662,  4418,  1662,  1663,  2240,
    1663,  1027,  -493,  4457,  4735,  3045,  1230,  4419,  3978,  3297,
    1388,  2058,  1662,  3819,  2394,  1663,  1765,  1703,  4872,  3377,
    1662,   725,  1662,  1663,  2144,  1663,  1212,  2593,  4157,  1662,
    1099,  1929,  1663,  3157,  2149,   973,  4512,  3178,  4974,  1415,
    2085,   987,   987,  2157,  1662,  1014,   707,  1663,   944,   962,
    3141,  1030,  1662,  4109,  1662,  1663,  1118,  1663,  1613,  2086,
    2087,  4583,  1329,  4767,  1662, -1901,  1050,  1663,  3045,  1764,
    1054,  1659,  1660,  4429,  1587,  1059,  1101,  1819,  4985,  1774,
    1895,  3869,  1694,  1333,  4879, -2623,  2275,  2366,  1659,  1660,
    1753,  1388,  2391,  3870,  1662,    42,  1534,  1663,  4439,  1873,
    1373,  4885,  1588,  3581,  4632,    42,  1695,  3871,  1391,  1495,
    2286, -2282, -1649,  1953,  4885,  2466,  -609,  1244,  3110,  1188,
     754,  3683,  2742,  3068,   962,  1123,  1662,  3900,  2146,  1663,
    1105,  3562, -2309,  3794,  1155,  3796,  2394,   662,  1087,  3069,
    4716,  3865,  1172,  1177,  1121,   962,  3951,  2847,  3812,  2847,
    4332, -2444,  4050,  2604,  1039,  1706,  4447,  3489,  4684,  3700,
    3615,  2551,  1215,  1336,  3478,  2554,  3306,  1467,  3693,  3839,
    2558,  1029,  3181,  1050,  1662,  3138,  1662,  1663,  4083,  1663,
    3172,  4419,   962,  4579,  1662,  4568,  4569,  1663,  -284,  3600,
     962,   962,  2168,  1875,   768,  2617,  3361,  3169,  3711,  2572,
    2573,  1090,  2458,  5033,  3934,   987,  1236,  3555, -2117,  2169,
    4202,   790,  1142,  1662,    25,  1986,  1663,  2992,  1987,  3088,
    1601,  2110,  4206,  3890,  3733,  2793,  3734,  1096,   693,  2341,
    4209,  4165,  2417,  1283,  1662,  1018,  1018,  1663,  1662,    53,
    3752,  1663,  3753,  1662,  1040,  1601,  1663,  3785,  3053,    53,
    2416,  1662,  3354,  3390,  1663,  3393,  1664,  3767,  1664,  1662,
     983,  4249,  1663,  4793,   694,  1300,   946,  2746,  2696,  2754,
    1601,  4781,  1662,  1664,  3672,  1663,  1662,  2712,  2714,  1663,
    2602,  1664,  3397,  1664,  2884,  1658,   978,  1601,  1371,   979,
    1664,  1601,  4069,  2692,  2892,  3031,  -915,  1662,  1066,  2519,
    1663,  1664,  1659,  1660,  1375,  1664,  4193,  1662,  1659,  1660,
    1663,  2273,  2184,  1664,  2836,  1664,  1458,  1659,  1660,  1459,
    2586,  3714, -1649,  1662,  2932,  1664,  1663,  1662,  1659,  1660,
    1663,  2041,  1662,  2374, -1649,  1663,   962,  -597,  1372,  2908,
     944,  1100,  1367,  2418,  1366,  1337,  1435,  2062,  3471,  3001,
     944,  2063,  2961, -2282,  2168,  1664,  3117,  1115,  2702,  1662,
    3797, -1970,  1663,  1125,  2062,  3872,  1659,  1660,  2621,  1483,
    3645,  2169,   192,  1401, -2309,   951,  2584,  1366,  2654,  2581,
    1404,  2677,  4463,   981,  2355,  2678,  -598,  1664,  2629,   690,
    3873,   713,  2633, -2444,   962,  1481,  2669,  4199,  4480,  1235,
    1448,  3463,  3464,  4763,  1586,  3573,  3764,   690,  2603,  4070,
    1476,  1659,  1660,  3822,  2655,   962,   112,   962,   110,  1484,
    2608,   115,  2241,  2806,  1576,  1238,  3218,  1578,   608,    36,
    3029,   987, -1910,  1692,  4810,  1664,  1630,  1664,  1596,  1908,
    1662,  3502,   980,  1663, -2623,  1664,  2657,  1620,  1621,  1622,
    2658,  1880,  1625,  2111,  1212,  1629,   962,  1662,  1634,  1635,
    1663,  3848,  1579,  -930, -1911,  2184,    42,  3118,  1737,  1669,
    1245,  4194,  3298,  4116,  1664,  1686,   608,  1688,  2674,  1690,
     608,   962,  2675,  4736,   608,  1700,   962,   987,  1736,  1705,
   -1764,  3158,  2184,  1731,  2510,  1664,  1738,  1258,   693,  1664,
    4218,  -478,  3714,  2184,  1664,  1734,  1038,  3339,   962,  3652,
    1687,  2594,  1664,  4096,  1691,  -464,   962,  2184,  1699,   962,
    1664, -2624,  2535,  1750,  1752, -2539,  3603,  2184,  4969,   693,
    3604,  2111,  2609,  1664,   694,  2720,  3738,  1664,   987,   987,
    3739,  2851,  3558,  1797,  1853,  1659,  1660,  3341,   987,   987,
   -2623,   987,  1776,  1659,  1660,  1659,  1660,  5048,  1664,  2377,
    1814,   693,  3559,   962,   962,   694,  4327,  3697,  1664,  1867,
    1659,  1660,  1810,   767,  -609,  3463,  3464,  1659,  1660,  -504,
     962,  2184,  2725,  2334,  1664,  4821,  3746,  -493,  1664,  2184,
    3747,  1659,  1660,  1664,  1828,  2350,  4048,   694,  4911,  2614,
    1659,  1660,  1836,  3765,  2773,   775,  4753,  3766,   768,  3119,
      53,  4022,   693,  3861,  3862,  4023,  3466,   962,  2627,  2464,
    1664,  2844,  1447,  1447,  1094,  1018,  1659,  1660,  2619,  3159,
    1659,  1660,  2620,  4159,  3194,  4160,  4162,  2528,  4073,  4074,
    4001, -2624,   782,   692,  2112,  1183,  2882,  3036,   694,  3160,
     778,  3391,  2773,  2623,  4518,  1151,  3826,  1158,  2250,  3872,
    2398,  2893,  3161,  2635,   790,  1920,   615,  3827,  1912,   616,
    2852,  1662,  4105,  4686,  1663,  1614,  1110,  1662,  4771,  2640,
    1663,  1018,  4418,  2644,  2733,  1387,  1662,  3577,  2645,  1663,
    3331,  1382,  1383,  1384,  1385,  2936,  2937,  1662,  1338,  -814,
    1663,  1664,   978,  2950,  3813,   979,  1300,  3816,  1724,   708,
    4058,    61,  2444,  2774,   193,  2647,  1739,  3332,  1664,  2764,
    1300,  3206,  2112,  1367,  3277,  1366,  2015,  4122,  4637,  3025,
   -2689,  4065,  1761,  1018,  3327,  1662,  1659,  1660,  1663,  2787,
    2788,  4105,  1773,  1018,   701,  1775,  3162,  3964,  3965,  3120,
    4614,  4811,  3096,  3027,  1615,  1909,  1574,  1574,  4591,  1575,
    1575,  2774,  3834,  2084,  4688,  4098,  4551,  2042,  4553,  4754,
    4140,  3020,  3019,  3790,  4765,  2378,  3021,  3795,  3035,  1694,
    1662,  3028,  2386,  1663,  3578,  2106,  2070,   976,  2071,  2072,
    2073,  2074,  2075,  2077,  2079,  2080,  2081,  2082,  2083, -1901,
    3854,  2379,  2099,  1695,  4592,  2444,   619,  2137,  1477,  3105,
    3103,   962,  2847,  2648,  2538,  1151,  3037,  2092,  2194,  2119,
    3157,  1901,   962,  2546,   738,  2748,  2696,  4203,  3340,  1095,
    4713,  2113,  3619,   962,  1637,  1159,  1910,  4441,  3342,   962,
    4106,  2259,  2164,  2761,  3663,  1659,  1660,  3571,  3503,  1156,
    4136,  2251,  4812,  3264,  3592,   962,  1857,  3201,  3202,  3310,
    3311,  3205,  1740,  3687,  1659,  1660,  3146,  4419,  3163,  3145,
    2142,  4863,  2465,  4210,  3660,  2836,  2836,  3696,  3158,  4155,
    2147,  -814,  3587,  4813,  1111,  1488,  2547,  2161,  4163,  3828,
     962,  2749,   715,  4167,   783,  2853,  3602,  2194,  2219,   972,
    4772,  4744,  3999,  4000,  1854,  3706,  3707,  1656,  3113,  4106,
    3939,  3993,   776,  4055,  1662,  1858,  4615,  1663,  2869,  3679,
    2871, -2689,  1662,  4107,  1662,  1663,  2214,  1663,  1437,  2883,
    4638,  1913,  1664,  3313,  4593,  3042,   976,  3468,  1664,  1662,
    3164,  2115,  1663,  1489,  2184,  2898,  1662,  1664,  1859,  1663,
    4755,  4675,  3680,  2261,   720,  2192,  1829,   779,  1664,  3121,
    1662,  4055,  4676,  1663,  1659,  1660,  2929,  1373,  2380,  1662,
    2931,  4211,  1663,  3467,  1008,  3483,  1659,  1660,  3593,  4389,
    3173,  3174,  3175,  3486,  2220,  1902,   777,  3392,  3490,  1096,
    1638,  2797,  4111,  2750,  3195,  1662,  1664,  1152,  1663,  1662,
   -2624,  2114,  1663,  1388,  2194,  1659,  1660,  2263,  4519,  2279,
     987,  1493,  1659,  1660,  3695,  4212,  3159, -1901,   823,  2115,
    3636,  4436,  4437,  1639,   823,   987,  3198,  2652,  4546,  1830,
    2168,  3079,  3358,  2670,  2064,  3835,  3160,  3837,  4123,  4241,
    4639,  1664,  2687,  1659,  1660,  1478,  3377,  2169,   972,  3161,
     709,  1659,  1660,  2691,    42,  1438,  2466,  2798,  4236,  4999,
     987,  1659,  1660,  2352,   608,   608,  3290,  4745,  1659,  1660,
    -533,  1479,  4237,   608,  3829,  1106,  2751,  3343,  3344,  2548,
    1493,  2854,  1050,  1587,   828,  2358,  3038,  3940,  2373,  2215,
     828,  3744,  2371,  2150,  3956,  2375,  1491,  2418,  2353,  2354,
    4502,  2224,  2419,  2956,  4369,  1662, -2624,  2065,  1663,  2382,
    2116,  1588,  4529,   987,   977,  3515,  1659,  1660,  3518,  3519,
    4333,   946,  3522,  3523,  3524,  3525,  3526,  3527,  3528,  3529,
     987,   690,  3532,  3162,  3534,  4530,  3745,  1659,  1660,  1659,
    1660,  2456,   728,  2755,  4108,  3043,  2909,   780,   987,  1300,
     962,  1106,  4428,  2094,  1659,  1660,  2095,  1152,  3681,  2831,
    2793,  4634,   947,  1933,  3300,  2428,  3594,   942,  1860,    42,
    2432,  1375,  1224,  2460,  2461,  1664,  1659,  1660,   987,  3012,
    4677,   987,  1492,  1664,  1460,  1664,   840,  2509,  1212,   962,
    3555,  2187,   840,   962,   962,  1659,  1660,  2344,    53,  2151,
    1664,   948,  2520,  2430,  2281,  3845,   784,  1664,  3186,  2756,
    3378,  1933,   615,  4108,  1662,   616,  4522,  1663, -2689,  2322,
    2345,  1664,  2836,  2428,  2957,  2484,  3986,   987,  2041,  1493,
    1664,  2041,  1273,  1662,  3379,   962,  1663,  3957,  1933,  3653,
    2757,  3992,  2832,  1640,   946,  1831,  1461,  3279,  4571,  1589,
     962,  1933,  3100,  4574,  2348,  3163,  1664,  1212,   768,  1225,
    1664,  3463,  3464,   977,  2225,  4238,   768,  2544,  4145,   855,
    4146,  1495,  3994,  3995,  3996,   855,  2585,  2894,  3758,   702,
    2555,  3595,   608,   608,   608,   987,   608,   962,   987,   693,
    1934,  2597,   693,   856,  2836,  2836,  2552,  2752,   608,    61,
     962,  1340,  3769,   608,  4748,  4749,  2096,  2384,  4610,  2392,
    2216,  2758,  2601,    53,  1861,   942,  2539,  2540,  2541,   953,
    2543,  4289,  4290,  2066,  1018,   694,  3949,  3164,   694,  2580,
    1659,  1660,  2553,  1662,  4453,  1862,  1663,  2557,  1948,  1491,
    1495,  2391,  1018,  3305,  3843,  1662,  1659,  1660,  1663,  3071,
    2598,  3770,  1587,  4785,  4815,  4068,  1580,  2895,   944,  2427,
    1863,  4682,   946,  3101,  4707,  2002,  1664,  3954,  1659,  1660,
    3045,   703,  2447,  1405,  1662,  2452,  1864,  1663,  2006,  4299,
    1588,  1662,  1462,  3989,  1663,  1451,  3498,  1659,  1660,  1659,
    1660,  1659,  1660,  1933,  2759,  3289,  4704,   956,  3560,  1402,
    1832,   690,  1451,  3494,  1417,  1418,  1212,    42,  1659,  1660,
    1641,  2417,  1662,  1668,   944,  1663,  3955,  2427,   954,  1833,
    1662,  2391,  3561,  1663,  1300,  2628,  1659,  1660,   967,  2416,
    1662,  4021,   690,  1663,  4350,  1638,  3326,  1662,  3620,   970,
    1663,  1659,  1660,  2700,   704,  1659,  1660,  3567,  3568,  3569,
    3570,   988,  3334,  3335,  3336,  3337,  2187,  1659,  1660,  4310,
    2896,  4371,  2041,  2833,   690,  3844,  3015,   976,  1649,  4311,
    1106,  1373,  1493, -1822,  2599,  1664,  1452,  4043,  2286,  2542,
    2391,  1407,  2545,  3572,  1767,  1662,  2729,  4010,  1663,  1495,
     882,   962,  3624,  1452,  1664,   993,   882,  3726,  1659,  1660,
    1659,  1660,  1659,  1660,  1659,  1660,  1662,  3575,  1662,  1663,
    4178,  1663,  1669,  1411,  1435,   690,  4180,  4340,  2217,  4274,
    2028,   991, -1822,  1662,  4182,  2770,  1663,  4935,  4936,  4186,
    4586,  3661,  4189,   995,   962,  2218,  4396,  1147,  4351,  3117,
    3384,  3550,  1659,  1660,  2392,  1662,  1659,  1660,  1663,  1419,
    1420,    53,  4928,  4928,  1659,  1660,  1380,  1381,  1382,  1383,
    1384,  1385,   962,  4003,  1662,   615,  2610,  1663,   616,  1448,
    1448,  1408,   693,  3626,  2513,  2216,  3611,  3701,  3610,   972,
    4704,  2041,  2791,  2392,  3645,  2611,  3645,   987,  3891,  2908,
    4004,  3892,  2717,  4391,  1664,  2514,  1659,  1660,  2890,  2881,
   -1901, -1822,  3360,  1412,   946,  4787,  1664,  2842,   694,  3606,
    1659,  1660,  2846,  4312,   721,  2760,  4710,  1587,  2859,  2861,
    2864,  2865,  2866,  1659,  1660,  3471,  2870,  1148,  2875,  3233,
    1659,  1660,  1659,  1660,  2935,  1664,  3233,  2515,  2875,  2718,
    4392,  2875,  1664,  2888,  2889,  1588,   962,  2891,  2875,  1212,
   -1822,  3838,   944,  2901,  4788,  -533,  2904,  2184,  2042,  1659,
    1660,  4233,  2849,  2914,  1000,  4711,  2915,   987,  1659,  1660,
    3063,  2867,  4907,  1664,  4357,  1375,  2930,  2876,  2875,  1491,
    3879,  1664,   962,  4866,  4301,  2618,  4233,  3514,  1640,  3516,
    3517,  1664,  3064,  3520,  3521,  4728,   987,  2631,  1664,  1662,
    4681,  3551,  1663,  3530,  3531,  2905,  2875,  2966,  3535,  2913,
    1659,  1660,  3895,  3896,  1003,  1662,  2917,  2918,  1663,  1659,
    1660,  4325,  4467,  3499,  3960,  3605,  2632,  4472,  2041,  1659,
    1660,  1373,  1495,  2636,  4526,  4970,  2622,  1662,  3500,  3961,
    1663,  1001,  1659,  1660,  4358,  1630,  1664,  4726,  4727,  1659,
    1660,  1081,  2807,   987,  4971,  1092,  1662,   987,  1662,  1663,
    1662,  1663,  4219,  1663,  2643,   962,    42,  1664,  2808,  1664,
    1617,  1618,  2646,  3058,   608,  3091,  2790,  1662,  3070,  3055,
    1663,  3012,  2649,  1004,  1664,  4220,  3078,  1659,  1660,  3075,
    3076,  1659,  1660,  3080,   977,  1662,  3089,   317,  1663,   319,
    2218,  1580,  1410,  1367,  1012,  1366,  1664,  3082,  3059,  4020,
    1662,   946,  1493,  1663,  1662,  1411,   962,  1663,  3673,   946,
    1310,   172,  2194,   962,  4221,  1664,  1662,  3684,  2622,  1663,
     731,  1659,  1660,  1014,  1376,  1377,  4377,  2661,   731,  1731,
    1327,  1659,  1660,  4467,  1731,  1020,   170,  4472,  3104,   962,
    2781,   791,  2782,  1341,  1342,  1641,  1188,   754,  2679,  1015,
    2686,  2916, -1901,  4515,  4869,  4103,  2260,  1662,  1016,  1662,
    1663,  1662,  1663,  1662,  1663,  2689,  1663,  1024,  2819,   987,
    2755,  1903,  1904,  2836,  2423,  1488,   987,   987,  2424,  1022,
    2958,  4112,  4113,  3132,  3133,  3149,  2578,  2710,   792,  4467,
    2579,  2708,  3055,  1300,  4472,  1412,   962,  2709,  1905,  3053,
      53,  1662,   987,  3156,  1663,  1662,  3710,  4128,  1663,  1367,
     767,  1366,  1025,  1662,  1085,  3708,  1663,  1088,   946,   946,
    2836,  2836,  1091,  2735,  2736,  1375,  1031,  1093,  2737,  2738,
    2809,  1491,   171,  1489,  2708,  4251,  2756,  3005,  4253,  4254,
    3081,  3009,  4121,  1249,  1250,   768,  1253,  4493,  1254,  4494,
    1664,   172,  3192,  3025,  1555,  1662,  3281,  1556,  1663,  1073,
     693,   693,   693,   793,  1155,  1026,  1664,  2757,  1155,  1662,
    2600,  1035,  1663,  1034,  2286,  3987,  3988,  3027,  1036,  1212,
     170,  2820,  1662,   987,   987,  1663,  2624,  4102,  1664,  1662,
    2286,  1662,  1663,  3207,  1663,  1055,   694,   694,   694,  2362,
    2625,   944,  2780,  2781,  2000,  2782,  2637,  1664,  2810,  1664,
    2286,  1664,   962,  2638,  1659,  1660,   962,  2286,  1662,  2357,
    1058,  1663,  2639,  1061,   173,  1069,  2286,  1662,  1664,  3253,
    1663,  4347,  4348,  4066,  2811,  2641,  2682,  1065,  2758,  2286,
    2286,  3737,  1074,  2947,  2948,  1070,  1664,  1075,  1378,  1379,
    1380,  1381,  1382,  1383,  1384,  1385,  3869,  3740,  3015,  3463,
    3464,  1664,  1495,  1761,  1493,  1664,  1072,   174,  3870,  1662,
    1773,  3128,  1663,  1079,  3983,  3984,  3238,  1664,  1662,  3748,
    2286,  1663,  3871,  1080,  1376,  1377,  1491,   740,  1662,  3307,
    1076,  1663,  1081,  2286,  1188,  3884,  2812,  3296,  3754,  3387,
    3755,  1662,  3756,  3388,  1663,  1083,  1077,  1084,  1662,  1097,
     175,  1663,  3760,  2448,  2449,  3317,  2286,  3319,  1664,  3757,
    1664,  2759,  1664,  3314,  1664,  1781,  1102,  4294,  4295,  4296,
    4297,  1109,  1078,  3550,  3863,  1782,  1155,  3759,  3864,  4009,
    4045,  1103,  2041,  3864,  4046,  1783,  1662,  2041,  1113,  1663,
    1662,  4099,  3762,  1663,  2821,  3653,  3768,  1116,  4100,  1784,
    1785,  1786,  1664,  4059,  2822,  4149,  1664,  4060,  3771,  4150,
    4602,  2823,  1492,    42,  1664,  1787,  4151,  3203,  3204,  4184,
    4150,  3131,   690,  4185,   962,   690,  1617,  1618,  2755,  4117,
    1662,  2928,  2363,  1663,  2161,  4191,  1126,  4276,  2813,  4192,
    1662,  4277,  1134,  1663,  5015,  5016,   987,  2161,  3364,  3773,
    3389,  3775,  4603,  3777,   741,  3778,  1664,    42,  4319,  1493,
    3969,  1136,  4278,   946,   794,  3631,  4279,  3378,  2926,  2927,
    1664,   823,  2313,  2314,  2315,  2316,  2317,  2318,  2319,  1139,
    4603,  1212,  1603,  1664,   176,  4280,   795,  1155,  1146,  4281,
    1664,  3379,  1664,  3779,  2756,  1170,  4283,  4133,   962,   823,
    4284,  1487,  2846,  4286,  2846,  4134,  2418,  4287,  4288,  1178,
    2859,  1184,  4192,  4694,  3406,  2824,  3158,  1240,  4293,  1664,
    1488,  2875,  4192,  1241,  3469,  2757,  1251,   796,  1664,   170,
    4179,  2943,  2946,  3551,   742,   962,  3713,   828,  1245,  3477,
    3132,  3133,  2509,  1155,  5010,  5012,  1881,  4135,  1378,  1379,
    1380,  1381,  1382,  1383,  1384,  1385,  1255,    53,  4056,  2875,
    1395,  4187,  4318,   177,  1495,   828,  2286,  2875,  1256,  4205,
    1664,  2875,  2875,  4361,  4367,  2797,  1882,  4364,  1489,  1664,
    4205,  4370,  2760,  4376,  3132,  3133,  1257,   987,   797,  1664,
     962,   962,  1373,  4372,  4699,  1259,  2758,  2286,  1260,  1604,
    4393,    53,  1664,  1605,  4185,  2031,  2032,  2569,  2570,  1664,
    4378,  3560,  2825,  1261,  3563,  1396,  1264,  1606,  1393,  4379,
     978,  2279,  4604,   979,  1265,   621,  1266,  1883,   178,  4409,
     179,  1884,  1267,  4192,  1268,  3561,  1212,  3574,  1490,   840,
    -813,  2798,  1269,  1788,   172,  1397,  3904,  1664,  1270,  2364,
    1271,  1664,  4448,  1274,  3159,  4322,  1276,  1373,  3134,  1277,
    1789,  4380,   962,  1278,   180,  2365,  1281,   840,  1398,  4413,
    4381,  2797,  2799,  4192,  3160,  1282,   181,  1744,  4416,  2759,
    4417,  4338,  4192,  1284,  1285,   962,  1668,  3161,  2807,  1286,
    3905,  1664,  1679,  4558,  3906,   987,  3907,  1287,   987,  1399,
    3406,  1664,  3134,  3055,  2808,   690,  4430,   951,  1288,  1366,
    4431,  4432,  3055,  3055,  -674,  4431,   622,  1289,  3055,  1495,
    1290,  2747,   855,  2747,  2187,  2762,  2763,   693,  2765,  4475,
    4139,  1491,  1291,  4192,  1294,  3314,  2755,  2798,  1367,  2188,
    1366,  1400,  4560,  2800,  3908,  4766,   856,  4485,  1403,  4543,
     855,  2286,  -864,  4544,  1607,  4561, -1649,  2428,  1295,  4185,
    3643,  1752,   962,   694,  1964,  1436,  4573,  1301,  1302,   987,
    3388,  3162,   182,  2828,   856,  3055,   317,  2838,   319,  4635,
     962,  1018,  4599,  4636,  2875,  2042,  1885,  4778,  3654,  4783,
    1303,  4779,  4737,  3511,  4077,   951,  1375,  1366,  1790,  2428,
    1373,   962,  2756,   623,  2877,  2878,  2879,  2880,  1304,  1305,
     987,   987, -1649,  3717,  4796,  1306,  1745,  1492,  4150,   987,
     987,   987,  -813,  3728,  1409,  4798,  2801,   946,   946,  4799,
    1426,  4807,  1307,  2757,  2912,  4808,   946,   946,   946,  2831,
    1308,   743,   744,  -674,   745,   746,   747,   962, -1649,  2189,
   -1649,  1309,  1608,  1311,  1312,  2797,  4399,  4400,  3821,  4402,
    1791,  1375,  4873,   748,  1493,  1886,  4874,  4844, -1649,  1313,
    1968,  1314,  1315, -1649,  3872,  4408,  2809,  1792,   976,  5003,
    1316,  1317,  -834,  5004,  1318,  1587,  1319, -1649,   725,  3580,
    1320,  1321,  3582,  3163, -1649,  3885,  3452,   803,  1322,  1323,
    2760,  1324, -1649,   803,  2758,  1325,  1326,   624,  1680,  1330,
    1331,  1334,  2041,  1588, -1649,  1335,  1339,  1343,  1344,  1345,
    1346,  2798,  2832,  1744,  1347,  1348,  1349, -1649,  1466,  1887,
    1350,  1351, -1649,  1352,  1681,  1353,  1354,  1355,  1486,  1356,
    1357, -1649,  1358,   882,  1359,  1494,  3296,  1360,  1361,  1362,
    1392,  2427,  2799,  1394,  2810,  1376,  1377,  1406,  4797,  1577,
    1100,  1580,  3798,  3635,  1623,  3164,  3808,  1624,  1626,  1627,
    3801,   882,  3801,  1373,  1658,  4224,  1685,  1617,  1618,  1969,
    2811,  4224,   823,  1972,  1689,  1617,  1618,  2759,   823,  1693,
    1973,  3909,  1733,  2427,  1707,  1755,  1756,  3910,  4915,  1757,
    3868,  1758, -1649,  1760,  1375,  1768,  1769,  1770,  1779,  1795,
    1800, -1649,   987,  1811,  3836,  1815,   625,  1817,  4488,  2042,
    1376,  1377,  3904,  2800,  1820,  1617,  1618,  1822,  1824,   946,
    1826,  4078,  1827,  1852, -1649,  3894,   626,  3911,  1856,   827,
    1148,  1212,  2812,  3899, -1649,   827,  4700,  2802,   828,  2846,
    3927,  1888,  1876,  3860,   828,  1878,  3125,  4964, -1649,  4966,
    1893,  1877,  1745,  1373,  1896,  1899,  4242,  1900,  -674,  1911,
    3906,  1974,  3907,  1914,  4605,  4992,  1915,  1916,  1921,   833,
    1922,   627,  1923, -1761,  4548,   833,   628,  1925,  4523,  1387,
    4524,  4525,  4789,  1889,  1927,  1933, -1649,  3158,  1417,  1418,
    1940,  1682,  1951,   690,   690,   690,  2801,  1954,  1989,  1999,
    2000,  2022,  2039,  1447, -1649,  2001,  3912,   629,  4552, -1649,
    3908,   630,  2051,  2052,  1495,  3935,  2059,  5034,  5035,   631,
    2060,  3188,  2061, -1649,  1401,  1976,   730,  2068,  2042,  2100,
   -1649,  3943,  3944,  2833,  2813,  2101,  1488,  2103, -1649,  2107,
     840,  2104,  2105,  2108,  2123,  2129,   840, -1649,  2124,  2121,
   -1649,  2875,  2875,  1376,  1377,  2966,  3913,  2125,  2126,  2191,
    4864,   632,  2127, -1649,  2128,  2747,  1683,  1375, -1649,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1385, -1649,  2130,  2132,
    3802,  3973,  2134,  2138,  3977,   689,  4620,  3012,  2165,  4623,
    4624,  4625,  4626,  3860,  1489, -1649,  2153,  2171,  2760,  1521,
    2172,  2174,  2175,   689,  2183,  2199,   851,  2186,  3860,  2187,
    3997,  4609,   851,  3914,  3969,   633,  2204,  2205,   853,   937,
     941,  2210,   854,   855,  2919,  3159,  2920,   987,   854,   855,
    2213,  2211,  1373,  1419,  1420,  4016,  1380,  1381,  1382,  1383,
    1384,  1385,  2221,  2223,  -674,  3160,  2233, -1649,  -834, -1649,
    2226,  2234,  2237,  2244,  2245,  2254,  2256,  1375,  3161,  2265,
   -1649, -1649,  1731,  -674,  2257,  2266,  1977,  1744,  4714,  2921,
   -1649,  2267,  2268,  2187,  2041,  2042,  4724,  4725,  2271,  2272,
   -1649, -1649,  4980, -1649,  1979,  4733,  2282,  3013,  2188,  2283,
    2286,  2285,  2922,  2323,  3014,  4541,  2325,  2326,  2041,  4703,
    3055,  2327,  1300,   962,  2329,  2331,  5007,  2330,   987,  2332,
    1488,  2333,  1421,  1422,  1423,  3915,  2336,  2802,  4769,  2338,
    4507,  2041,  2343,  2349,  2339,   946,  1376,  1377,  2372,  4980,
    2376,  2923,  2392,  1709,  2396,  2383,  2399,  2402,  2403,  2404,
    2405,  2406,  3162,  2407, -1649,  2041, -1649,  1491,  2408,  2420,
    2421,  1617,  1618,  5007,  2422,  3346,  2425,  3909,  2453,  2444,
    2455,  3012,  1601,  3910,  2463,  4079,  2462,  2470,  1489, -1649,
    2473,  1709,  2475,  2478,  2479,  2480,  2482,  1378,  1379,  1380,
    1381,  1382,  1383,  1384,  1385, -1649,  1803, -1649,  2481, -1649,
    2505,  2506,  -674, -1649, -1649,  3366,  2511,  1159,  2189,  2522,
    1158,  2523, -1649,  3911,  2524,  3373,  1745,  3380,  3381,  3382,
    3383,  2525,  3385,  3386,  2526,  2527,  1376,  1377,  2531,  2533,
    2537,  4008,   874,  4541,  2559,  2560,  4225,  2562,   874,  4226,
    2561,  2575,  4225,  1492,  1587,  4226,  1375,  2564,  2577,   880,
   -1649, -1649, -1901,  2582,   882,   880,  2797,   883,  2583,  4166,
     882,  2587,  2589,   883,  3801,  2590,  1710,  2591, -1649,  2605,
    1711,  3013,  1588, -1649,  3163,  2607,  2612,  2613,  3014,  2622,
    3475,  1155,  2615,  2626,  3015,  2616,  2630,  1385,  2634,  4200,
    1493,  3481,  3912,  4703, -1649,  4633,  2650,  2651,  2656,  2659,
    2671,  3860, -1649,  4183,  1710, -1649,  3860,  2660,  1711,  3860,
    1712,  2509,  2672,  2680, -1649,  2673,  2681, -1649,  3406,  1373,
    2683,  2715,  2798,  2697,  2722,  2698,  2699, -1649,  2706,   962,
    1713,  1491, -1649,  2707,  2721,  3723,  2727, -1649,  2719, -1649,
    2726, -1649,  3913,  4769,  2730,  2767,  3164,  2731,  1712,  2732,
    2768,  2777,  2786,  2799,   987,  1373,  2794,   643,  3222,   962,
    1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,  1713,  2747,
    1374,  3804,  2747,  2747,  2816,  2885,  2747,  2747,  2747,  2747,
    2747,  2747,  2747,  2747,  2887,  3223,  2747,  2933,  2747,  4931,
    4227,  4228,   987,  4259,  2924,  1714,  4227,  4228,  4229,  3914,
   -1649,  2938,  2817,  2951,  4255,  1376,  1377,  2953,  2959,  2967,
    2190, -1649,  4080,   608,  2960,  2969,   644,  1492,  2970,  2971,
    2972,  2973,  2974,  2975,  2800,  2976,  2977,  -674,  2978,  2979,
     690,  2980,  2981,  1714, -1649,  3224,  2982,  3973,  3225,  2983,
   -1649, -1649,  2984, -1649, -1649, -1649,  3226,  4269,  2985,   645,
   -1649,  1379,  1380,  1381,  1382,  1383,  1384,  1385,  3015,  2986,
    2987,  3860,  2988,  5043,  1493,  2989,  2990,  1212,  2991,  2994,
    3055,  1373,  2995,   987,  2996,  2997,  2998,  2999,  3000,  3007,
    1509,  1510,  3008,  3011,   646,  3032,  1414,  3041,  3092,  3060,
    3042,  1715,  5043, -1290,  3077,   962,  1509,  1510,  1279,  1328,
    4541,  3915,  3106,  1332,  1373,  5046,  3108,  2801,  3109,  2042,
    3107,  3126,  3115,  3144,  3654,  4335,  1512,  3866,  3867,  3111,
    3055,   962,  3874,  1375,  3147,  3130,  3148,  1716,  2191,  1715,
    1515,  3170,  1512, -1649,  3178,   647,  1516,  1517,  3182,  3157,
    1518,  3189,  3197,  4531,  3191,  3208,  1515,  3296,  4216,  3193,
    1495,  1717,  1516,  1517,  3209,  1373,  1518, -1649,  3212,  1375,
    3898,  3221,  3240,  3254,  1520,  1716,  3923,  3925,  3926,  3241,
    3242,  3723,  3256,  2709,  3271,  3302,  1718,  4532,  1521,  2642,
    1520,  3304,  1522,  3227,  3315,  3308,  4258,  3321,  3316,  1717,
    3318,  3324,  3702,  3323,  1521,  3329,  3347,  3348,  1522,  3351,
    3367,  3368,  3369,  3370,  4390, -1649,  1155,  3355,  3371,  1670,
    1671,  1527,  3749,  -674,  1718,  3357,   937,  3372,  3394,  2433,
    1719,  3395,  3396,  3399, -1901,  -533,  3400,  1527,  3401,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1385,  3471,  3476,  3479,
    4154,  1212,  3860,  3480,  3487,  2434,  3860,  3495,  2509,  3488,
    1672,  1720,  3484,  3504,   962,  3507,  3508,  3509,  1719, -1649,
    2435,  3510,  3566,  1673,  -108,  3589,  1534,  4317,  3511,   648,
    1506, -1649,  3617,  2436,  1212,  1375,  3622,  3228,  3618,  3513,
    3229,  3537,  1376,  1377,   937,  3540,  3543,  3546,  1531,  1720,
    3641, -1649,  3625, -1649,  3549,  1532,   962,  3564,  3597,  3637,
    3043,  4533,  3642,  1674,  1531,  3655,  3658,  3659,  1375,   615,
    3665,  1532,   616,  3664,  3675,  1533,  1675,  5029,  1376,  1377,
    3666,  3676,  3667,   937,  1495,  2437,  2438,  3668,  2802,  3814,
    3669,  1533,  3677,  3973,  3055,  3977,  4459,   689,  3689,  3690,
    3694,  3704,  3714,  1676,  3044,  3824,  3724,  5025,   649,  3725,
    3718,  3727,  3720,  2439, -1649,  3729,  3730,  3731,  3732,  1375,
    3741,  4016,  3742,  3780,  3788,  3783,  3784,  5025,   650,  3789,
    4483,  3791,  3799,  3805,  3809,  1535,   937,  3806,  3810,  3811,
    3820,   937,  3823,   987,  3825,  3832,  3838,  2793,  4534,  3841,
    3842,  1535,  3847,  1536,  3849, -1649,  5025, -1649,  2875, -1649,
    2875,  3852,  3880,  3855, -1649,  3932,  4535,  3933,  1677,  1536,
    3882,   937,  3938,   651,  3948,  3893,  3928,  3959,   628,  3991,
    4012,  3947,  2440,  4007,  4019,  4025,  4017,  4041,  4042,  4048,
    4536,  4052,  3230,  4053,  1376,  1377,   652,  4054,  4055,  4067,
    4061,  4071,  4064,  4072,  4075, -1542,  4855,  4076,  1540,   653,
   -1541,  4093,  4097,  4110,  4118,  4124,  4125,  1541,  4137,  4138,
    1448,   654,  4141,  4142,  1540,  4147,  4158,  1376,  1377,  2094,
     942,  4169,  1045,  1541,  4170,  4171,  2441,   655,  4172,   972,
    3363,  4188,   937,   937,   937,   937,  4235,  4197,  4555,  4201,
    4207,  4240,   937,  4234,  4244,  4246,  4247,  3922,  4252,  4260,
    4261,  4263,  3231,   656,  4264,  4892,  1378,  1379,  1380,  1381,
    1382,  1383,  1384,  1385,  4267,  3973,  3973,  4712,  1376,  1377,
    4892,  4270,  4271,  4273,  4282,  3045,  4302,  4292,  4304,  4305,
    3232,  4320,  4306,  4901,  4321,  4323,  1546,  4307,  4324,  4328,
    1108,  2747,  1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,
    4329,  4336,  1546,  4026,  3296,  4341,  4046,   657,  4342,  4611,
    4344,  4346,    42,  4027,  4359,  3998,  4360,  1960,  1961,  1962,
    1963,  1964,  4361,  4028,  4362,  4363,  4365,  4490,  4366,  1045,
    4373,  4368,  4374,  4375,  4383,  4384,   937,  4029,  4030,  4031,
    4385,  4892,  4394,  1547,  1548,  1549,  4397,  4150,  3860,  4398,
    1550,  4953,  4401,  4032,  4403,  2770,  4955,   689,  4404,  1547,
    1548,  1549,  4406,  1212,  4410,   937,  1550,  1551,  4427,  4434,
    1552,   853,  4440,  4442,  4443,  3502,  4364,  4449,  4451,  4455,
    4537,  4462,  4461,  1551,  4473,  4481,  1552,  1262,   689,  2042,
    4892,  4693,  4892,  4484,  4482,  4487,  4489,  3081,  2966,  2966,
    4491,  4495,  4499,  4504,  4500,  4505,  1554,  4509,  1378,  1379,
    1380,  1381,  1382,  1383,  1384,  1385,  3801,  1293,  4892,  4501,
     689,  4506,  1554,  4516,  1965,  1966,  1967,  1968,  4550,  4556,
    4729,  4559,  4565,  4567,  4570,  4576,  4580,  4584,  4585,  4587,
    4734,  1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,  4588,
    4743,  4589,  4613,  4590,  4594,  4750,    53,  4595,  3292,  4619,
    4892,  4892,  4598,  4600,  4351,  5050,  4612,   112,  4616,   110,
    4621,   689,   115,  4622,  4627,  4630,  3900,  4640,   937,  4643,
    4678,  4687,  4679,  3973,  4695,  4696,  4806,  4716,  4705,  4809,
    4708,  1368,  1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,
    4707,  4715,  4710,  4730,  4739,  -423,  4711,  4757,  4759,  4760,
     937,  4761,  4803,  4762,  4782,  4775,  4786,  4821,  4777,  4794,
    4824,  -441,  4849,  4850,  4854,  1557,  4851,  4852,  4858,  4856,
    4862,  4866,  4867,  4868,   962,  4519,  1969,   962,  1970,  1971,
    1972,  1557,  4877,  4880,  4881,  4888,  4889,  1973,  4893,  4902,
    4825,  4905,  4909,  4910,  4911,  4916,  4918,  3046,  4920,  4924,
    -533,  4921, -2500,  4932,  4934,  4941,  4944,  4946,  4954,  4956,
    4957,  4961,  4967,  4168,  4963,  4962,  4972,   962,  4981,   937,
     937,  4033,  4991,  4693,  4995,  4997,  5013,  5000,   937,   937,
     937,   937,   937,   937,  5001,  5014,  5018,  5019,  4034,  5021,
    5030,   937,   937,  5031,   937,   937,  5028,  5033,  5032,   937,
     937,  5051,  4752,   937,   937,   937,   937,  3548,   937,   937,
    3613,  1657,  3539,  3542,  4458,  4460,   937,   937,  1974,   937,
     937,   937,   937,   937,  3545,   937,   937,   937,   937,   937,
     937,   937,   937,   937,  3536,   937,  4456,  3990,   937,   937,
    4468,  4477,  3846,   937,  4683,  4223,  2173,   937,   937,   937,
    4899,  4764,  4900,  1650,  4479,  4582,  5052,  4803,  5023,   774,
     937,   937,   937,  1223,  3142,   937,  3099,  4040,   937,   937,
     937,   937,   937,   937,  4938,  4654,  4655,  4657,  5036,  4886,
    4658,  1975,  1976,  4939,  4898,  4660,   937,   937,  4661,   937,
     937,   937,   937,   937,   937,   937,   937,   937,   937,   937,
    4662,  4663,   937,  4664,  4665,  4668,   937,  4929,   937,  4035,
    4669,  4943,  4897,  4670,  4002,  1496,  2839,  2843,  4951,  3612,
    4291,  4181,  3006,  5002,  1813,  4303,  4036,  3586,  3588,  3585,
    4152,  2747,  2747,  2747,  2747,  4412,  4517,  4870,  4908,  4876,
    4629,  3814,  4875,  3004,  2941,  4011,  4195,  3584,  4196,  3886,
     937,  2042,  2855,  3931,  3929,  4309,  1850,  4993,  4433,  3782,
    4882,  4243,  4998,  4689,  4528,  4631,  4572,  4542,  4575,  3398,
    4549,   962,  3465,  4426,  2347,  2042,  4005,  4208,  3576,  3345,
    3338,  2944,  4446,  2163,  2945,  2942,  2576,  3946,  4037,  2574,
    1234,  3129,  3512,  3470,  2324,  2280,  3634,  4051,  2042,  3116,
     949,  2154,  2504,  1145,  3356,  4038,  4339,  3127,  1144,  2356,
    2705,  3793,  3312,  2690,  5044,  4596,  4607,  3237,  4865,  1998,
    4904,  4861,  2042,  1977,  3152,  1931,  1932,   112,  5011,   110,
    5009,  3153,  4497,  4349,  1942,  1943,  3966,  4697,  1946,  1947,
    1978,  1979,  3154,  5044,  4698,  3155,  4101,  1955,  1956,  4095,
    1957,  1958,  1950,  1239,  4356,  1982,  4597,  3692,  3608,  1991,
    1992,  1993,  1994,  4508,  1996,  1918,  3942,  4601,  4527,  2772,
     658,  1806,  2004,  2005,  2385,  2008,  2009,  3087,  1469,  1470,
    3632,  2013,  1754,  3633,  2016,  2017,  2018,  2019,  2020,  2021,
    4337,  2023,  4063,  1471,  2026,  2027,  4395,  1465,  4330,  2030,
    1472,  2565,  2550,  2033,  2037,  2038,  1217,  2162,  3094,  3491,
    4903,  2477,  3640,  4173,  4859,  4405,  2045,  2046,  2047,  5027,
    5047,  4256,  4334,  4498,  2053,  2054,  2055,  2056,  2057,  3199,
    3362,  3200,  2521,     1,   770,  4298,     2,  1838,  3187,   771,
    2518,  2532,  2069,  1837,  2517,  1138,  3123,   737,  3033,  4486,
    1743,     3,  3333,  2120,  3034,     4,  1143,  1802,   637,   638,
    1449,  1653,  2088,  4006,  2093,  4871,  1654,  4262,  1655,     5,
       6,  4300,   937,  4474,  3953,     0,     0,     7,   937,     0,
     937,   937,     8,     9,     0,     0,     0,     0,     0,     0,
       0,     0,   937,   937,     0,   937,   937,     0,    10,     0,
       0,     0,     0,     0,     0,     0,  2139,     0,     0,  4450,
       0,     0,     0,     0,     0,     0,     0,     0,    11,     0,
       0,     0,  2747,  1509,  1510,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      12,     0,  4476,     0,     0,     0,     0,     0,     0,     0,
      13,    14,     0,     0,     0,     0,     0,  -815,  -815,  1512,
       0,     0,    15,    16,     0,     0,     0,  -815,     0,     0,
       0,     0,     0,  1515,     0,    17,     0,     0,     0,  1516,
    1517,     0,     0,  1518,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1520,     0,    19,
       0,     0,     0,     0,     0,     0,     0,  1659,  1660,     0,
       0,  1521,     0,     0,     0,  1522,     0,    20,     0,    21,
       0,     0,     0,     0,    22,     0,     0,    23,   689,     0,
       0,   689,     0,     0,     0,     0,     0,     0,     0,   937,
       0,     0,    24,   937,  1527,     0,  4547,     0,     0,   937,
      25,     0,     0,    26,     0,     0,     0,     0,   937,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    27,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      28,     0,     0,     0,    29,  2287,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1960,  1961,  1962,  1963,  1964,
       0,     0,     0,     0,     0,     0,     0,     0,  1045,     0,
       0,  1531,     0,     0,  2359,     0,  2360,  2361,  1532,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,   937,     0,     0,     0,  1533,     0,
       0,     0,   937,     0,   937,     0,     0,     0,  2288,  2289,
    2290,  2291,  2292,  1417,  1418,  2293,  2294,  2295,     0,  2296,
    2297,  2298,  2299,  2300,  2301,  2302,  2303,  2304,  2305,     0,
    2306,  2307,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,   937,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1535,     0,
       0,     0,  1965,  1966,  1967,  1968,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,  1536,     0,     0,     0,
       0,     0,     0,     0,     0,    32,     0,     0,   937,   937,
     937,     0,     0,     0,     0,     0,     0,     0,  4723,     0,
       0,     0,     0,     0,     0,     0,     0,    33,     0,     0,
      34,     0,    35,     0,     0,    36,     0,   937,     0,     0,
       0,     0,   937,     0,     0,    37,    38,     0,     0,     0,
     937,  1540,   937,     0,     0,    39,     0,    40,     0,     0,
    1541,     0,     0,     0,     0,  2529,    41,     0,     0,  1850,
       0,     0,    42,     0,     0,     0,     0,     0,  1419,  1420,
      43,   689,     0,     0,  2536,    44,    45,    46,     0,     0,
       0,     0,     1,     0,  1969,     2,  1970,  1971,  1972,     0,
       0,     0,     0,     0,     0,  1973,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     0,     0,     0,    47,     0,
       0,     0,  4804,  4805,     0,    48,     0,     0,     5,     6,
       0,     0,     0,     0,     0,     0,     7,     0,     0,  1546,
       0,     8,     9,     0,     0,     0,  1662,     0,     0,  1663,
       0,     0,  2837,     0,     0,  2837,  2837,    10,     0,     0,
       0,     0,     0,     0,     0,     0,  2588,     0,     0,    49,
    2592,     0,     0,     0,     0,  4860,     0,    11,     0,     0,
    2588,    50,     0,     0,     0,    51,  1974,     0,     0,     0,
       0,     0,     0,    52,     0,     0,  1547,  1548,  1549,    12,
       0,     0,     0,  1550,     0,     0,     0,     0,     0,    13,
      14,     0,     0,     0,     0,     0,    53,     0,     0,     0,
    1551,    15,    16,  1552,    54,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      55,    56,    57,    58,     0,     0,     0,     0,    18,  1975,
    1976,     0,     0,     0,     0,    59,     0,     0,     0,  1554,
     937,     0,     0,     0,  2663,  2665,  2667,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,    21,     0,
       0,     0,    60,    22,     0,     0,    23,     0,  2701,     0,
       0,     0,     0,     0,     0,     0,  2703,     0,  2704,     0,
       0,    24,     0,     0,     0,     0,     0,    61,     0,    25,
       0,     0,    26,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4959,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    27,     0,  2308,  2309,   937,     0,     0,     0,
     937,   937,     0,   937,   937,     0,     0,     0,     0,    28,
    3042,     0,     0,    29,     0,     0,  1509,  1510,     0,     0,
    4674,     0,     0,     0,     0,     0,     0,     0,  1557,     0,
       0,  5008,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1977,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1512,     0,     0,     0,     0,  1664,  1978,  1979,
       0,     0,     0,     0,     0,     0,  1515,     0,   937,     0,
       0,     0,  1516,  1517,     0,     0,  1518,     0,     0,     0,
       0,   937,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1520,     0,     0,     0,     0,  4674,  4674,     0,     0,     0,
      30,     0,     0,     0,  1521,     0,     0,     0,  1522,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   689,
     689,   689,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,  -533,     0,  1527,     0,     0,
       0,     0,     0,     0,    32,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2968,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,    34,
       0,    35,     0,     0,    36,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    37,    38,     0,     0,     0,     0,
       0,     0,     0,     0,    39,     0,    40,     0,   937,  4674,
    4674,     0,     0,     0,     0,    41,     0,   937,   937,     0,
    3043,    42,     0,     0,  1531,     0,  4674,     0,     0,    43,
       0,  1532,     0,     0,    44,    45,    46,   937,   937,     0,
     937,     0,     0,   937,   937,   937,   937,   937,     0,     0,
     937,  1533,  3072,     0,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,   937,     0,   937,    47,   937,   937,
       0,   937,   937,     0,    48,     0,   937,   937,   937,     0,
       0,     0,   937,   937,   937,  4674,   937,     0,   937,     0,
     937,     0,   937,     0,   937,     0,     0,     0,     0,   937,
    4674,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1535,     0,  4674,     0,   937,     0,     0,    49,     0,
       0,     0,     0,     0,  3112,     0,     0,     0,     0,  1536,
      50,   937,   937,     0,    51,     0,   937,  3124,   937,     0,
       0,  4674,    52,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4674,  4674,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    53,     0,     0,     0,     0,
       0,  4674,     0,    54,     0,     0,     0,     0,     0,     0,
       0,  4674,     0,     0,  1540,     0,  4674,     0,     0,     0,
     942,     0,     0,  1541,     0,     0,     0,     0,     0,     0,
    4674,   937,  4674,     0,    59,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4674,     0,
    4674,     0,  4674,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    60,     0,     0,     0,  3045,     0,     0,  4674,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3211,     0,    61,     0,     0,     0,
    4674,  4674,  1546,  3219,  3220,     0,     0,     0,     0,     0,
       0,     0,    42,     0,     0,     0,     0,     0,     0,     0,
    4674,  4674,     0,  3243,  3244,  4674,  3245,     0,     0,  3248,
    3249,  3250,  3251,  3252,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3258,     0,     0,     0,     0,
    3259,     0,  3260,     0,  3261,  3262,     0,  3263,     0,  1547,
    1548,  1549,  3268,  3269,  3270,     0,  1550,     0,  3273,  3274,
    3275,     0,  3276,     0,  3278,     0,  3280,     0,  3282,     0,
    3283,     0,     0,  1551,     0,  3286,  1552,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1117,  1187,     0,     0,     0,     0,  2088,     0,     0,
       0,     0,  1554,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1188,   754,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1189, -1909,
       0,     0,     0,     0,     0,     0,    53,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1190,     0,  1191,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1192,   689,  2139,     0,     0,
       0,     0,  1505,     0,     0,     0,     0,  1506,     0,  1507,
       0,     0,  1508,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1509,  1510,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,   937,     0,     0,
       0,   937,     0, -1901,  1193,     0,     0,     0,     0,  1194,
       0,  1557,  1195,  1511,     0,     0,  -815,  -815,  1512,  1513,
       0,     0,  1196,     0,  1514,     0,  -815,   944,     0,     0,
    -533,     0,  1515,     0,     0,   937,     0,     0,  1516,  1517,
       0,     0,  1518,     0,  1197,     0,  1198,     0,     0,     0,
       0,  1519,     0,     0,     0,  1199,     0,  1200,     0,     0,
       0,     0,     0,     0,     0,     0,  1520,     0,     0,     0,
       0,     0,   937,     0,     0,     0,     0,     0,     0,     0,
    1521,     0,     0,     0,  1522,     0,     0,     0,     0,     0,
       0,     0,  1523,  1524,     0,     0,     0,     0,     0,  1525,
       0,     0,     0,     0,     0,     0,     0,  1526,     0,     0,
     937,     0,     0,  1527,     0,     0,     0,     0,     0,   937,
       0,     0,     0,     0,  1528,     0,     0,     0,  1201,     0,
       0,     0,     0,     0,   937,     0,     0,     0,     0,     0,
       0,     0,   937,     0,     0,     0,     0,  1529,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1202,     0,     0,   937,   937,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1530,     0,
    1531,   937,     0,     0,     0,     0,     0,  1532,     0,     0,
       0,   937,     0,   937,     0,   937,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1533,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1203,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1534,     0,     0,     0,     0,     0,     0,   937,     0,     0,
       0,     0,     0,     0,  1204,     0,     0,  3607,     0,     0,
       0,     0,     0,     0,     0,  1205,  1206,     0, -1905,  1207,
    1208,     0,     0,     0,     0,     0,     0,  1535,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1209,  3628,     0,     0,     0,  1536,     0,     0,     0,  1537,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   937,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3662,     0,
       0,     0,     0,     0,     0,     0,     0,  1538,     0,     0,
       0,     0,     0,  1539,  1210,     0,     0,     0,     0,     0,
    1540,     0,     0,     0,     0,     0,     0,  1211,     0,  1541,
       0,     0,     0,     0,     0,     0,  1850,     0,     0,     0,
       0,     0,     0,     0,     0,  3703,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -2553,
    3709,  1542,     0,  1212,     0,     0,     0,     0,  3712,     0,
       0,     0,     0,     0,     0,     0,  1543,  1544,  1545, -1909,
       0,     0,  1213,     0,     0,     0,     0,     0,     0,     0,
       0,  3735,  3736,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1905,     0,     0,     0,     0,     0,  1546,     0,
       0,     0,     0,     0,     0,     0,     0,  3761,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3772,     0,  3774,
       0,  3776,     0,     0,     0,     0,     0,     0,     0,     0,
   -2553,     0,     0,     0,     0,     0,     0,  1214,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2837,  2837,     0,  1547,  1548,  1549,     0,     0,
       0,     0,  1550,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1505,     0,     0,     0,     0,  1506,  1551,
    1507,     0,  1552,  1508,     0,     0,     0,     0,   937,     0,
     937,     0,     0,  1509,  1510,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1553,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1554,     0,
       0,     0,     0,     0,  1511,     0,     0,     0,     0,  1512,
    1513,     0,     0,     0,  3853,  1514,     0,     0,     0,   937,
       0,     0,     0,  1515,     0,     0,     0,     0,     0,  1516,
    1517,     0,  1555,  1518,     0,  1556,     0,     0,     0,     0,
       0,     0,  1519,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,   937,     0,     0,  1520,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1521,     0,     0,     0,  1522,     0,   937,     0,     0,
       0,     0,     0,  1523,  1524,     0,     0,     0,     0,     0,
    1525,     0,     0,     0,     0,     0,     0,     0,  1526,     0,
       0,     0,     0,   937,  1527,   937,     0,     0,   937,   937,
       0,   937,     0,     0,     0,  1528,     0,  1557,  1558,  1559,
       0,     0,   937,     0,     0,     0,     0,   937,     0,     0,
     937,     0,     0,   937,   937,     0,     0,     0,  1529,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1530,
       0,  1531,     0,     0,     0,     0,     0,     0,  1532,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1533,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2939,     0,
     937,     0,     0,  1506,     0,  1507,     0,     0,     0,     0,
       0,  1534,     0,     0,     0,     0,     0,     0,  1509,  1510,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1535,  1511,
       0,     0,     0,     0,  1512,  3628,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1536,     0,  1515,     0,
    1537,     0,     0,     0,  1516,  1517,     0,     0,  1518,     0,
       0,     0,     0,     0,     0,     0,     0,  1519,     0,  4089,
    4092,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     937,   937,  1520,     0,     0,     0,     0,     0,  1538,     0,
       0,     0,     0,  4104,  1539,     0,  1521,     0,     0,     0,
    1522,  1540,     0,     0,     0,     0,     0,     0,  1523,     0,
    1541,  2837,  2837,     0,     0,  2940,     0,     0,     0,  4114,
       0,  2139,     0,  1526,  4119,  4120,     0,     0,     0,  1527,
       0,     0,     0,     0,     0,     0,     0,     0,  4127,     0,
       0,     0,  1542,  4129,     0,     0,  4130,   937,     0,  4131,
    4132,     0,     0,     0,     0,     0,     0,  1543,  1544,  1545,
       0,     0,     0,  1529,     0,     0,     0,     0,     0,     0,
     937,  4144,     0,     0,     0,     0,     0,     0,     0,     0,
     937,     0,     0,     0,     0,     0,     0,     0,     0,  1546,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,   937,     0,     0,  1531,     0,     0,     0,
       0,     0,     0,  1532,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1533,     0,     0,  4190,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1547,  1548,  1549,     0,
       0,     0,     0,  1550,     0,     0,  1534,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1551,     0,     0,  1552,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1535,     0,     0,  1553,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1554,
       0,  1536,     0,     0,     0,  1537,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4265,  4266,     0,     0,
       0,     0,     0,  1555,     0,     0,  1556,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,     0,  1539,
       0,     0,     0,     0,     0,     0,  1540,     0,     0,     0,
       0,     0,     0,     0,     0,  1541,     0,  3407,  3408,   937,
       0,     0,     0,  3409,     0,  3410,     0,  3411,  3412,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3413,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1543,     0,     0,     0,  3628,     0,  1557,  1558,
    1559,     0,     0,     0,     0,     0,  3628,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1546,  3414,     0,  4343,  3415,  4345,
       0,     0,     0,     0,     0,     0,  3416,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3417,     0,     0,     0,     0,
       0,     0,   937,     0,     0,   937,     0,     0,     0,     0,
       0,     0,  3418,     0,     0,     0,     0,     0,   937,     0,
       0,  1547,  1548,  1549,     0,     0,     0,     0,  1550,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3419,     0,  3420,     0,     0,  1551,     0,  4780,  1552,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3421,  3422,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1554,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3423,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3424,     0,     0,     0,     0,  1555,  4438,
       0,  1556,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3425,     0,     0,     0,     0,     0,     0,     0,
       0,  3426,  3427,   937,  3428,  4444,     0,     0,     0,     0,
     937,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3429,  3430,  3431,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,  4672,     0,
    3432,  3433,  3434,  1557,  4680,     0,     0,  3435,     0,     0,
    3436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3437,  3438,
       0,     0,     0,     0,     0,     0,     0,     0,   937,     0,
       0,  4089,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2139,     0,
       0,  4503,  3439,  3440,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4089,     0,     0,   937,     0,     0,
       0,     0,     0,  4672,  4672,     0,     0,     0,  3441,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3442,     0,     0,   937,  3443,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3444,     0,     0,     0,
       0,     0,     0,   937,     0,   937,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   937,     0,  4672,  4672,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2139,
       0,     0,     0,     0,  4672,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3445,     0,     0,  3446,
       0,     0,  3447,  3448,  3449,  3450,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4642,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   937,     0,  4672,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3451,  3452,     0,  4672,   937,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4672,     0,     0,  4706,     0,     0,     0,     0,     0,
       0,     0,     0,  3453,     0,     0,     0,     0,   937,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   937,  4672,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4672,  4672,  4738,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4672,
       0,     0,     0,     0,     0,     0,   937,     0,     0,  4672,
       0,     0,     0,     0,  4672,     0,     0,     0,     0,     0,
       0,   937,     0,     0,     0,     0,     0,     0,  4672,     0,
    4672,     0,     0,     0,     0,     0,     0,     0,     0,  4784,
       0,     0,     0,     0,     0,     0,  4672,     0,  4672,     0,
    4672,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4672,     0,     0,  4819,
       0,  4820,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4828,     0,     0,     0,     0,     0,     0,  4672,  4672,
       0,     0,     0,     0,     0,   937,     0,     0,     0,     0,
       0,     0,     0,   937,     0,     0,     0,     0,  4672,  4672,
       0,     0,     0,  4672,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4890,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4895,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4914,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   194,   195,     0,   799,   197,   198,
     199,   200,  1844,     0,   201,     0,     0,     0,     0,   202,
       0,     0,   800,     0,   204,   205,   206,   207,   801,   209,
       0,   210,  4945,     0,  1845,   211,   803,   804,   805,   212,
     806,     0,   213,   214,   215,     0,   216,  4960,   217,   218,
       0,     0,   219,   807,   808,   220,   221,     0,   222,   223,
     809,   810,   225,     0,   226,   227,   228,   229,   811,   231,
       0,   812,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,   813,   814,   252,     0,     0,
       0,   815,   253,   816,     0,   254,   817,   818,     0,   255,
     256,   257,   819,   820,   821,     0,     0,     0,     0,   822,
     260,   823,     0,     0,  1846,   261,   262,     0,   263,     0,
       0,  5045,     0,     0,   264,   265,   266,   267,   268,  3628,
       0,     0,   269,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,   274,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,   286,
     825,     0,   287,   288,   289,   290,   291,   826,   827,   292,
     293,     0,   294,   295,   296,   297,   298,   828,     0,   299,
     300,     0,     0,     0,   829,   302,     0,   303,     0,     0,
       0,   304,     0,   305,   830,   307,   831,     0,   309,     0,
     310,     0,   832,     0,   311,   312,     0,   313,   833,     0,
     314,   315,     0,     0,     0,   834,   317,   318,   319,   835,
       0,   320,   321,   322,     0,     0,   323,     0,     0,     0,
     836,   324,   325,   326,   837,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,     0,     0,     0,   332,
       0,   333,     0,     0,   334,   335,     0,     0,   336,     0,
     838,   337,   338,     0,     0,     0,     0,     0,   839,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,   840,
       0,     0,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,   841,   367,
     368,   369,   370,   842,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   843,   378,     0,     0,   844,   380,
     845,   381,     0,   382,   846,   847,   848,   849,   850,   387,
     388,   389,   390,   391,     0,   851,   392,   393,     0,     0,
     394,   395,   396,   397,   398,   852,  1041,   853,   399,   400,
       0,   854,   855,   401,     0,   402,   403,  1847,   404,   405,
     406,     0,     0,   407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   408,   409,   410,   856,   411,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   857,   858,
     422,   859,   423,     0,   424,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   860,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,   447,
       0,   448,   449,   450,   861,   862,   451,   452,   453,   454,
     455,   456,   457,   458,     0,   459,     0,   460,   461,     0,
     462,   463,   464,     0,   863,     0,   864,   466,   467,   468,
     469,     0,   470,  1848,   866,   472,   473,   474,   475,     0,
     867,   477,     0,     0,     0,   478,   479,   480,   481,     0,
       0,     0,   482,     0,     0,     0,   483,     0,   484,   485,
     486,   487,     0,   488,   489,   490,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,   502,
     503,   504,   505,   868,   869,   506,   507,     0,     0,   508,
     509,   870,   511,   512,   513,   871,   872,   514,   515,   516,
     517,   873,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   874,   524,   525,     0,   875,   876,   877,   878,     0,
       0,     0,     0,     0,   530,   531,     0,   879,   880,   881,
     533,   534,   535,   882,   536,   537,   883,   538,   539,     0,
     540,   541,     0,     0,   542,     0,     0,   543,     0,   544,
       0,   884,   546,     0,     0,   885,   886,   887,   547,   888,
     548,     0,     0,   549,   889,     0,   890,   550,     0,   551,
     552,   891,   892,     0,     0,     0,     0,     0,     0,   555,
     556,   557,     0,   558,   559,   560,   561,     0,     0,   893,
       0,     0,     0,   563,   564,   565,   566,     0,   567,     0,
       0,     0,     0,     0,   894,   895,     0,   568,   569,   570,
     896,     0,   571,   572,     0,   573,   897,   898,   574,   899,
     575,     0,   900,   901,   902,   903,   904,   576,   577,     0,
     905,   578,   906,   579,   907,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,  1849,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,     0,
     600,   601,   602,   603,   604,   605,     0,     0,     0,   908,
     909,     0,     0,     0,     0,   910,     0,   911,     0,     0,
       0,   912,     0,     0,     0,   913,   914,   194,   195,     0,
     799,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   800,     0,   204,   205,   206,
     207,   801,   209,     0,   210,     0,     0,   802,   211,   803,
     804,   805,   212,   806,     0,   213,   214,   215,  2034,   216,
       0,   217,   218,     0,     0,   219,   807,   808,   220,   221,
       0,   222,   223,   809,   810,   225,     0,   226,   227,   228,
     229,   811,   231,     0,   812,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,   813,   814,
     252,     0,     0,     0,   815,   253,   816,     0,   254,   817,
     818,     0,   255,   256,   257,   819,   820,   821,     0,     0,
       0,     0,   822,   260,   823,     0,     0,   824,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,   825,     0,   287,   288,   289,   290,   291,
     826,   827,   292,   293,     0,   294,   295,   296,   297,   298,
     828,     0,   299,   300,     0,     0,     0,   829,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   830,   307,   831,
       0,   309,     0,   310,     0,   832,     0,   311,   312,     0,
     313,   833,     0,   314,   315,     0,     0,     0,   834,   317,
     318,   319,   835,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,   836,   324,   325,   326,   837,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
    2035,   336,     0,   838,   337,   338,     0,     0,     0,     0,
       0,   839,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,   840,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   841,   367,   368,   369,   370,   842,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   843,   378,     0,
       0,   844,   380,   845,   381,     0,   382,   846,   847,   848,
     849,   850,   387,   388,   389,   390,   391,     0,   851,   392,
     393,     0,     0,   394,   395,   396,   397,   398,   852,  1041,
     853,   399,   400,     0,   854,   855,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,   856,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   857,   858,   422,   859,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   860,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,   861,   862,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   863,     0,   864,
     466,   467,   468,   469,     0,   470,   865,   866,   472,   473,
     474,   475,     0,   867,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,   868,   869,   506,   507,
       0,     0,   508,   509,   870,   511,   512,   513,   871,   872,
     514,   515,   516,   517,   873,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   874,   524,   525,     0,   875,   876,
     877,   878,     0,     0,     0,     0,  2036,   530,   531,     0,
     879,   880,   881,   533,   534,   535,   882,   536,   537,   883,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   884,   546,     0,     0,   885,   886,
     887,   547,   888,   548,     0,     0,   549,   889,     0,   890,
     550,     0,   551,   552,   891,   892,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   893,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,   894,   895,     0,
     568,   569,   570,   896,     0,   571,   572,     0,   573,   897,
     898,   574,   899,   575,     0,   900,   901,   902,   903,   904,
     576,   577,     0,   905,   578,   906,   579,   907,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,     0,
       0,     0,   908,   909,     0,     0,     0,     0,   910,     0,
     911,     0,     0,     0,   912,     0,     0,     0,   913,   914,
     194,   195,     0,   799,   197,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,     0,     0,   800,     0,
     204,   205,   206,   207,   801,   209,     0,   210,     0,     0,
     802,   211,   803,   804,   805,   212,   806,     0,   213,   214,
     215,     0,   216,     0,   217,   218,     0,     0,   219,   807,
     808,   220,   221,     0,   222,   223,   809,   810,   225,     0,
     226,   227,   228,   229,   811,   231,     0,   812,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,   813,   814,   252,     0,     0,     0,   815,   253,   816,
       0,   254,   817,   818,     0,   255,   256,   257,   819,   820,
     821,     0,     0,     0,     0,   822,   260,   823,     0,     0,
     824,   261,   262,     0,   263,     0,     0,     0,     0,     0,
     264,   265,   266,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,   272,     0,     0,     0,   273,     0,   274,
     275,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,   282,   283,   284,   285,   286,   825,     0,   287,   288,
     289,   290,   291,   826,   827,   292,   293,     0,   294,   295,
     296,   297,   298,   828,     0,   299,   300,     0,     0,     0,
     829,   302,     0,   303,     0,     0,     0,   304,     0,   305,
     830,   307,   831,     0,   309,     0,   310,     0,   832,     0,
     311,   312,     0,   313,   833,     0,   314,   315,     0,     0,
       0,   834,   317,   318,   319,   835,     0,   320,   321,   322,
       0,     0,   323,     0,     0,     0,   836,   324,   325,   326,
     837,     0,     0,   327,     0,     0,     0,   328,   329,     0,
     330,   331,     0,     0,     0,   332,     0,   333,     0,     0,
     334,   335,     0,     0,   336,     0,   838,   337,   338,     0,
       0,     0,     0,     0,   839,   340,     0,   341,     0,   342,
       0,   343,   344,     0,     0,   840,     0,     0,     0,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,   841,   367,   368,   369,   370,   842,
     371,   372,     0,     0,     0,     0,   373,   374,   375,   376,
     843,   378,     0,     0,   844,   380,   845,   381,     0,   382,
     846,   847,   848,   849,   850,   387,   388,   389,   390,   391,
       0,   851,   392,   393,     0,     0,   394,   395,   396,   397,
     398,   852,  1041,   853,   399,   400,     0,   854,   855,   401,
       0,   402,   403,     0,   404,   405,   406,     0,     0,   407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   408,
     409,   410,   856,   411,     0,   412,     0,   413,   414,   415,
     416,   417,   418,   419,   857,   858,   422,   859,   423,     0,
     424,   425,   426,     0,   427,     0,   428,   429,   430,   431,
     432,     0,   860,   434,   435,     0,     0,   436,     0,     0,
       0,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,   445,     0,   446,   447,     0,   448,   449,   450,
     861,   862,   451,   452,   453,   454,   455,   456,   457,   458,
       0,   459,     0,   460,   461,     0,   462,   463,   464,     0,
     863,     0,   864,   466,   467,   468,   469,     0,   470,   865,
     866,   472,   473,   474,   475,     0,   867,   477,    42,     0,
       0,   478,   479,   480,   481,     0,     0,     0,   482,     0,
       0,     0,   483,     0,   484,   485,   486,   487,     0,   488,
     489,   490,   491,   492,     0,     0,     0,     0,     0,   493,
     494,   495,     0,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,   502,   503,   504,   505,   868,
     869,   506,   507,     0,     0,   508,   509,   870,   511,   512,
     513,   871,   872,   514,   515,   516,   517,   873,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   874,   524,   525,
       0,   875,   876,   877,   878,     0,     0,     0,     0,     0,
     530,   531,     0,   879,   880,   881,   533,   534,   535,   882,
     536,   537,   883,   538,   539,     0,   540,   541,     0,     0,
     542,     0,     0,   543,     0,   544,     0,   884,   546,     0,
       0,   885,   886,   887,   547,   888,   548,     0,     0,   549,
     889,     0,   890,   550,     0,   551,   552,   891,   892,     0,
       0,     0,    53,     0,     0,   555,   556,   557,     0,   558,
     559,   560,   561,     0,     0,   893,     0,     0,     0,   563,
     564,   565,   566,     0,   567,     0,     0,     0,     0,     0,
     894,   895,     0,   568,   569,   570,   896,     0,   571,   572,
       0,   573,   897,   898,   574,   899,   575,     0,   900,   901,
     902,   903,   904,   576,   577,     0,   905,   578,   906,   579,
     907,   580,   581,     0,     0,     0,   582,   583,   584,   585,
     586,   587,   588,   589,     0,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,     0,   600,   601,   602,   603,
     604,   605,     0,     0,     0,   908,   909,     0,     0,     0,
       0,   910,     0,   911,     0,     0,     0,   912,     0,     0,
       0,   913,   914,   194,   195,     0,   799,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   800,     0,   204,   205,   206,   207,   801,   209,     0,
     210,     0,     0,   802,   211,   803,   804,   805,   212,   806,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,   807,   808,   220,   221,     0,   222,   223,   809,
     810,   225,     0,   226,   227,   228,   229,   811,   231,     0,
     812,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,   813,   814,   252,     0,     0,     0,
     815,   253,   816,     0,   254,   817,   818,     0,   255,   256,
     257,   819,   820,   821,     0,     0,     0,     0,   822,   260,
     823,     0,     0,   824,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,   825,
       0,   287,   288,   289,   290,   291,   826,   827,   292,   293,
       0,   294,   295,   296,   297,   298,   828,     0,   299,   300,
       0,     0,     0,   829,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   830,   307,   831,     0,   309,     0,   310,
       0,   832,     0,   311,   312,     0,   313,   833,     0,   314,
     315,     0,     0,     0,   834,   317,   318,   319,   835,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,   836,
     324,   325,   326,   837,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,   838,
     337,   338,     0,     0,     0,     0,     0,   839,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,   840,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   841,   367,   368,
     369,   370,   842,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   843,   378,     0,     0,   844,   380,   845,
     381,     0,   382,   846,   847,   848,   849,   850,   387,   388,
     389,   390,   391,     0,   851,   392,   393,     0,     0,   394,
     395,   396,   397,   398,   852,  1041,   853,   399,   400,     0,
     854,   855,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,   856,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   857,   858,   422,
     859,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   860,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,   861,   862,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   863,     0,   864,   466,   467,   468,   469,
       0,   470,   865,   866,   472,   473,   474,   475,     0,   867,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,   868,   869,   506,   507,     0,     0,   508,   509,
     870,   511,   512,   513,   871,   872,   514,   515,   516,   517,
     873,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     874,   524,   525,     0,   875,   876,   877,   878,     0,     0,
       0,     0,     0,   530,   531,     0,   879,   880,   881,   533,
     534,   535,   882,   536,   537,   883,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     884,   546,     0,     0,   885,   886,   887,   547,   888,   548,
       0,     0,   549,   889,     0,   890,   550,     0,   551,   552,
     891,   892,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   893,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,   894,   895,     0,   568,   569,   570,   896,
       0,   571,   572,     0,   573,   897,   898,   574,   899,   575,
       0,   900,   901,   902,   903,   904,   576,   577,     0,   905,
     578,   906,   579,   907,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,     0,     0,     0,   908,   909,
    1042,     0,     0,     0,   910,     0,   911,     0,     0,     0,
     912,     0,     0,     0,   913,   914,   194,   195,     0,   799,
     197,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,     0,     0,   800,     0,   204,   205,   206,   207,
     801,   209,     0,   210,     0,     0,   802,   211,   803,   804,
     805,   212,   806,     0,   213,   214,   215,     0,   216,     0,
     217,   218,     0,     0,   219,   807,   808,   220,   221,     0,
     222,   223,   809,   810,   225,     0,   226,   227,   228,   229,
     811,   231,     0,   812,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,   813,   814,   252,
       0,     0,     0,   815,   253,   816,     0,   254,   817,   818,
       0,   255,   256,   257,   819,   820,   821,     0,     0,     0,
       0,   822,   260,   823,     0,     0,   824,   261,   262,     0,
     263,     0,     0,     0,     0,     0,   264,   265,   266,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,   272,
       0,     0,     0,   273,     0,   274,   275,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,   282,   283,   284,
     285,   286,   825,     0,   287,   288,   289,   290,   291,   826,
     827,   292,   293,     0,   294,   295,   296,   297,   298,   828,
       0,   299,   300,     0,     0,     0,   829,   302,     0,   303,
       0,     0,     0,   304,     0,   305,   830,   307,   831,     0,
     309,     0,   310,     0,   832,     0,   311,   312,     0,   313,
     833,     0,   314,   315,     0,     0,     0,   834,   317,   318,
     319,   835,     0,   320,   321,   322,     0,     0,   323,     0,
       0,     0,   836,   324,   325,   326,   837,     0,     0,   327,
       0,     0,     0,   328,   329,     0,   330,   331,     0,     0,
       0,   332,     0,   333,     0,     0,   334,   335,     0,     0,
     336,     0,   838,   337,   338,     0,     0,     0,     0,     0,
     839,   340,     0,   341,     0,   342,     0,   343,   344,     0,
       0,   840,     0,     0,     0,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     841,   367,   368,   369,   370,   842,   371,   372,     0,     0,
       0,     0,   373,   374,   375,   376,   843,   378,     0,     0,
     844,   380,   845,   381,     0,   382,   846,   847,   848,   849,
     850,   387,   388,   389,   390,   391,     0,   851,   392,   393,
       0,     0,   394,   395,   396,   397,   398,   852,  1041,   853,
     399,   400,     0,   854,   855,   401,     0,   402,   403,     0,
     404,   405,   406,     0,     0,   407,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   408,   409,   410,   856,   411,
       0,   412,     0,   413,   414,   415,   416,   417,   418,   419,
     857,   858,   422,   859,   423,     0,   424,   425,   426,     0,
     427,     0,   428,   429,   430,   431,   432,     0,   860,   434,
     435,     0,     0,   436,     0,     0,     0,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     446,   447,     0,   448,   449,   450,   861,   862,   451,   452,
     453,   454,   455,   456,   457,   458,     0,   459,     0,   460,
     461,     0,   462,   463,   464,     0,   863,     0,   864,   466,
     467,   468,   469,     0,   470,   865,   866,   472,   473,   474,
     475,     0,   867,   477,     0,     0,     0,   478,   479,   480,
     481,     0,     0,     0,   482,     0,     0,     0,   483,     0,
     484,   485,   486,   487,     0,   488,   489,   490,   491,   492,
       0,     0,     0,     0,     0,   493,   494,   495,     0,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,   502,   503,   504,   505,   868,   869,   506,   507,     0,
       0,   508,   509,   870,   511,   512,   513,   871,   872,   514,
     515,   516,   517,   873,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   874,   524,   525,     0,   875,   876,   877,
     878,     0,     0,     0,     0,     0,   530,   531,     0,   879,
     880,   881,   533,   534,   535,   882,   536,   537,   883,   538,
     539,     0,   540,   541,     0,     0,   542,     0,     0,   543,
       0,   544,     0,   884,   546,     0,     0,   885,   886,   887,
     547,   888,   548,     0,     0,   549,   889,     0,   890,   550,
       0,   551,   552,   891,   892,     0,     0,     0,     0,     0,
       0,   555,   556,   557,     0,   558,   559,   560,   561,     0,
       0,   893,     0,     0,     0,   563,   564,   565,   566,     0,
     567,     0,     0,     0,     0,     0,   894,   895,     0,   568,
     569,   570,   896,     0,   571,   572,     0,   573,   897,   898,
     574,   899,   575,     0,   900,   901,   902,   903,   904,   576,
     577,     0,   905,   578,   906,   579,   907,   580,   581,     0,
       0,     0,   582,   583,   584,   585,   586,   587,   588,   589,
       0,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,     0,   600,   601,   602,   603,   604,   605,     0,     0,
       0,   908,   909,  2606,     0,     0,     0,   910,     0,   911,
       0,     0,     0,   912,     0,     0,     0,   913,   914,   194,
     195,     0,   799,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   800,     0,   204,
     205,   206,   207,   801,   209,     0,   210,     0,     0,   802,
     211,   803,   804,   805,   212,   806,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,   807,   808,
     220,   221,     0,   222,   223,   809,   810,   225,     0,   226,
     227,   228,   229,   811,   231,     0,   812,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
     813,   814,   252,     0,     0,     0,   815,   253,   816,     0,
     254,   817,   818,     0,   255,   256,   257,   819,   820,   821,
       0,     0,     0,     0,   822,   260,   823,     0,     0,   824,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,   825,     0,   287,   288,   289,
     290,   291,   826,   827,   292,   293,     0,   294,   295,   296,
     297,   298,   828,     0,   299,   300,     0,     0,     0,   829,
     302,  2662,   303,     0,     0,     0,   304,     0,   305,   830,
     307,   831,     0,   309,     0,   310,     0,   832,     0,   311,
     312,     0,   313,   833,     0,   314,   315,     0,     0,     0,
     834,   317,   318,   319,   835,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,   836,   324,   325,   326,   837,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,   838,   337,   338,     0,     0,
       0,     0,     0,   839,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,   840,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   841,   367,   368,   369,   370,   842,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   843,
     378,     0,     0,   844,   380,   845,   381,     0,   382,   846,
     847,   848,   849,   850,   387,   388,   389,   390,   391,     0,
     851,   392,   393,     0,     0,   394,   395,   396,   397,   398,
     852,  1041,   853,   399,   400,     0,   854,   855,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,   856,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   857,   858,   422,   859,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   860,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,   861,
     862,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   863,
       0,   864,   466,   467,   468,   469,     0,   470,   865,   866,
     472,   473,   474,   475,     0,   867,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,   868,   869,
     506,   507,     0,     0,   508,   509,   870,   511,   512,   513,
     871,   872,   514,   515,   516,   517,   873,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   874,   524,   525,     0,
     875,   876,   877,   878,     0,     0,     0,     0,     0,   530,
     531,     0,   879,   880,   881,   533,   534,   535,   882,   536,
     537,   883,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   884,   546,     0,     0,
     885,   886,   887,   547,   888,   548,     0,     0,   549,   889,
       0,   890,   550,     0,   551,   552,   891,   892,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   893,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,   894,
     895,     0,   568,   569,   570,   896,     0,   571,   572,     0,
     573,   897,   898,   574,   899,   575,     0,   900,   901,   902,
     903,   904,   576,   577,     0,   905,   578,   906,   579,   907,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,     0,     0,     0,   908,   909,     0,     0,     0,     0,
     910,     0,   911,     0,     0,     0,   912,     0,     0,     0,
     913,   914,   194,   195,     0,   799,   197,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,     0,     0,
     800,     0,   204,   205,   206,   207,   801,   209,     0,   210,
       0,     0,   802,   211,   803,   804,   805,   212,   806,     0,
     213,   214,   215,     0,   216,     0,   217,   218,     0,     0,
     219,   807,   808,   220,   221,     0,   222,   223,   809,   810,
     225,     0,   226,   227,   228,   229,   811,   231,     0,   812,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,   813,   814,   252,     0,     0,     0,   815,
     253,   816,     0,   254,   817,   818,     0,   255,   256,   257,
     819,   820,   821,     0,     0,     0,     0,   822,   260,   823,
       0,     0,   824,   261,   262,     0,   263,     0,     0,     0,
       0,     0,   264,   265,   266,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,   272,     0,     0,     0,   273,
       0,   274,   275,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,   282,   283,   284,   285,   286,   825,     0,
     287,   288,   289,   290,   291,   826,   827,   292,   293,     0,
     294,   295,   296,   297,   298,   828,     0,   299,   300,     0,
       0,     0,   829,   302,  2664,   303,     0,     0,     0,   304,
       0,   305,   830,   307,   831,     0,   309,     0,   310,     0,
     832,     0,   311,   312,     0,   313,   833,     0,   314,   315,
       0,     0,     0,   834,   317,   318,   319,   835,     0,   320,
     321,   322,     0,     0,   323,     0,     0,     0,   836,   324,
     325,   326,   837,     0,     0,   327,     0,     0,     0,   328,
     329,     0,   330,   331,     0,     0,     0,   332,     0,   333,
       0,     0,   334,   335,     0,     0,   336,     0,   838,   337,
     338,     0,     0,     0,     0,     0,   839,   340,     0,   341,
       0,   342,     0,   343,   344,     0,     0,   840,     0,     0,
       0,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   841,   367,   368,   369,
     370,   842,   371,   372,     0,     0,     0,     0,   373,   374,
     375,   376,   843,   378,     0,     0,   844,   380,   845,   381,
       0,   382,   846,   847,   848,   849,   850,   387,   388,   389,
     390,   391,     0,   851,   392,   393,     0,     0,   394,   395,
     396,   397,   398,   852,  1041,   853,   399,   400,     0,   854,
     855,   401,     0,   402,   403,     0,   404,   405,   406,     0,
       0,   407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   408,   409,   410,   856,   411,     0,   412,     0,   413,
     414,   415,   416,   417,   418,   419,   857,   858,   422,   859,
     423,     0,   424,   425,   426,     0,   427,     0,   428,   429,
     430,   431,   432,     0,   860,   434,   435,     0,     0,   436,
       0,     0,     0,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   446,   447,     0,   448,
     449,   450,   861,   862,   451,   452,   453,   454,   455,   456,
     457,   458,     0,   459,     0,   460,   461,     0,   462,   463,
     464,     0,   863,     0,   864,   466,   467,   468,   469,     0,
     470,   865,   866,   472,   473,   474,   475,     0,   867,   477,
       0,     0,     0,   478,   479,   480,   481,     0,     0,     0,
     482,     0,     0,     0,   483,     0,   484,   485,   486,   487,
       0,   488,   489,   490,   491,   492,     0,     0,     0,     0,
       0,   493,   494,   495,     0,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,   502,   503,   504,
     505,   868,   869,   506,   507,     0,     0,   508,   509,   870,
     511,   512,   513,   871,   872,   514,   515,   516,   517,   873,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   874,
     524,   525,     0,   875,   876,   877,   878,     0,     0,     0,
       0,     0,   530,   531,     0,   879,   880,   881,   533,   534,
     535,   882,   536,   537,   883,   538,   539,     0,   540,   541,
       0,     0,   542,     0,     0,   543,     0,   544,     0,   884,
     546,     0,     0,   885,   886,   887,   547,   888,   548,     0,
       0,   549,   889,     0,   890,   550,     0,   551,   552,   891,
     892,     0,     0,     0,     0,     0,     0,   555,   556,   557,
       0,   558,   559,   560,   561,     0,     0,   893,     0,     0,
       0,   563,   564,   565,   566,     0,   567,     0,     0,     0,
       0,     0,   894,   895,     0,   568,   569,   570,   896,     0,
     571,   572,     0,   573,   897,   898,   574,   899,   575,     0,
     900,   901,   902,   903,   904,   576,   577,     0,   905,   578,
     906,   579,   907,   580,   581,     0,     0,     0,   582,   583,
     584,   585,   586,   587,   588,   589,     0,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,     0,   600,   601,
     602,   603,   604,   605,     0,     0,     0,   908,   909,     0,
       0,     0,     0,   910,     0,   911,     0,     0,     0,   912,
       0,     0,     0,   913,   914,   194,   195,     0,   799,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   800,     0,   204,   205,   206,   207,   801,
     209,     0,   210,     0,     0,   802,   211,   803,   804,   805,
     212,   806,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,   807,   808,   220,   221,     0,   222,
     223,   809,   810,   225,     0,   226,   227,   228,   229,   811,
     231,     0,   812,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,   813,   814,   252,     0,
       0,     0,   815,   253,   816,     0,   254,   817,   818,     0,
     255,   256,   257,   819,   820,   821,     0,     0,     0,     0,
     822,   260,   823,     0,     0,   824,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,   825,     0,   287,   288,   289,   290,   291,   826,   827,
     292,   293,     0,   294,   295,   296,   297,   298,   828,     0,
     299,   300,     0,     0,     0,   829,   302,  2666,   303,     0,
       0,     0,   304,     0,   305,   830,   307,   831,     0,   309,
       0,   310,     0,   832,     0,   311,   312,     0,   313,   833,
       0,   314,   315,     0,     0,     0,   834,   317,   318,   319,
     835,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,   836,   324,   325,   326,   837,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,   838,   337,   338,     0,     0,     0,     0,     0,   839,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
     840,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   841,
     367,   368,   369,   370,   842,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   843,   378,     0,     0,   844,
     380,   845,   381,     0,   382,   846,   847,   848,   849,   850,
     387,   388,   389,   390,   391,     0,   851,   392,   393,     0,
       0,   394,   395,   396,   397,   398,   852,  1041,   853,   399,
     400,     0,   854,   855,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,   856,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   857,
     858,   422,   859,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   860,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,   861,   862,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   863,     0,   864,   466,   467,
     468,   469,     0,   470,   865,   866,   472,   473,   474,   475,
       0,   867,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,   868,   869,   506,   507,     0,     0,
     508,   509,   870,   511,   512,   513,   871,   872,   514,   515,
     516,   517,   873,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   874,   524,   525,     0,   875,   876,   877,   878,
       0,     0,     0,     0,     0,   530,   531,     0,   879,   880,
     881,   533,   534,   535,   882,   536,   537,   883,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   884,   546,     0,     0,   885,   886,   887,   547,
     888,   548,     0,     0,   549,   889,     0,   890,   550,     0,
     551,   552,   891,   892,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     893,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,   894,   895,     0,   568,   569,
     570,   896,     0,   571,   572,     0,   573,   897,   898,   574,
     899,   575,     0,   900,   901,   902,   903,   904,   576,   577,
       0,   905,   578,   906,   579,   907,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,     0,     0,     0,
     908,   909,     0,     0,     0,     0,   910,     0,   911,     0,
       0,     0,   912,     0,     0,     0,   913,   914,   194,   195,
       0,   799,   197,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,     0,     0,   800,     0,   204,   205,
     206,   207,   801,   209,     0,   210,     0,     0,   802,   211,
     803,   804,   805,   212,   806,     0,   213,   214,   215,     0,
     216,     0,   217,   218,     0,     0,   219,   807,   808,   220,
     221,     0,   222,   223,   809,   810,   225,     0,   226,   227,
     228,   229,   811,   231,     0,   812,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,   813,
     814,   252,     0,     0,     0,   815,   253,   816,     0,   254,
     817,   818,     0,   255,   256,   257,   819,   820,   821,     0,
       0,     0,     0,   822,   260,   823,     0,     0,   824,   261,
     262,     0,   263,     0,     0,     0,     0,     0,   264,   265,
     266,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,   272,     0,     0,     0,   273,     0,   274,   275,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,   282,
     283,   284,   285,   286,   825,     0,   287,   288,   289,   290,
     291,   826,   827,   292,   293,     0,   294,   295,   296,   297,
     298,   828,     0,   299,   300,     0,     0,     0,   829,   302,
       0,   303,     0,     0,     0,   304,     0,   305,   830,   307,
     831,     0,   309,     0,   310,     0,   832,     0,   311,   312,
       0,   313,   833,     0,   314,   315,     0,     0,     0,   834,
     317,   318,   319,   835,     0,   320,   321,   322,     0,     0,
     323,     0,     0,     0,   836,   324,   325,   326,   837,     0,
       0,   327,     0,     0,     0,   328,   329,     0,   330,   331,
       0,     0,     0,   332,     0,   333,     0,     0,   334,   335,
       0,     0,   336,     0,   838,   337,   338,     0,     0,     0,
       0,     0,   839,   340,     0,   341,     0,   342,     0,   343,
     344,     0,     0,   840,     0,     0,     0,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,   841,   367,   368,   369,   370,   842,   371,   372,
       0,     0,     0,     0,   373,   374,   375,   376,   843,   378,
       0,     0,   844,   380,   845,   381,     0,   382,   846,   847,
     848,   849,   850,   387,   388,   389,   390,   391,     0,   851,
     392,   393,     0,     0,   394,   395,   396,   397,   398,   852,
    1041,   853,   399,   400,     0,   854,   855,   401,     0,   402,
     403,     0,   404,   405,   406,     0,     0,   407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   408,   409,   410,
     856,   411,     0,   412,     0,   413,   414,   415,   416,   417,
     418,   419,   857,   858,   422,   859,   423,     0,   424,   425,
     426,     0,   427,     0,   428,   429,   430,   431,   432,     0,
     860,   434,   435,     0,     0,   436,     0,     0,     0,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
     445,     0,   446,   447,     0,   448,   449,   450,   861,   862,
     451,   452,   453,   454,   455,   456,   457,   458,     0,   459,
       0,   460,   461,     0,   462,   463,   464,     0,   863,     0,
     864,   466,   467,   468,   469,     0,   470,   865,   866,   472,
     473,   474,   475,     0,   867,   477,     0,     0,     0,   478,
     479,   480,   481,     0,     0,     0,   482,     0,     0,     0,
     483,     0,   484,   485,   486,   487,     0,   488,   489,   490,
     491,   492,     0,     0,     0,     0,     0,   493,   494,   495,
       0,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,   502,   503,   504,   505,   868,   869,   506,
     507,     0,     0,   508,   509,   870,   511,   512,   513,   871,
     872,   514,   515,   516,   517,   873,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   874,   524,   525,     0,   875,
     876,   877,   878,     0,     0,     0,     0,     0,   530,   531,
       0,   879,   880,   881,   533,   534,   535,   882,   536,   537,
     883,   538,   539,     0,   540,   541,     0,     0,   542,     0,
       0,   543,     0,   544,     0,   884,   546,     0,     0,   885,
     886,   887,   547,   888,   548,     0,     0,   549,   889,     0,
     890,   550,     0,   551,   552,   891,   892,     0,     0,     0,
       0,     0,     0,   555,   556,   557,     0,   558,   559,   560,
     561,     0,     0,   893,     0,     0,     0,   563,   564,   565,
     566,     0,   567,     0,     0,     0,     0,     0,   894,   895,
       0,   568,   569,   570,   896,     0,   571,   572,     0,   573,
     897,   898,   574,   899,   575,     0,   900,   901,   902,   903,
     904,   576,   577,     0,   905,   578,   906,   579,   907,   580,
     581,     0,     0,     0,   582,   583,   584,   585,   586,   587,
     588,   589,     0,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,     0,   600,   601,   602,   603,   604,   605,
       0,     0,     0,   908,   909,     0,     0,     0,     0,   910,
       0,   911,     0,     0,     0,   912,     0,     0,     0,   913,
     914,   194,   195,     0,   799,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   800,
       0,   204,   205,   206,   207,   801,   209,     0,   210,     0,
       0,   802,   211,   803,   804,   805,   212,   806,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
     807,   808,   220,   221,     0,   222,   223,   809,   810,   225,
       0,   226,   227,   228,   229,   811,   231,     0,   812,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,   813,   814,   252,     0,     0,     0,   815,   253,
     816,     0,   254,   817,   818,     0,   255,   256,   257,   819,
     820,   821,     0,     0,     0,     0,   822,   260,   823,     0,
       0,   824,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,   825,     0,   287,
     288,   289,   290,   291,   826,   827,   292,   293,     0,   294,
     295,   296,   297,   298,   828,     0,   299,   300,     0,     0,
       0,   829,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   830,   307,   831,     0,   309,     0,   310,     0,   832,
       0,   311,   312,     0,   313,   833,     0,   314,   315,     0,
       0,     0,   834,   317,   318,   319,   835,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,   836,   324,   325,
     326,   837,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,   838,   337,   338,
       0,     0,     0,     0,     0,   839,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,   840,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,   841,   367,   368,   369,   370,
     842,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   843,   378,     0,     0,   844,   380,   845,   381,     0,
     382,   846,   847,   848,   849,   850,   387,   388,   389,   390,
     391,     0,   851,   392,   393,     0,     0,   394,   395,   396,
     397,   398,   852,  1041,   853,   399,   400,     0,   854,   855,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,   856,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   857,   858,   422,   859,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   860,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,   861,   862,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   863,     0,   864,   466,   467,   468,   469,     0,   470,
     865,   866,   472,   473,   474,   475,     0,   867,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
     868,   869,   506,   507,     0,     0,   508,   509,   870,   511,
     512,   513,   871,   872,   514,   515,   516,   517,   873,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   874,   524,
     525,     0,   875,   876,   877,   878,     0,     0,     0,     0,
       0,   530,   531,     0,   879,   880,   881,   533,   534,   535,
     882,   536,   537,   883,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   884,   546,
       0,     0,   885,   886,   887,   547,   888,   548,     0,     0,
     549,   889,     0,   890,   550,     0,   551,   552,   891,   892,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   893,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,   894,   895,     0,   568,   569,   570,   896,     0,   571,
     572,     0,   573,   897,   898,   574,   899,   575,     0,   900,
     901,   902,   903,   904,   576,   577,     0,   905,   578,   906,
     579,   907,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,     0,     0,     0,   908,   909,     0,     0,
       0,     0,   910,     0,  1292,     0,     0,     0,   912,     0,
       0,     0,   913,   914,   194,   195,     0,   799,   197,   198,
     199,   200,  2367,     0,   201,     0,     0,     0,     0,  2368,
       0,     0,   800,     0,   204,   205,   206,   207,   801,   209,
       0,   210,     0,     0,   802,   211,   803,   804,   805,   212,
     806,     0,   213,   214,   215,     0,   216,     0,   217,   218,
       0,     0,   219,   807,   808,   220,   221,     0,   222,   223,
     809,   810,   225,     0,   226,   227,   228,   229,   811,   231,
       0,   812,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,   813,   814,   252,     0,     0,
       0,   815,   253,   816,     0,   254,   817,   818,     0,   255,
     256,   257,   819,   820,   821,     0,     0,     0,     0,   822,
     260,   823,     0,     0,   824,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,   274,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,   286,
     825,     0,   287,   288,   289,   290,   291,   826,   827,   292,
     293,     0,   294,   295,   296,   297,   298,   828,     0,   299,
     300,     0,     0,     0,   829,   302,     0,   303,     0,     0,
       0,   304,     0,   305,   830,   307,   831,     0,   309,     0,
     310,     0,   832,     0,   311,   312,     0,   313,   833,     0,
     314,   315,     0,     0,     0,   834,   317,   318,   319,   835,
       0,   320,   321,   322,     0,     0,   323,     0,     0,     0,
     836,   324,   325,   326,   837,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,     0,     0,     0,   332,
       0,   333,     0,     0,   334,   335,     0,     0,   336,     0,
     838,   337,   338,     0,     0,     0,     0,     0,   839,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,   840,
       0,     0,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,   841,   367,
     368,   369,   370,   842,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   843,   378,     0,     0,   844,   380,
     845,   381,     0,   382,   846,   847,   848,   849,   850,   387,
     388,   389,   390,   391,     0,   851,   392,   393,     0,     0,
     394,   395,   396,   397,   398,   852,     0,   853,   399,   400,
       0,   854,   855,   401,     0,   402,   403,     0,   404,   405,
     406,     0,     0,   407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   408,   409,   410,   856,   411,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   857,   858,
     422,   859,   423,     0,   424,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   860,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,   447,
       0,   448,   449,   450,   861,   862,   451,   452,   453,   454,
     455,   456,   457,   458,     0,   459,     0,   460,   461,     0,
     462,   463,   464,     0,   863,     0,   864,   466,   467,   468,
     469,     0,   470,   865,   866,   472,   473,   474,   475,     0,
     867,   477,     0,     0,     0,   478,   479,   480,   481,     0,
       0,     0,   482,     0,     0,     0,   483,     0,   484,   485,
     486,   487,     0,   488,   489,   490,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,   502,
     503,   504,   505,   868,   869,   506,   507,     0,     0,   508,
     509,   870,   511,   512,   513,   871,   872,   514,   515,   516,
     517,   873,   518,   519,     0,     0,   520,   521,   522,   523,
       0,   874,   524,   525,     0,   875,   876,   877,   878,     0,
       0,     0,     0,     0,   530,   531,     0,   879,   880,   881,
     533,   534,   535,   882,   536,   537,   883,   538,   539,     0,
     540,   541,     0,     0,   542,     0,     0,   543,     0,   544,
       0,   884,   546,     0,     0,   885,   886,   887,   547,   888,
     548,     0,     0,   549,   889,     0,   890,   550,     0,   551,
     552,   891,   892,     0,     0,     0,     0,     0,     0,   555,
     556,   557,     0,   558,   559,   560,   561,     0,     0,   893,
       0,     0,     0,   563,   564,   565,   566,     0,   567,     0,
       0,     0,     0,     0,   894,   895,     0,   568,   569,   570,
     896,     0,   571,   572,     0,   573,   897,   898,   574,   899,
     575,     0,   900,   901,   902,   903,   904,   576,   577,     0,
     905,   578,   906,   579,   907,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,     0,
     600,   601,   602,   603,   604,   605,     0,     0,     0,   908,
     909,     0,     0,     0,     0,   910,     0,   911,     0,     0,
       0,   912,     0,     0,     0,   913,   914,   194,   195,     0,
     799,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   800,     0,   204,   205,   206,
     207,   801,   209,     0,   210,     0,     0,   802,   211,   803,
     804,   805,   212,   806,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,   807,   808,   220,   221,
       0,   222,   223,   809,   810,   225,     0,   226,   227,   228,
     229,   811,   231,     0,   812,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,   813,   814,
     252,     0,     0,     0,   815,   253,   816,     0,   254,   817,
     818,     0,   255,   256,   257,   819,   820,   821,     0,     0,
       0,     0,   822,   260,   823,     0,     0,   824,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,   825,     0,   287,   288,   289,   290,   291,
     826,   827,   292,   293,     0,   294,   295,   296,   297,   298,
     828,     0,   299,   300,     0,     0,     0,   829,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   830,   307,   831,
       0,   309,     0,   310,     0,   832,     0,   311,   312,     0,
     313,   833,     0,   314,   315,     0,     0,     0,   834,   317,
     318,   319,   835,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,   836,   324,   325,   326,  3210,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,   838,   337,   338,     0,     0,     0,     0,
       0,   839,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,   840,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,   841,   367,   368,   369,   370,   842,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   843,   378,     0,
       0,   844,   380,   845,   381,     0,   382,   846,   847,   848,
     849,   850,   387,   388,   389,   390,   391,     0,   851,   392,
     393,     0,     0,   394,   395,   396,   397,   398,   852,  1041,
     853,   399,   400,     0,   854,   855,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,   856,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   857,   858,   422,   859,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   860,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,   861,   862,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   863,     0,   864,
     466,   467,   468,   469,     0,   470,   865,   866,   472,   473,
     474,   475,     0,   867,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,   868,   869,   506,   507,
       0,     0,   508,   509,   870,   511,   512,   513,   871,   872,
     514,   515,   516,   517,   873,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   874,   524,   525,     0,   875,   876,
     877,   878,     0,     0,     0,     0,     0,   530,   531,     0,
     879,   880,   881,   533,   534,   535,   882,   536,   537,   883,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   884,   546,     0,     0,   885,   886,
     887,   547,   888,   548,     0,     0,   549,   889,     0,   890,
     550,     0,   551,   552,   891,   892,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   893,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,   894,   895,     0,
     568,   569,   570,   896,     0,   571,   572,     0,   573,   897,
     898,   574,   899,   575,     0,   900,   901,   902,   903,   904,
     576,   577,     0,   905,   578,   906,   579,   907,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,     0,
       0,     0,   908,   909,     0,     0,     0,     0,   910,     0,
     911,     0,     0,     0,   912,     0,     0,     0,   913,   914,
     194,   195,     0,   799,   197,   198,   199,   200,     0,     0,
     201,     0,     0,     0,     0,   202,     0,     0,   800,     0,
     204,   205,   206,   207,   801,   209,     0,   210,     0,     0,
     802,   211,   803,   804,   805,   212,   806,     0,   213,   214,
     215,     0,   216,     0,   217,   218,     0,     0,   219,   807,
     808,   220,   221,     0,   222,   223,   809,   810,   225,     0,
     226,   227,   228,   229,   811,   231,     0,   812,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,   813,   814,   252,     0,     0,     0,   815,   253,   816,
       0,   254,   817,   818,     0,   255,   256,   257,   819,   820,
     821,     0,     0,     0,     0,   822,   260,   823,     0,     0,
     824,   261,   262,     0,   263,     0,     0,     0,     0,     0,
     264,   265,   266,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,   272,     0,     0,     0,   273,     0,   274,
     275,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,   282,   283,   284,   285,   286,   825,     0,   287,   288,
     289,   290,   291,   826,   827,   292,   293,     0,   294,   295,
     296,   297,   298,   828,     0,   299,   300,     0,     0,     0,
     829,   302,     0,   303,     0,     0,     0,   304,     0,   305,
     830,   307,   831,     0,   309,     0,   310,     0,   832,     0,
     311,   312,     0,   313,   833,     0,   314,   315,     0,     0,
       0,   834,   317,   318,   319,   835,     0,   320,   321,   322,
       0,     0,   323,     0,     0,     0,   836,   324,   325,   326,
    3267,     0,     0,   327,     0,     0,     0,   328,   329,     0,
     330,   331,     0,     0,     0,   332,     0,   333,     0,     0,
     334,   335,     0,     0,   336,     0,   838,   337,   338,     0,
       0,     0,     0,     0,   839,   340,     0,   341,     0,   342,
       0,   343,   344,     0,     0,   840,     0,     0,     0,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,   841,   367,   368,   369,   370,   842,
     371,   372,     0,     0,     0,     0,   373,   374,   375,   376,
     843,   378,     0,     0,   844,   380,   845,   381,     0,   382,
     846,   847,   848,   849,   850,   387,   388,   389,   390,   391,
       0,   851,   392,   393,     0,     0,   394,   395,   396,   397,
     398,   852,  1041,   853,   399,   400,     0,   854,   855,   401,
       0,   402,   403,     0,   404,   405,   406,     0,     0,   407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   408,
     409,   410,   856,   411,     0,   412,     0,   413,   414,   415,
     416,   417,   418,   419,   857,   858,   422,   859,   423,     0,
     424,   425,   426,     0,   427,     0,   428,   429,   430,   431,
     432,     0,   860,   434,   435,     0,     0,   436,     0,     0,
       0,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,   445,     0,   446,   447,     0,   448,   449,   450,
     861,   862,   451,   452,   453,   454,   455,   456,   457,   458,
       0,   459,     0,   460,   461,     0,   462,   463,   464,     0,
     863,     0,   864,   466,   467,   468,   469,     0,   470,   865,
     866,   472,   473,   474,   475,     0,   867,   477,     0,     0,
       0,   478,   479,   480,   481,     0,     0,     0,   482,     0,
       0,     0,   483,     0,   484,   485,   486,   487,     0,   488,
     489,   490,   491,   492,     0,     0,     0,     0,     0,   493,
     494,   495,     0,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,   502,   503,   504,   505,   868,
     869,   506,   507,     0,     0,   508,   509,   870,   511,   512,
     513,   871,   872,   514,   515,   516,   517,   873,   518,   519,
       0,     0,   520,   521,   522,   523,     0,   874,   524,   525,
       0,   875,   876,   877,   878,     0,     0,     0,     0,     0,
     530,   531,     0,   879,   880,   881,   533,   534,   535,   882,
     536,   537,   883,   538,   539,     0,   540,   541,     0,     0,
     542,     0,     0,   543,     0,   544,     0,   884,   546,     0,
       0,   885,   886,   887,   547,   888,   548,     0,     0,   549,
     889,     0,   890,   550,     0,   551,   552,   891,   892,     0,
       0,     0,     0,     0,     0,   555,   556,   557,     0,   558,
     559,   560,   561,     0,     0,   893,     0,     0,     0,   563,
     564,   565,   566,     0,   567,     0,     0,     0,     0,     0,
     894,   895,     0,   568,   569,   570,   896,     0,   571,   572,
       0,   573,   897,   898,   574,   899,   575,     0,   900,   901,
     902,   903,   904,   576,   577,     0,   905,   578,   906,   579,
     907,   580,   581,     0,     0,     0,   582,   583,   584,   585,
     586,   587,   588,   589,     0,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,     0,   600,   601,   602,   603,
     604,   605,     0,     0,     0,   908,   909,     0,     0,     0,
       0,   910,     0,   911,     0,     0,     0,   912,     0,     0,
       0,   913,   914,   194,   195,     0,   799,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   800,     0,   204,   205,   206,   207,   801,   209,     0,
     210,     0,     0,   802,   211,   803,   804,   805,   212,   806,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,   807,   808,   220,   221,     0,   222,   223,   809,
     810,   225,     0,   226,   227,   228,   229,   811,   231,     0,
     812,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,   813,   814,   252,     0,     0,     0,
     815,   253,   816,     0,   254,   817,   818,     0,   255,   256,
     257,   819,   820,   821,     0,     0,     0,     0,   822,   260,
     823,     0,     0,  3627,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,   825,
       0,   287,   288,   289,   290,   291,   826,   827,   292,   293,
       0,   294,   295,   296,   297,   298,   828,     0,   299,   300,
       0,     0,     0,   829,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   830,   307,   831,     0,   309,     0,   310,
       0,   832,     0,   311,   312,     0,   313,   833,     0,   314,
     315,     0,     0,     0,   834,   317,   318,   319,   835,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,   836,
     324,   325,   326,   837,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,   838,
     337,   338,     0,     0,     0,     0,     0,   839,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,   840,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,   841,   367,   368,
     369,   370,   842,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   843,   378,     0,     0,   844,   380,   845,
     381,     0,   382,   846,   847,   848,   849,   850,   387,   388,
     389,   390,   391,     0,   851,   392,   393,     0,     0,   394,
     395,   396,   397,   398,   852,  1041,   853,   399,   400,     0,
     854,   855,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,   856,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   857,   858,   422,
     859,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   860,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,   861,   862,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   863,     0,   864,   466,   467,   468,   469,
       0,   470,   865,   866,   472,   473,   474,   475,     0,   867,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,   868,   869,   506,   507,     0,     0,   508,   509,
     870,   511,   512,   513,   871,   872,   514,   515,   516,   517,
     873,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     874,   524,   525,     0,   875,   876,   877,   878,     0,     0,
       0,     0,     0,   530,   531,     0,   879,   880,   881,   533,
     534,   535,   882,   536,   537,   883,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     884,   546,     0,     0,   885,   886,   887,   547,   888,   548,
       0,     0,   549,   889,     0,   890,   550,     0,   551,   552,
     891,   892,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   893,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,   894,   895,     0,   568,   569,   570,   896,
       0,   571,   572,     0,   573,   897,   898,   574,   899,   575,
       0,   900,   901,   902,   903,   904,   576,   577,     0,   905,
     578,   906,   579,   907,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,     0,     0,     0,   908,   909,
       0,     0,     0,     0,   910,     0,   911,     0,     0,     0,
     912,     0,     0,     0,   913,   914,   194,   195,     0,   799,
     197,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,     0,     0,   800,     0,   204,   205,   206,   207,
     801,   209,     0,   210,     0,     0,   802,   211,   803,   804,
     805,   212,   806,     0,   213,   214,   215,     0,   216,     0,
     217,   218,     0,     0,   219,   807,   808,   220,   221,     0,
     222,   223,   809,   810,   225,     0,   226,   227,   228,   229,
     811,   231,     0,   812,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,   813,   814,   252,
       0,     0,     0,   815,   253,   816,     0,   254,   817,   818,
       0,   255,   256,   257,   819,   820,   821,     0,     0,     0,
       0,   822,   260,   823,     0,     0,   824,   261,   262,     0,
     263,     0,     0,     0,     0,     0,   264,   265,   266,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,   272,
       0,     0,     0,   273,     0,   274,   275,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,   282,   283,   284,
     285,   286,   825,     0,   287,   288,   289,   290,   291,   826,
     827,   292,   293,     0,   294,   295,   296,   297,   298,   828,
       0,   299,   300,     0,     0,     0,   829,   302,     0,   303,
       0,     0,     0,   304,     0,   305,   830,   307,   831,     0,
     309,     0,   310,     0,   832,     0,   311,   312,     0,   313,
     833,     0,   314,   315,     0,     0,     0,   834,   317,   318,
     319,   835,     0,   320,   321,   322,     0,     0,   323,     0,
       0,     0,   836,   324,   325,   326,   837,     0,     0,   327,
       0,     0,     0,   328,   329,     0,   330,   331,     0,     0,
       0,   332,     0,   333,     0,     0,   334,   335,     0,     0,
     336,     0,   838,   337,   338,     0,     0,     0,     0,     0,
     839,   340,     0,   341,     0,   342,     0,   343,   344,     0,
       0,   840,     0,     0,     0,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
     841,   367,   368,   369,   370,   842,   371,   372,  4800,     0,
       0,     0,   373,   374,   375,   376,   843,   378,     0,     0,
     844,   380,   845,   381,     0,   382,   846,   847,   848,   849,
     850,   387,   388,   389,   390,   391,     0,   851,   392,   393,
       0,     0,   394,   395,   396,   397,   398,   852,     0,   853,
     399,   400,     0,   854,   855,   401,     0,   402,   403,     0,
     404,   405,   406,     0,     0,   407,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   408,   409,   410,   856,   411,
       0,   412,     0,   413,   414,   415,   416,   417,   418,   419,
     857,   858,   422,   859,   423,     0,   424,   425,   426,     0,
     427,     0,   428,   429,   430,   431,   432,     0,   860,   434,
     435,     0,     0,   436,     0,     0,     0,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     446,   447,     0,   448,   449,   450,   861,   862,   451,   452,
     453,   454,   455,   456,   457,   458,     0,   459,     0,   460,
     461,     0,   462,   463,   464,     0,   863,     0,   864,   466,
     467,   468,   469,     0,   470,   865,   866,   472,   473,   474,
     475,     0,   867,   477,     0,     0,     0,   478,   479,   480,
     481,     0,     0,     0,   482,     0,     0,     0,   483,     0,
     484,   485,   486,   487,     0,   488,   489,   490,   491,   492,
       0,     0,     0,     0,     0,   493,   494,   495,     0,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,   502,   503,   504,   505,   868,   869,   506,   507,     0,
       0,   508,   509,   870,   511,   512,   513,   871,   872,   514,
     515,   516,   517,   873,   518,   519,     0,     0,   520,   521,
     522,   523,     0,   874,   524,   525,     0,   875,   876,   877,
     878,     0,     0,     0,     0,     0,   530,   531,     0,   879,
     880,   881,   533,   534,   535,   882,   536,   537,   883,   538,
     539,     0,   540,   541,     0,     0,   542,     0,     0,   543,
       0,   544,     0,   884,   546,     0,     0,   885,   886,   887,
     547,   888,   548,     0,     0,   549,   889,     0,   890,   550,
       0,   551,   552,   891,   892,     0,     0,     0,     0,     0,
       0,   555,   556,   557,     0,   558,   559,   560,   561,     0,
       0,   893,     0,     0,     0,   563,   564,   565,   566,     0,
     567,     0,     0,     0,     0,     0,   894,   895,     0,   568,
     569,   570,   896,     0,   571,   572,     0,   573,   897,   898,
     574,   899,   575,     0,   900,   901,   902,   903,   904,   576,
     577,     0,   905,   578,   906,   579,   907,   580,   581,     0,
       0,     0,   582,   583,   584,   585,   586,   587,   588,   589,
       0,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,     0,   600,   601,   602,   603,   604,   605,     0,     0,
       0,   908,   909,     0,     0,     0,     0,   910,     0,   911,
       0,     0,     0,   912,     0,     0,     0,   913,   914,   194,
     195,     0,   799,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   800,     0,   204,
     205,   206,   207,   801,   209,     0,   210,     0,     0,   802,
     211,   803,   804,   805,   212,   806,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,   807,   808,
     220,   221,     0,   222,   223,   809,   810,   225,     0,   226,
     227,   228,   229,   811,   231,     0,   812,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
     813,   814,   252,     0,     0,     0,   815,   253,   816,     0,
     254,   817,   818,     0,   255,   256,   257,   819,   820,   821,
       0,     0,     0,     0,   822,   260,   823,     0,     0,   824,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,   825,     0,   287,   288,   289,
     290,   291,   826,   827,   292,   293,     0,   294,   295,   296,
     297,   298,   828,     0,   299,   300,     0,     0,     0,   829,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   830,
     307,   831,     0,   309,     0,   310,     0,   832,     0,   311,
     312,     0,   313,   833,     0,   314,   315,     0,     0,     0,
     834,   317,   318,   319,   835,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,   836,   324,   325,   326,   837,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,   838,   337,   338,     0,     0,
       0,     0,     0,   839,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,   840,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,   841,   367,   368,   369,   370,   842,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   843,
     378,     0,     0,   844,   380,   845,   381,     0,   382,   846,
     847,   848,   849,   850,   387,   388,   389,   390,   391,     0,
     851,   392,   393,     0,     0,   394,   395,   396,   397,   398,
     852,     0,   853,   399,   400,     0,   854,   855,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,   856,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   857,   858,   422,   859,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   860,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,   861,
     862,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   863,
       0,   864,   466,   467,   468,   469,     0,   470,   865,   866,
     472,   473,   474,   475,     0,   867,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,   868,   869,
     506,   507,     0,     0,   508,   509,   870,   511,   512,   513,
     871,   872,   514,   515,   516,   517,   873,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   874,   524,   525,     0,
     875,   876,   877,   878,     0,     0,     0,     0,     0,   530,
     531,     0,   879,   880,   881,   533,   534,   535,   882,   536,
     537,   883,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   884,   546,     0,     0,
     885,   886,   887,   547,   888,   548,     0,     0,   549,   889,
       0,   890,   550,     0,   551,   552,   891,   892,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   893,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,   894,
     895,     0,   568,   569,   570,   896,     0,   571,   572,     0,
     573,   897,   898,   574,   899,   575,     0,   900,   901,   902,
     903,   904,   576,   577,     0,   905,   578,   906,   579,   907,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,     0,     0,     0,   908,   909,     0,     0,     0,     0,
     910,     0,   911,     0,     0,     0,   912,     0,     0,     0,
     913,   914,   194,   195,     0,   799,   197,   198,   199,   200,
       0,     0,   201,     0,     0,     0,     0,   202,     0,     0,
     800,     0,   204,   205,   206,   207,   801,   209,     0,   210,
       0,     0,   802,   211,   803,   804,   805,   212,   806,     0,
     213,   214,   215,     0,   216,     0,   217,   218,     0,     0,
     219,   807,   808,   220,   221,     0,   222,   223,   809,   810,
     225,     0,   226,   227,   228,   229,   811,   231,     0,   812,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,   813,   814,   252,     0,     0,     0,   815,
     253,   816,     0,   254,   817,   818,     0,   255,   256,   257,
     819,   820,   821,     0,     0,     0,     0,   822,   260,   823,
       0,     0,   824,   261,   262,     0,   263,     0,     0,     0,
       0,     0,   264,   265,   266,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,   272,     0,     0,     0,   273,
       0,   274,   275,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,   282,   283,   284,   285,   286,   825,     0,
     287,   288,   289,   290,   291,   826,   827,   292,   293,     0,
     294,   295,   296,   297,   298,   828,     0,   299,   300,     0,
       0,     0,   829,   302,     0,   303,     0,     0,     0,   304,
       0,   305,   830,   307,   831,     0,   309,     0,   310,     0,
     832,     0,   311,   312,     0,   313,   833,     0,   314,   315,
       0,     0,     0,   834,   317,   318,   319,   835,     0,   320,
     321,   322,     0,     0,   323,     0,     0,     0,   836,   324,
     325,   326,  2076,     0,     0,   327,     0,     0,     0,   328,
     329,     0,   330,   331,     0,     0,     0,   332,     0,   333,
       0,     0,   334,   335,     0,     0,   336,     0,   838,   337,
     338,     0,     0,     0,     0,     0,   839,   340,     0,   341,
       0,   342,     0,   343,   344,     0,     0,   840,     0,     0,
       0,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,   841,   367,   368,   369,
     370,   842,   371,   372,     0,     0,     0,     0,   373,   374,
     375,   376,   843,   378,     0,     0,   844,   380,   845,   381,
       0,   382,   846,   847,   848,   849,   850,   387,   388,   389,
     390,   391,     0,   851,   392,   393,     0,     0,   394,   395,
     396,   397,   398,   852,     0,   853,   399,   400,     0,   854,
     855,   401,     0,   402,   403,     0,   404,   405,   406,     0,
       0,   407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   408,   409,   410,   856,   411,     0,   412,     0,   413,
     414,   415,   416,   417,   418,   419,   857,   858,   422,   859,
     423,     0,   424,   425,   426,     0,   427,     0,   428,   429,
     430,   431,   432,     0,   860,   434,   435,     0,     0,   436,
       0,     0,     0,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   446,   447,     0,   448,
     449,   450,   861,   862,   451,   452,   453,   454,   455,   456,
     457,   458,     0,   459,     0,   460,   461,     0,   462,   463,
     464,     0,   863,     0,   864,   466,   467,   468,   469,     0,
     470,   865,   866,   472,   473,   474,   475,     0,   867,   477,
       0,     0,     0,   478,   479,   480,   481,     0,     0,     0,
     482,     0,     0,     0,   483,     0,   484,   485,   486,   487,
       0,   488,   489,   490,   491,   492,     0,     0,     0,     0,
       0,   493,   494,   495,     0,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,   502,   503,   504,
     505,   868,   869,   506,   507,     0,     0,   508,   509,   870,
     511,   512,   513,   871,   872,   514,   515,   516,   517,   873,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   874,
     524,   525,     0,   875,   876,   877,   878,     0,     0,     0,
       0,     0,   530,   531,     0,   879,   880,   881,   533,   534,
     535,   882,   536,   537,   883,   538,   539,     0,   540,   541,
       0,     0,   542,     0,     0,   543,     0,   544,     0,   884,
     546,     0,     0,   885,   886,   887,   547,   888,   548,     0,
       0,   549,   889,     0,   890,   550,     0,   551,   552,   891,
     892,     0,     0,     0,     0,     0,     0,   555,   556,   557,
       0,   558,   559,   560,   561,     0,     0,   893,     0,     0,
       0,   563,   564,   565,   566,     0,   567,     0,     0,     0,
       0,     0,   894,   895,     0,   568,   569,   570,   896,     0,
     571,   572,     0,   573,   897,   898,   574,   899,   575,     0,
     900,   901,   902,   903,   904,   576,   577,     0,   905,   578,
     906,   579,   907,   580,   581,     0,     0,     0,   582,   583,
     584,   585,   586,   587,   588,   589,     0,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,     0,   600,   601,
     602,   603,   604,   605,     0,     0,     0,   908,   909,     0,
       0,     0,     0,   910,     0,   911,     0,     0,     0,   912,
       0,     0,     0,   913,   914,   194,   195,     0,   799,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   800,     0,   204,   205,   206,   207,   801,
     209,     0,   210,     0,     0,   802,   211,   803,   804,   805,
     212,   806,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,   807,   808,   220,   221,     0,   222,
     223,   809,   810,   225,     0,   226,   227,   228,   229,   811,
     231,     0,   812,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,   813,   814,   252,     0,
       0,     0,   815,   253,   816,     0,   254,   817,   818,     0,
     255,   256,   257,   819,   820,   821,     0,     0,     0,     0,
     822,   260,   823,     0,     0,   824,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,   825,     0,   287,   288,   289,   290,   291,   826,   827,
     292,   293,     0,   294,   295,   296,   297,   298,   828,     0,
     299,   300,     0,     0,     0,   829,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   830,   307,   831,     0,   309,
       0,   310,     0,   832,     0,   311,   312,     0,   313,   833,
       0,   314,   315,     0,     0,     0,   834,   317,   318,   319,
     835,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,   836,   324,   325,   326,  2078,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,   838,   337,   338,     0,     0,     0,     0,     0,   839,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
     840,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,   841,
     367,   368,   369,   370,   842,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   843,   378,     0,     0,   844,
     380,   845,   381,     0,   382,   846,   847,   848,   849,   850,
     387,   388,   389,   390,   391,     0,   851,   392,   393,     0,
       0,   394,   395,   396,   397,   398,   852,     0,   853,   399,
     400,     0,   854,   855,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,   856,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   857,
     858,   422,   859,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   860,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,   861,   862,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   863,     0,   864,   466,   467,
     468,   469,     0,   470,   865,   866,   472,   473,   474,   475,
       0,   867,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,   868,   869,   506,   507,     0,     0,
     508,   509,   870,   511,   512,   513,   871,   872,   514,   515,
     516,   517,   873,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   874,   524,   525,     0,   875,   876,   877,   878,
       0,     0,     0,     0,     0,   530,   531,     0,   879,   880,
     881,   533,   534,   535,   882,   536,   537,   883,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   884,   546,     0,     0,   885,   886,   887,   547,
     888,   548,     0,     0,   549,   889,     0,   890,   550,     0,
     551,   552,   891,   892,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     893,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,   894,   895,     0,   568,   569,
     570,   896,     0,   571,   572,     0,   573,   897,   898,   574,
     899,   575,     0,   900,   901,   902,   903,   904,   576,   577,
       0,   905,   578,   906,   579,   907,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,     0,     0,     0,
     908,   909,     0,     0,     0,     0,   910,     0,   911,     0,
       0,     0,   912,     0,     0,     0,   913,   914,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,   201,     0,
       0,     0,     0,   202,     0,     0,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,     0,     0,   211,
       0,     0,     0,   212,     0,     0,   213,   214,   215,     0,
     216,     0,   217,   218,     0,     0,   219,     0,     0,   220,
     221,     0,   222,   223,   224,     0,   225,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
       0,   252,     0,     0,     0,     0,   253,     0,     0,   254,
       0,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,     0,   261,
     262,     0,   263,     0,     0,     0,     0,     0,   264,   265,
     266,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,   272,     0,     0,     0,   273,     0,   274,   275,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,   282,
     283,   284,   285,   286,     0,     0,   287,   288,   289,   290,
     291,     0,     0,   292,   293,     0,   294,   295,   296,   297,
     298,     0,     0,   299,   300,     0,     0,     0,   301,   302,
       0,   303,     0,     0,     0,   304,     0,   305,   306,   307,
     308,     0,   309,     0,   310,     0,     0,     0,   311,   312,
       0,   313,     0,     0,   314,   315,     0,     0,     0,   316,
     317,   318,   319,     0,     0,   320,   321,   322,     0,     0,
     323,     0,     0,     0,     0,   324,   325,   326,     0,     0,
       0,   327,     0,     0,     0,   328,   329,     0,   330,   331,
       0,     0,     0,   332,     0,   333,     0,     0,   334,   335,
       0,     0,   336,     0,     0,   337,   338,     0,     0,     0,
       0,     0,   339,   340,     0,   341,     0,   342,     0,   343,
     344,     0,     0,     0,     0,     0,     0,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,   367,   368,   369,   370,     0,   371,   372,
       0,     0,     0,     0,   373,   374,   375,   376,   377,   378,
       0,     0,   379,   380,     0,   381,     0,   382,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,     0,   399,   400,     0,     0,     0,   401,     0,   402,
     403,     0,   404,   405,   406,     0,     0,   407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   408,   409,   410,
       0,   411,     0,   412,     0,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
     426,     0,   427,     0,   428,   429,   430,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
     445,     0,   446,   447,     0,   448,   449,   450,     0,     0,
     451,   452,   453,   454,   455,   456,   457,   458,     0,   459,
       0,   460,   461,     0,   462,   463,   464,     0,   465,     0,
       0,   466,   467,   468,   469,     0,   470,     0,   471,   472,
     473,   474,   475,     0,   476,   477,    42,     0,     0,   478,
     479,   480,   481,     0,     0,     0,   482,     0,     0,     0,
     483,     0,   484,   485,   486,   487,     0,   488,   489,   490,
     491,   492,     0,     0,     0,     0,     0,   493,   494,   495,
       0,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,   502,   503,   504,   505,     0,     0,   506,
     507,     0,     0,   508,   509,   510,   511,   512,   513,     0,
       0,   514,   515,   516,   517,     0,   518,   519,     0,     0,
     520,   521,   522,   523,     0,     0,   524,   525,     0,   526,
     527,   528,   529,     0,     0,     0,     0,     0,   530,   531,
       0,     0,     0,   532,   533,   534,   535,     0,   536,   537,
       0,   538,   539,     0,   540,   541,     0,     0,   542,     0,
       0,   543,     0,   544,     0,   545,   546,     0,     0,     0,
       0,     0,   547,     0,   548,     0,     0,   549,     0,     0,
       0,   550,     0,   551,   552,   553,   554,     0,     0,     0,
      53,     0,     0,   555,   556,   557,     0,   558,   559,   560,
     561,     0,     0,   562,     0,     0,     0,   563,   564,   565,
     566,     0,   567,     0,     0,     0,     0,     0,     0,     0,
       0,   568,   569,   570,     0,     0,   571,   572,     0,   573,
       0,     0,   574,     0,   575,     0,     0,     0,     0,     0,
       0,   576,   577,     0,     0,   578,     0,   579,     0,   580,
     581,     0,     0,  2486,   582,   583,   584,   585,   586,   587,
     588,   589,     0,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,  2487,   600,   601,   602,   603,   604,   605,
       0,     0,     0,   194,   195,     0,   196,   197,   198,   199,
     200,  2488,     0,   201,     0,     0,     0,     0,   202,     0,
    2489,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,     0,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,  2485,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
       0,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,  2486,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,  2487,   600,
     601,   602,   603,   604,   605,     0,     0,     0,   194,   195,
       0,   196,   197,   198,   199,   200,  2488,     0,   201,     0,
       0,     0,     0,   202,     0,  2489,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,     0,     0,   211,
       0,     0,     0,   212,     0,     0,   213,   214,   215,     0,
     216,     0,   217,   218,     0,     0,   219,     0,     0,   220,
     221,     0,   222,   223,   224,     0,   225,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
       0,   252,     0,     0,     0,     0,   253,     0,     0,   254,
       0,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,     0,   261,
     262,     0,   263,     0,     0,     0,     0,     0,   264,   265,
     266,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,   272,     0,     0,     0,   273,     0,   274,   275,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,   282,
     283,   284,   285,   286,     0,     0,   287,   288,   289,   290,
     291,     0,     0,   292,   293,     0,   294,   295,   296,   297,
     298,     0,     0,   299,   300,     0,     0,     0,   301,   302,
       0,   303,     0,     0,     0,   304,     0,   305,   306,   307,
     308,     0,   309,     0,   310,     0,     0,     0,   311,   312,
       0,   313,     0,     0,   314,   315,     0,     0,     0,   316,
     317,   318,   319,     0,     0,   320,   321,   322,     0,     0,
     323,     0,     0,     0,     0,   324,   325,   326,     0,     0,
       0,   327,     0,     0,     0,   328,   329,     0,   330,   331,
       0,     0,     0,   332,     0,   333,     0,     0,   334,   335,
       0,     0,   336,     0,     0,   337,   338,     0,     0,     0,
       0,     0,   339,   340,     0,   341,     0,   342,     0,   343,
     344,     0,     0,     0,     0,     0,     0,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,   367,   368,   369,   370,     0,   371,   372,
       0,     0,     0,     0,   373,   374,   375,   376,   377,   378,
       0,     0,   379,   380,     0,   381,     0,   382,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,     0,   399,   400,     0,     0,     0,   401,     0,   402,
     403,     0,   404,   405,   406,     0,     0,   407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   408,   409,   410,
       0,   411,     0,   412,     0,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
     426,     0,   427,     0,   428,   429,   430,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
     445,     0,   446,   447,     0,   448,   449,   450,     0,     0,
     451,   452,   453,   454,   455,   456,   457,   458,     0,   459,
       0,   460,   461,     0,   462,   463,   464,     0,   465,     0,
       0,   466,   467,   468,   469,     0,   470,     0,   471,   472,
     473,   474,   475,     0,   476,   477,     0,     0,     0,   478,
     479,   480,   481,     0,     0,     0,   482,     0,     0,     0,
     483,     0,   484,   485,   486,   487,     0,   488,   489,   490,
     491,   492,     0,     0,     0,     0,     0,   493,   494,   495,
       0,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,   502,   503,   504,   505,     0,     0,   506,
     507,     0,     0,   508,   509,   510,   511,   512,   513,     0,
       0,   514,   515,   516,   517,     0,   518,   519,     0,     0,
     520,   521,   522,   523,     0,     0,   524,   525,     0,   526,
     527,   528,   529,     0,     0,     0,     0,     0,   530,   531,
       0,     0,     0,   532,   533,   534,   535,     0,   536,   537,
       0,   538,   539,     0,   540,   541,     0,     0,   542,     0,
       0,   543,     0,   544,     0,   545,   546,     0,     0,     0,
       0,     0,   547,     0,   548,     0,     0,   549,     0,     0,
       0,   550,     0,   551,   552,   553,   554,     0,     0,     0,
       0,     0,     0,   555,   556,   557,     0,   558,   559,   560,
     561,     0,     0,   562,     0,     0,     0,   563,   564,   565,
     566,     0,   567,     0,     0,     0,     0,     0,     0,     0,
       0,   568,   569,   570,     0,     0,   571,   572,     0,   573,
       0,     0,   574,     0,   575,     0,     0,     0,     0,     0,
       0,   576,   577,     0,     0,   578,     0,   579,     0,   580,
     581,     0,     0,  2486,   582,   583,   584,   585,   586,   587,
     588,   589,     0,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,  2487,   600,   601,   602,   603,   604,   605,
       0,     0,     0,   194,   195,     0,   196,   197,   198,   199,
     200,  2488,     0,   201,     0,     0,     0,     0,   202,     0,
    2489,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,   803,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,  2411,     0,     0,     0,     0,   259,   260,
     823,     0,     0,     0,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,   827,   292,   293,
       0,   294,   295,   296,   297,   298,   828,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,   833,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,   840,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,   851,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
     854,   855,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     874,   524,   525,     0,  2412,   527,   528,  2413,     0,     0,
       0,     0,     0,   530,   531,     0,     0,   880,   532,   533,
     534,   535,   882,   536,   537,   883,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,     0,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,   201,     0,     0,     0,
     912,   202,     0,     0,   203,     0,   204,   205,   206,   207,
     208,   209,     0,   210,     0,     0,     0,   211,     0,     0,
       0,   212,     0,     0,   213,   214,   215,     0,   216,     0,
     217,   218,     0,     0,   219,     0,     0,   220,   221,     0,
     222,   223,   753,   754,   225,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,   254,     0,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   755,   261,   262,     0,
     263,     0,     0,     0,     0,     0,   264,   265,   266,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,   272,
       0,     0,     0,   273,     0,   274,   275,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,   282,   283,   284,
     285,   286,     0,     0,   287,   288,   289,   290,   291,     0,
       0,   292,   293,     0,   294,   295,   296,   297,   298,     0,
       0,   299,   300,     0,     0,     0,   301,   302,     0,   303,
       0,     0,     0,   304,     0,   305,   306,   307,   308,     0,
     756,     0,   310,     0,     0,     0,   311,   312,     0,   313,
       0,     0,   314,   315,     0,     0,     0,   316,   317,   318,
     319,     0,     0,   320,   321,   322,     0,     0,   323,     0,
       0,     0,     0,   324,   325,   326,     0,     0,     0,   327,
       0,     0,     0,   328,   329,     0,   330,   331,     0,     0,
       0,   332,     0,   333,     0,     0,   334,   335,     0,     0,
     336,     0,     0,   337,   338,     0,     0,     0,     0,     0,
     339,   340,     0,   757,     0,   342,     0,   343,   344,     0,
       0,     0,     0,     0,     0,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,   367,   368,   369,   370,     0,   371,   372,     0,     0,
       0,     0,   373,   374,   375,   376,   377,   378,     0,     0,
     379,   380,     0,   381,     0,   382,     0,   383,   384,   385,
     386,   387,   388,   758,   390,   391,     0,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,     0,
     399,   400,     0,     0,     0,   401,     0,   402,   403,     0,
     404,   405,   406,     0,     0,   407,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   408,   409,   410,     0,   411,
       0,   412,     0,   413,   414,   759,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,   426,     0,
     427,     0,   428,   429,   430,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,   456,   457,   458,     0,   459,     0,   460,
     461,     0,   462,   463,   464,     0,   465,     0,     0,   466,
     467,   468,   469,     0,   470,     0,   471,   472,   473,   474,
     475,     0,   476,   477,     0,     0,     0,   478,   479,   760,
     481,     0,     0,     0,   482,     0,     0,     0,   483,     0,
     484,   485,   486,   487,     0,   488,   489,   490,   491,   492,
       0,     0,     0,     0,     0,   493,   494,   495,     0,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,   502,   503,   504,   505,     0,     0,   506,   507,     0,
       0,   508,   509,   510,   511,   512,   513,     0,     0,   514,
     515,   516,   517,     0,   518,   519,     0,     0,   520,   521,
     522,   523,     0,     0,   524,   525,     0,   526,   527,   528,
     529,     0,     0,     0,     0,     0,   761,   531,     0,     0,
       0,   532,   533,   534,   535,     0,   536,   537,     0,   538,
     539,     0,   540,   541,     0,     0,   542,     0,     0,   543,
       0,   544,     0,   545,   546,     0,     0,     0,     0,     0,
     547,     0,   548,     0,     0,   549,     0,     0,     0,   550,
       0,   551,   552,   553,   554,     0,     0,     0,     0,     0,
       0,   555,   556,   557,     0,   558,   559,   560,   561,     0,
       0,   562,     0,     0,   762,   763,   564,   565,   566,     0,
     567,     0,     0,     0,     0,     0,     0,     0,     0,   568,
     569,   570,     0,   764,   571,   572,     0,   573,     0,     0,
     574,     0,   575,     0,     0,     0,     0,     0,     0,   576,
     577,     0,     0,   578,     0,   579,     0,   580,   581,     0,
       0,     0,   582,   583,   584,   585,   586,   587,   588,   765,
       0,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,     0,   600,   601,   602,   603,   604,   605,     0,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,   766,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   753,   754,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,  1179,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   756,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,     0,     0,
       0,     0,     0,   339,   340,     0,   757,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   758,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   760,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,     0,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,   762,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,   764,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,     0,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,   201,     0,     0,     0,   766,   202,     0,     0,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,     0,     0,   211,     0,     0,     0,   212,     0,     0,
     213,   214,   215,     0,   216,     0,   217,   218,     0,     0,
     219,     0,     0,   220,   221,     0,   222,   223,   224,     0,
     225,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,     0,   252,     0,     0,     0,     0,
     253,     0,     0,   254,     0,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,     0,   261,   262,     0,   263,     0,     0,     0,
       0,     0,   264,   265,   266,   267,   268,     0,     0,     0,
     269,     0,     0,  1429,   271,   272,     0,     0,     0,   273,
       0,   274,   275,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,   282,   283,   284,   285,   286,     0,     0,
     287,   288,   289,   290,   291,     0,     0,   292,   293,     0,
     294,   295,   296,   297,   298,     0,     0,   299,   300,     0,
       0,     0,   301,   302,     0,   303,     0,     0,     0,   304,
       0,   305,   306,   307,   308,     0,   309,     0,   310,     0,
       0,     0,   311,   312,     0,   313,     0,     0,   314,   315,
       0,     0,     0,   316,   317,   318,   319,     0,     0,   320,
     321,   322,     0,     0,   323,     0,     0,     0,     0,   324,
     325,   326,     0,     0,     0,   327,     0,     0,     0,   328,
     329,     0,   330,   331,     0,     0,     0,   332,     0,   333,
       0,     0,   334,   335,     0,     0,   336,     0,     0,   337,
     338,   958,     0,     0,     0,     0,   339,   340,     0,   341,
       0,   342,     0,   343,   344,     0,     0,     0,     0,     0,
       0,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,   367,   368,   369,
     370,     0,   371,   372,     0,     0,     0,     0,   373,   374,
     375,   376,   377,   378,     0,     0,   379,   380,     0,   381,
       0,   382,     0,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,     0,   399,   400,     0,     0,
       0,   401,     0,   402,   403,     0,   404,   405,   406,     0,
       0,   407,     0,     0,     0,     0,     0,     0,     0,  1430,
       0,   408,   409,   410,     0,   411,     0,   412,     0,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,   426,     0,   427,     0,   428,   429,
     430,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,   456,
     457,   458,     0,   459,     0,   460,   461,     0,   462,   463,
     464,     0,   465,     0,     0,   466,   467,   468,   469,     0,
     470,     0,   471,   472,   473,   474,   475,     0,   476,   477,
       0,     0,     0,   478,   479,   480,   481,     0,     0,     0,
     482,     0,     0,     0,   483,     0,   484,   485,   486,   487,
       0,   488,   489,   490,   491,   492,     0,     0,     0,     0,
       0,   493,   494,   495,     0,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,   502,   503,   504,
     505,     0,     0,   506,   507,     0,     0,   508,   509,   510,
     511,   512,   513,     0,     0,   514,   515,   516,   517,     0,
     518,   519,     0,     0,   520,   521,   522,   523,     0,   191,
     524,   525,     0,   526,   527,   528,   529,     0,     0,     0,
       0,     0,   530,   531,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,     0,   538,   539,     0,   540,   541,
       0,     0,   542,     0,     0,   543,     0,   544,     0,   545,
     546,     0,     0,     0,     0,     0,   547,     0,   548,     0,
       0,   549,     0,     0,     0,   550,     0,   551,   552,   553,
     554,     0,     0,     0,     0,     0,     0,   555,   556,   557,
       0,   558,   559,   560,   561,     0,     0,   562,     0,     0,
       0,   563,   564,   565,   566,     0,   567,     0,     0,     0,
       0,     0,     0,     0,     0,   568,   569,   570,     0,     0,
     571,   572,     0,   573,     0,     0,   574,     0,   575,     0,
       0,     0,     0,     0,     0,   576,   577,     0,     0,   578,
       0,   579,     0,   580,   581,     0,     0,     0,   582,   583,
     584,   585,   586,   587,   588,   589,     0,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,     0,   600,   601,
     602,   603,   604,   605,     0,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,  1431,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,   294,   295,   296,   297,   298,     0,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,     0,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,   958,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
       0,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,     0,   399,
     400,     0,     0,     0,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,     0,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   191,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,     0,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,     0,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,   201,     0,
       0,     0,  1171,   202,     0,     0,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,     0,     0,   211,
       0,     0,     0,   212,     0,     0,   213,   214,   215,     0,
     216,     0,   217,   218,     0,     0,   219,     0,     0,   220,
     221,     0,   222,   223,   224,     0,   225,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
       0,   252,     0,     0,     0,     0,   253,     0,     0,   254,
       0,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,     0,   261,
     262,     0,   263,     0,     0,     0,     0,     0,   264,   265,
     266,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,   272,     0,     0,     0,   273,     0,   274,   275,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,   282,
     283,   284,   285,   286,     0,     0,   287,   288,   289,   290,
     291,     0,     0,   292,   293,     0,   294,   295,   296,   297,
     298,     0,     0,   299,   300,     0,     0,     0,   301,   302,
       0,   303,     0,     0,     0,   304,     0,   305,   306,   307,
     308,     0,   309,     0,   310,     0,     0,     0,   311,   312,
       0,   313,     0,     0,   314,   315,     0,     0,     0,   316,
     317,   318,   319,     0,     0,   320,   321,   322,     0,     0,
     323,     0,     0,     0,     0,   324,   325,   326,     0,     0,
       0,   327,     0,     0,     0,   328,   329,     0,   330,   331,
       0,     0,     0,   332,     0,   333,     0,     0,   334,   335,
       0,     0,   336,     0,     0,   337,   338,   958,     0,     0,
       0,     0,   339,   340,     0,   341,     0,   342,     0,   343,
     344,     0,     0,     0,     0,     0,     0,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,   367,   368,   369,   370,     0,   371,   372,
       0,     0,     0,     0,   373,   374,   375,   376,   377,   378,
       0,     0,   379,   380,     0,   381,     0,   382,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,     0,   399,   400,     0,     0,     0,   401,     0,   402,
     403,     0,   404,   405,   406,     0,     0,   407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   408,   409,   410,
       0,   411,     0,   412,     0,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
     426,     0,   427,     0,   428,   429,   430,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
     445,     0,   446,   447,     0,   448,   449,   450,     0,     0,
     451,   452,   453,   454,   455,   456,   457,   458,     0,   459,
       0,   460,   461,     0,   462,   463,   464,     0,   465,     0,
       0,   466,   467,   468,   469,     0,   470,     0,   471,   472,
     473,   474,   475,     0,   476,   477,     0,     0,     0,   478,
     479,   480,   481,     0,     0,     0,   482,     0,     0,     0,
     483,     0,   484,   485,   486,   487,     0,   488,   489,   490,
     491,   492,     0,     0,     0,     0,     0,   493,   494,   495,
       0,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,   502,   503,   504,   505,     0,     0,   506,
     507,     0,     0,   508,   509,   510,   511,   512,   513,     0,
       0,   514,   515,   516,   517,     0,   518,   519,     0,     0,
     520,   521,   522,   523,     0,   191,   524,   525,     0,   526,
     527,   528,   529,     0,     0,     0,     0,     0,   530,   531,
       0,     0,     0,   532,   533,   534,   535,     0,   536,   537,
       0,   538,   539,     0,   540,   541,     0,     0,   542,     0,
       0,   543,     0,   544,     0,   545,   546,     0,     0,     0,
       0,     0,   547,     0,   548,     0,     0,   549,     0,     0,
       0,   550,     0,   551,   552,   553,   554,     0,     0,     0,
       0,     0,     0,   555,   556,   557,     0,   558,   559,   560,
     561,     0,     0,   562,     0,     0,     0,   563,   564,   565,
     566,     0,   567,     0,     0,     0,     0,     0,     0,     0,
       0,   568,   569,   570,     0,     0,   571,   572,     0,   573,
       0,     0,   574,     0,   575,     0,     0,     0,     0,     0,
       0,   576,   577,     0,     0,   578,     0,   579,     0,   580,
     581,     0,     0,     0,   582,   583,   584,   585,   586,   587,
     588,   589,     0,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,     0,   600,   601,   602,   603,   604,   605,
       0,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,  1369,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   294,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
     958,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   191,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,     0,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,   201,     0,     0,     0,  1431,   202,
       0,     0,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,     0,     0,   211,     0,     0,     0,   212,
       0,     0,   213,   214,   215,     0,   216,     0,   217,   218,
       0,     0,   219,     0,     0,   220,   221,     0,   222,   223,
     224,     0,   225,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,  1725,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,     0,   252,     0,     0,
       0,     0,   253,     0,     0,   254,     0,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,     0,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,   274,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,   286,
       0,     0,   287,   288,   289,   290,   291,     0,     0,   292,
     293,     0,   294,   295,   296,   297,   298,     0,     0,   299,
     300,     0,     0,     0,   301,   302,     0,   303,     0,     0,
       0,   304,     0,   305,   306,   307,   308,     0,   309,     0,
     310,     0,     0,     0,   311,   312,     0,   313,     0,     0,
     314,   315,     0,     0,     0,   316,   317,   318,   319,     0,
       0,   320,   321,   322,     0,     0,   323,     0,     0,     0,
       0,   324,   325,   326,     0,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,     0,     0,     0,   332,
       0,   333,     0,     0,   334,   335,     0,     0,   336,     0,
       0,   337,   338,     0,     0,     0,     0,     0,   339,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,     0,
       0,     0,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,   367,
     368,   369,   370,     0,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   377,   378,     0,     0,   379,   380,
       0,   381,     0,   382,     0,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,     0,   399,   400,
       0,     0,     0,   401,     0,   402,   403,     0,   404,   405,
     406,     0,     0,   407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   408,   409,   410,     0,   411,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,   447,
       0,   448,   449,   450,     0,     0,   451,   452,   453,   454,
     455,   456,   457,   458,     0,   459,     0,   460,   461,     0,
     462,   463,   464,     0,   465,     0,     0,   466,   467,   468,
     469,     0,   470,     0,   471,   472,   473,   474,   475,     0,
     476,   477,     0,     0,     0,   478,   479,   480,   481,     0,
       0,     0,   482,     0,     0,     0,   483,     0,   484,   485,
     486,   487,     0,   488,   489,   490,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,   506,   507,     0,     0,   508,
     509,   510,   511,   512,   513,     0,     0,   514,   515,   516,
     517,     0,   518,   519,     0,     0,   520,   521,   522,   523,
       0,     0,   524,   525,     0,   526,   527,   528,   529,     0,
       0,     0,     0,     0,   530,   531,     0,     0,     0,   532,
     533,   534,   535,     0,   536,   537,     0,   538,   539,     0,
     540,   541,     0,     0,   542,     0,     0,   543,     0,   544,
       0,   545,   546,     0,     0,     0,     0,     0,   547,     0,
     548,     0,     0,   549,     0,     0,     0,   550,     0,   551,
     552,   553,   554,     0,     0,     0,     0,     0,     0,   555,
     556,   557,     0,   558,   559,   560,   561,     0,     0,   562,
       0,     0,     0,   563,   564,   565,   566,     0,   567,     0,
       0,     0,     0,     0,     0,     0,     0,   568,   569,   570,
       0,     0,   571,   572,     0,   573,     0,     0,   574,     0,
     575,     0,     0,     0,     0,     0,     0,   576,   577,     0,
       0,   578,     0,   579,     0,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,     0,
     600,   601,   602,   603,   604,   605,     0,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,  1726,   202,     0,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,     0,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,   294,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,     0,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,   399,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,     0,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,     0,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
     201,  4976,     0,     0,  4977,   202,     0,     0,   203,     0,
     204,   205,   206,   207,   208,   209,     0,   210,     0,     0,
       0,   211,     0,     0,     0,   212,     0,     0,   213,   214,
     215,     0,   216,     0,   217,   218,     0,     0,   219,     0,
       0,   220,   221,     0,   222,   223,   224,     0,   225,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,     0,   252,     0,     0,     0,     0,   253,     0,
       0,   254,     0,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
       0,   261,   262,     0,   263,     0,     0,     0,     0,     0,
     264,   265,   266,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,   272,     0,     0,     0,   273,     0,   274,
     275,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,   282,   283,   284,   285,   286,     0,     0,   287,   288,
     289,   290,   291,     0,     0,   292,   293,     0,   294,   295,
     296,   297,   298,     0,     0,   299,   300,     0,     0,     0,
     301,   302,     0,   303,     0,     0,     0,   304,     0,   305,
     306,   307,   308,     0,   309,     0,   310,     0,     0,     0,
     311,   312,     0,   313,     0,     0,   314,   315,     0,     0,
       0,   316,   317,   318,   319,     0,     0,   320,   321,   322,
       0,     0,   323,     0,     0,     0,     0,   324,   325,   326,
       0,     0,     0,   327,     0,     0,     0,   328,   329,     0,
     330,   331,     0,     0,     0,   332,     0,   333,     0,     0,
     334,   335,     0,     0,   336,     0,     0,   337,   338,     0,
       0,     0,     0,     0,   339,   340,     0,   341,     0,   342,
       0,   343,   344,     0,     0,     0,     0,     0,     0,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,   367,   368,   369,   370,     0,
     371,   372,     0,     0,     0,     0,   373,   374,   375,   376,
     377,   378,     0,     0,   379,   380,     0,   381,     0,   382,
       0,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,     0,   399,   400,     0,     0,     0,   401,
       0,   402,   403,     0,   404,   405,   406,     0,     0,   407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   408,
     409,   410,     0,   411,     0,   412,     0,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,   426,     0,   427,     0,   428,   429,   430,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,   445,     0,   446,   447,     0,   448,   449,   450,
       0,     0,   451,   452,   453,   454,   455,   456,   457,   458,
       0,   459,     0,   460,   461,     0,   462,   463,   464,     0,
     465,     0,     0,   466,   467,   468,   469,     0,   470,     0,
     471,   472,   473,   474,   475,     0,   476,   477,     0,     0,
       0,   478,   479,   480,   481,     0,     0,     0,   482,     0,
       0,     0,   483,     0,   484,   485,   486,   487,     0,   488,
     489,   490,   491,   492,     0,     0,     0,     0,     0,   493,
     494,   495,     0,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,   506,   507,     0,     0,   508,   509,   510,   511,   512,
     513,     0,     0,   514,   515,   516,   517,     0,   518,   519,
       0,     0,   520,   521,   522,   523,     0,     0,   524,   525,
       0,   526,   527,   528,   529,     0,     0,     0,     0,     0,
     530,   531,     0,     0,     0,   532,   533,   534,   535,     0,
     536,   537,     0,   538,   539,     0,   540,   541,     0,     0,
     542,     0,     0,   543,     0,   544,     0,   545,   546,     0,
       0,     0,     0,     0,   547,     0,   548,     0,     0,   549,
       0,     0,     0,   550,     0,   551,   552,   553,   554,     0,
       0,     0,     0,     0,     0,   555,   556,   557,     0,   558,
     559,   560,   561,     0,     0,   562,     0,     0,     0,   563,
     564,   565,   566,     0,   567,     0,     0,     0,     0,     0,
       0,     0,     0,   568,   569,   570,     0,     0,   571,   572,
       0,   573,     0,     0,   574,     0,   575,     0,     0,     0,
       0,     0,     0,   576,   577,     0,     0,   578,     0,   579,
       0,   580,   581,     0,     0,     0,   582,   583,   584,   585,
     586,   587,   588,   589,     0,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,     0,   600,   601,   602,   603,
     604,   605,     0,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,  1726,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,     0,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
       0,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,     0,     0,     0,     0,   202,
    4977,     0,     0,     0,   204,   205,   206,   207,   208,     0,
       0,  -443,     0,     0,     0,   211,     0,     0,     0,   212,
       0,     0,   213,   214,   215,     0,   216,     0,     0,     0,
       0,     0,   219,  4645,     0,   220,   221,     0,   222,   223,
       0,     0,     0,     0,   226,   227,   228,  4646,   230,   231,
       0,   232,   233,     0,   234,   235,     0,   237,     0,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,     0,   251,     0,     0,     0,   252,     0,     0,
       0,     0,   253,     0,     0,   254,     0,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,     0,     0,     0,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,     0,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,     0,
       0,     0,   287,   288,   289,   290,   291,     0,     0,   292,
     293,  4647,   294,   295,   296,   297,   298,     0,     0,     0,
       0,     0,     0,     0,     0,   302,     0,   303,     0,     0,
       0,   304,     0,     0,   306,   307,   308,     0,   309,     0,
     310,     0,     0,     0,     0,   312,     0,     0,     0,     0,
       0,   315,     0,     0,     0,   316,   317,   318,   319,  4648,
       0,   320,     0,   322,     0,     0,   323,     0,     0,     0,
       0,   324,   325,     0,     0,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,  4649,     0,     0,   332,
       0,   333,     0,     0,     0,   335,     0,     0,   336,  4650,
       0,   337,   338,     0,     0,     0,     0,     0,   339,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,     0,
       0,  -398,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,   367,
     368,   369,   370,     0,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   377,   378,     0,     0,   379,   380,
       0,   381,     0,   382,     0,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,     0,     0,   400,
       0,     0,     0,   401,     0,   402,   403,     0,   404,   405,
    4651,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   409,   410,     0,     0,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   420,   421,
       0,     0,     0,     0,     0,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,     0,
       0,   448,     0,   450,  -398,     0,   451,   452,   453,   454,
     455,   456,   457,   458,     0,     0,     0,   460,     0,     0,
     462,   463,   464,  4652,   465,     0,     0,     0,   467,   468,
     469,     0,   470,     0,   471,   472,     0,   474,   475,     0,
     476,     0,     0,     0,     0,   478,   479,   480,     0,     0,
       0,     0,   482,     0,     0,     0,     0,     0,     0,   485,
       0,   487,     0,   488,     0,     0,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,     0,   502,
     503,   504,   505,     0,     0,     0,   507,     0,     0,   508,
     509,   510,   511,   512,   513,     0,     0,   514,   515,   516,
     517,     0,   518,   519,     0,     0,   520,   521,   522,   523,
       0,     0,   524,   525,     0,   526,   527,   528,   529,     0,
       0,     0,     0,     0,   530,   531,     0,     0,     0,     0,
     533,   534,   535,     0,   536,   537,     0,   538,   539,     0,
       0,     0,     0,     0,   542,     0,     0,   543,     0,     0,
       0,   545,   546,     0,     0,     0,     0,     0,   547,     0,
     548,     0,     0,   549,     0,     0,     0,   550,     0,   551,
     552,   553,   554,     0,     0,  -398,     0,     0,     0,   555,
     556,     0,     0,   558,     0,   560,   561,     0,     0,   562,
       0,     0,     0,     0,   564,     0,     0,     0,   567,     0,
       0,     0,     0,     0,     0,     0,     0,   568,   569,   570,
       0,     0,   571,   572,     0,     0,     0,     0,   574,     0,
     575,     0,     0,     0,     0,     0,     0,   576,   577,     0,
       0,   578,     0,   579,     0,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,     0,   594,   595,   596,   597,   598,   599,     0,
     600,     0,     0,     0,   604,   605,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,   201,     0,     0,     0,
       0,   202,  5049,     0,   203,     0,   204,   205,   206,   207,
     208,   209,     0,   210,     0,     0,     0,   211,     0,     0,
       0,   212,     0,     0,   213,   214,   215,     0,   216,     0,
     217,   218,     0,     0,   219,     0,     0,   220,   221,     0,
     222,   223,   224,     0,   225,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,   254,     0,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,     0,   261,   262,     0,
     263,     0,     0,     0,     0,     0,   264,   265,   266,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,   272,
       0,     0,     0,   273,     0,   274,   275,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,   282,   283,   284,
     285,   286,     0,     0,   287,   288,   289,   290,   291,     0,
       0,   292,   293,     0,   294,   295,   296,   297,   298,     0,
       0,   299,   300,     0,     0,     0,   301,   302,     0,   303,
       0,     0,     0,   304,     0,   305,   306,   307,   308,     0,
     309,     0,   310,     0,     0,     0,   311,   312,     0,   313,
       0,     0,   314,   315,     0,     0,     0,   316,   317,   318,
     319,     0,     0,   320,   321,   322,     0,     0,   323,     0,
       0,     0,     0,   324,   325,   326,     0,     0,     0,   327,
       0,     0,     0,   328,   329,     0,   330,   331,     0,     0,
       0,   332,     0,   333,     0,     0,   334,   335,     0,     0,
     336,     0,     0,   337,   338,     0,     0,     0,     0,     0,
     339,   340,     0,   341,     0,   342,     0,   343,   344,     0,
       0,     0,     0,     0,     0,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,   367,   368,   369,   370,     0,   371,   372,     0,     0,
       0,     0,   373,   374,   375,   376,   377,   378,     0,     0,
     379,   380,     0,   381,     0,   382,     0,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,     0,
     399,   400,     0,     0,     0,   401,     0,   402,   403,     0,
     404,   405,   406,     0,     0,   407,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   408,   409,   410,     0,   411,
       0,   412,     0,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,   426,     0,
     427,     0,   428,   429,   430,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,   456,   457,   458,     0,   459,     0,   460,
     461,     0,   462,   463,   464,     0,   465,     0,     0,   466,
     467,   468,   469,     0,   470,     0,   471,   472,   473,   474,
     475,     0,   476,   477,    42,     0,     0,   478,   479,   480,
     481,     0,     0,     0,   482,     0,     0,     0,   483,     0,
     484,   485,   486,   487,     0,   488,   489,   490,   491,   492,
       0,     0,     0,     0,     0,   493,   494,   495,     0,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,   502,   503,   504,   505,     0,     0,   506,   507,     0,
       0,   508,   509,   510,   511,   512,   513,     0,     0,   514,
     515,   516,   517,     0,   518,   519,     0,     0,   520,   521,
     522,   523,     0,     0,   524,   525,     0,   526,   527,   528,
     529,     0,     0,     0,     0,     0,   530,   531,     0,     0,
       0,   532,   533,   534,   535,     0,   536,   537,     0,   538,
     539,     0,   540,   541,     0,     0,   542,     0,     0,   543,
       0,   544,     0,   545,   546,     0,     0,     0,     0,     0,
     547,     0,   548,     0,     0,   549,     0,     0,     0,   550,
       0,   551,   552,   553,   554,     0,     0,     0,    53,     0,
       0,   555,   556,   557,     0,   558,   559,   560,   561,     0,
       0,   562,     0,     0,     0,   563,   564,   565,   566,     0,
     567,     0,     0,     0,     0,     0,     0,     0,     0,   568,
     569,   570,     0,     0,   571,   572,     0,   573,     0,     0,
     574,     0,   575,     0,     0,     0,     0,     0,     0,   576,
     577,     0,     0,   578,     0,   579,     0,   580,   581,     0,
       0,     0,   582,   583,   584,   585,   586,   587,   588,   589,
       0,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,     0,   600,   601,   602,   603,   604,   605,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,   201,   944,
    3649,     0,     0,   202,     0,     0,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,     0,     0,   211,
       0,     0,     0,   212,     0,     0,   213,   214,   215,     0,
     216,     0,   217,   218,     0,     0,   219,     0,     0,   220,
     221,     0,   222,   223,   224,     0,   225,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
       0,   252,     0,     0,     0,     0,   253,     0,     0,   254,
       0,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,     0,   261,
     262,     0,   263,     0,     0,     0,     0,     0,   264,   265,
     266,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,   272,     0,     0,     0,   273,     0,   274,   275,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,   282,
     283,   284,   285,   286,     0,     0,   287,   288,   289,   290,
     291,     0,     0,   292,   293,     0,   294,   295,   296,   297,
     298,     0,     0,   299,   300,     0,     0,     0,   301,   302,
       0,   303,     0,     0,     0,   304,     0,   305,   306,   307,
     308,     0,   309,     0,   310,     0,     0,     0,   311,   312,
       0,   313,     0,     0,   314,   315,     0,     0,     0,   316,
     317,   318,   319,     0,     0,   320,   321,   322,     0,     0,
     323,     0,     0,     0,     0,   324,   325,   326,     0,     0,
       0,   327,     0,     0,     0,   328,   329,     0,   330,   331,
       0,     0,     0,   332,     0,   333,     0,     0,   334,   335,
       0,     0,   336,     0,     0,   337,   338,     0,     0,     0,
       0,     0,   339,   340,     0,   341,     0,   342,     0,   343,
     344,     0,     0,     0,     0,     0,     0,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,   367,   368,   369,   370,     0,   371,   372,
       0,     0,     0,     0,   373,   374,   375,   376,   377,   378,
       0,     0,   379,   380,     0,   381,     0,   382,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,     0,   399,   400,     0,     0,     0,   401,     0,   402,
     403,     0,   404,   405,   406,     0,     0,   407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   408,   409,   410,
       0,   411,     0,   412,     0,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
     426,     0,   427,     0,   428,   429,   430,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
     445,     0,   446,   447,     0,   448,   449,   450,     0,     0,
     451,   452,   453,   454,   455,   456,   457,   458,     0,   459,
       0,   460,   461,     0,   462,   463,   464,     0,   465,     0,
       0,   466,   467,   468,   469,     0,   470,     0,   471,   472,
     473,   474,   475,     0,   476,   477,     0,     0,     0,   478,
     479,   480,   481,     0,     0,     0,   482,     0,     0,     0,
     483,     0,   484,   485,   486,   487,     0,   488,   489,   490,
     491,   492,     0,     0,     0,     0,     0,   493,   494,   495,
       0,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,   502,   503,   504,   505,     0,     0,   506,
     507,     0,     0,   508,   509,   510,   511,   512,   513,     0,
       0,   514,   515,   516,   517,     0,   518,   519,     0,     0,
     520,   521,   522,   523,     0,     0,   524,   525,     0,   526,
     527,   528,   529,     0,     0,     0,     0,     0,   530,   531,
       0,     0,     0,   532,   533,   534,   535,     0,   536,   537,
       0,   538,   539,     0,   540,   541,     0,     0,   542,     0,
       0,   543,     0,   544,     0,   545,   546,     0,     0,     0,
       0,     0,   547,     0,   548,     0,     0,   549,     0,     0,
       0,   550,     0,   551,   552,   553,   554,     0,     0,     0,
       0,     0,     0,   555,   556,   557,     0,   558,   559,   560,
     561,     0,     0,   562,     0,     0,     0,   563,   564,   565,
     566,     0,   567,     0,     0,     0,     0,     0,     0,     0,
       0,   568,   569,   570,     0,     0,   571,   572,     0,   573,
       0,     0,   574,     0,   575,     0,     0,     0,     0,     0,
       0,   576,   577,     0,     0,   578,     0,   579,     0,   580,
     581,     0,     0,     0,   582,   583,   584,   585,   586,   587,
     588,   589,     0,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,     0,   600,   601,   602,   603,   604,   605,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
     201,     0,  3970,     0,     0,   202,     0,     0,   203,     0,
     204,   205,   206,   207,   208,   209,     0,   210,     0,     0,
       0,   211,     0,     0,     0,   212,     0,     0,   213,   214,
     215,     0,   216,     0,   217,   218,     0,     0,   219,     0,
       0,   220,   221,     0,   222,   223,   224,     0,   225,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,     0,   252,     0,     0,     0,     0,   253,     0,
       0,   254,     0,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
       0,   261,   262,     0,   263,     0,     0,     0,     0,     0,
     264,   265,   266,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,   272,     0,     0,     0,   273,     0,   274,
     275,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,   282,   283,   284,   285,   286,     0,     0,   287,   288,
     289,   290,   291,     0,     0,   292,   293,     0,   294,   295,
     296,   297,   298,     0,     0,   299,   300,     0,     0,     0,
     301,   302,     0,   303,     0,     0,     0,   304,     0,   305,
     306,   307,   308,     0,   309,     0,   310,     0,     0,     0,
     311,   312,     0,   313,     0,     0,   314,   315,     0,     0,
       0,   316,   317,   318,   319,     0,     0,   320,   321,   322,
       0,     0,   323,     0,     0,     0,     0,   324,   325,   326,
       0,     0,     0,   327,     0,     0,     0,   328,   329,     0,
     330,   331,     0,     0,     0,   332,     0,   333,     0,     0,
     334,   335,     0,     0,   336,     0,     0,   337,   338,     0,
       0,     0,     0,     0,   339,   340,     0,   341,     0,   342,
       0,   343,   344,     0,     0,     0,     0,     0,     0,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,   367,   368,   369,   370,     0,
     371,   372,     0,     0,     0,     0,   373,   374,   375,   376,
     377,   378,     0,     0,   379,   380,     0,   381,     0,   382,
       0,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,     0,   399,   400,     0,     0,     0,   401,
       0,   402,   403,     0,   404,   405,   406,     0,     0,   407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   408,
     409,   410,     0,   411,     0,   412,     0,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,   426,     0,   427,     0,   428,   429,   430,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,   445,     0,   446,   447,     0,   448,   449,   450,
       0,     0,   451,   452,   453,   454,   455,   456,   457,   458,
       0,   459,     0,   460,   461,     0,   462,   463,   464,     0,
     465,     0,     0,   466,   467,   468,   469,     0,   470,     0,
     471,   472,   473,   474,   475,     0,   476,   477,     0,     0,
       0,   478,   479,   480,   481,     0,     0,     0,   482,     0,
       0,     0,   483,     0,   484,   485,   486,   487,     0,   488,
     489,   490,   491,   492,     0,     0,     0,     0,     0,   493,
     494,   495,     0,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,   506,   507,     0,     0,   508,   509,   510,   511,   512,
     513,     0,     0,   514,   515,   516,   517,     0,   518,   519,
       0,     0,   520,   521,   522,   523,     0,     0,   524,   525,
       0,   526,   527,   528,   529,     0,     0,     0,     0,     0,
     530,   531,     0,     0,     0,   532,   533,   534,   535,     0,
     536,   537,     0,   538,   539,     0,   540,   541,     0,     0,
     542,     0,     0,   543,     0,   544,     0,   545,   546,     0,
       0,     0,     0,     0,   547,     0,   548,     0,     0,   549,
       0,     0,     0,   550,     0,   551,   552,   553,   554,     0,
       0,     0,     0,     0,     0,   555,   556,   557,     0,   558,
     559,   560,   561,     0,     0,   562,     0,     0,     0,   563,
     564,   565,   566,     0,   567,     0,     0,     0,     0,     0,
       0,     0,     0,   568,   569,   570,     0,     0,   571,   572,
       0,   573,     0,     0,   574,     0,   575,     0,     0,     0,
       0,     0,     0,   576,   577,     0,     0,   578,     0,   579,
       0,   580,   581,     0,     0,     0,   582,   583,   584,   585,
     586,   587,   588,   589,     0,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,     0,   600,   601,   602,   603,
     604,   605,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,   201,     0,  3974,     0,     0,   202,     0,     0,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,     0,     0,   211,     0,     0,     0,   212,     0,     0,
     213,   214,   215,     0,   216,     0,   217,   218,     0,     0,
     219,     0,     0,   220,   221,     0,   222,   223,   224,     0,
     225,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,   246,  2188,   247,   248,   249,
     250,   251,     0,     0,     0,   252,     0,     0,     0,     0,
     253,     0,     0,   254,     0,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,     0,   261,   262,     0,   263,     0,     0,     0,
       0,     0,   264,   265,   266,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,   272,     0,     0,     0,   273,
       0,   274,   275,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,   282,   283,   284,   285,   286,     0,     0,
     287,   288,   289,   290,   291,     0,     0,   292,   293,     0,
     294,   295,   296,   297,   298,     0,     0,   299,   300,     0,
       0,     0,   301,   302,     0,   303,  2189,     0,     0,   304,
       0,   305,   306,   307,   308,     0,   309,     0,   310,     0,
       0,     0,   311,   312,     0,   313,     0,     0,   314,   315,
       0,     0,     0,   316,   317,   318,   319,     0,     0,   320,
     321,   322,  1587,     0,   323,     0,     0,     0,     0,   324,
     325,   326,     0,     0,     0,   327,     0,     0,     0,   328,
     329,     0,   330,   331,     0,     0,     0,   332,     0,   333,
    1588,     0,   334,   335,     0,     0,   336,     0,     0,   337,
     338,     0,  3583,     0,     0,     0,   339,   340,     0,   341,
       0,   342,     0,   343,   344,     0,     0,     0,     0,     0,
       0,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,   367,   368,   369,
     370,     0,   371,   372,     0,     0,     0,     0,   373,   374,
     375,   376,   377,   378,     0,     0,   379,   380,     0,   381,
       0,   382,     0,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,     0,   399,   400,     0,     0,
       0,   401,     0,   402,   403,     0,   404,   405,   406,     0,
       0,   407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   408,   409,   410,     0,   411,     0,   412,     0,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,   426,     0,   427,     0,   428,   429,
     430,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,   456,
     457,   458,     0,   459,     0,   460,   461,     0,   462,   463,
     464,     0,   465,     0,     0,   466,   467,   468,   469,     0,
     470,     0,   471,   472,   473,   474,   475,     0,   476,   477,
      42,     0,     0,   478,   479,   480,   481,     0,     0,     0,
     482,     0,     0,     0,   483,     0,   484,   485,   486,   487,
       0,   488,   489,   490,   491,   492,  2191,     0,     0,     0,
       0,   493,   494,   495,     0,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,   502,   503,   504,
     505,     0,     0,   506,   507,     0,     0,   508,   509,   510,
     511,   512,   513,     0,     0,   514,   515,   516,   517,     0,
     518,   519,     0,     0,   520,   521,   522,   523,     0,     0,
     524,   525,     0,   526,   527,   528,   529,     0,     0,     0,
       0,     0,   530,   531,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,     0,   538,   539,     0,   540,   541,
       0,     0,   542,     0,     0,   543,     0,   544,     0,   545,
     546,     0,     0,     0,     0,     0,   547,     0,   548,     0,
       0,   549,     0,     0,     0,   550,     0,   551,   552,   553,
     554,     0,     0,     0,    53,     0,     0,   555,   556,   557,
       0,   558,   559,   560,   561,     0,     0,   562,     0,     0,
       0,   563,   564,   565,   566,     0,   567,     0,     0,     0,
       0,     0,     0,     0,     0,   568,   569,   570,     0,     0,
     571,   572,     0,   573,     0,     0,   574,     0,   575,     0,
       0,     0,     0,     0,     0,   576,   577,     0,     0,   578,
       0,   579,     0,   580,   581,     0,     0,     0,   582,   583,
     584,   585,   586,   587,   588,   589,     0,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,     0,   600,   601,
     602,   603,   604,   605,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,   201,   944,     0,     0,     0,   202,
       0,     0,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,     0,     0,   211,     0,     0,     0,   212,
       0,     0,   213,   214,   215,     0,   216,     0,   217,   218,
       0,     0,   219,     0,     0,   220,   221,     0,   222,   223,
     224,     0,   225,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,     0,   252,     0,     0,
       0,     0,   253,     0,     0,   254,     0,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,     0,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,   274,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,   286,
       0,     0,   287,   288,   289,   290,   291,     0,     0,   292,
     293,     0,   294,   295,   296,   297,   298,     0,     0,   299,
     300,     0,     0,     0,   301,   302,     0,   303,     0,     0,
       0,   304,     0,   305,   306,   307,   308,     0,   309,     0,
     310,     0,     0,     0,   311,   312,     0,   313,     0,     0,
     314,   315,     0,     0,     0,   316,   317,   318,   319,     0,
       0,   320,   321,   322,     0,     0,   323,     0,     0,     0,
       0,   324,   325,   326,     0,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,     0,     0,     0,   332,
       0,   333,     0,     0,   334,   335,     0,     0,   336,     0,
       0,   337,   338,     0,     0,     0,     0,     0,   339,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,     0,
       0,     0,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,   367,
     368,   369,   370,     0,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   377,   378,     0,     0,   379,   380,
       0,   381,     0,   382,     0,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,     0,   399,   400,
       0,     0,     0,   401,     0,   402,   403,     0,   404,   405,
     406,     0,     0,   407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   408,   409,   410,     0,   411,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,   447,
       0,   448,   449,   450,     0,     0,   451,   452,   453,   454,
     455,   456,   457,   458,     0,   459,     0,   460,   461,     0,
     462,   463,   464,     0,   465,     0,     0,   466,   467,   468,
     469,     0,   470,     0,   471,   472,   473,   474,   475,     0,
     476,   477,     0,     0,     0,   478,   479,   480,   481,     0,
       0,     0,   482,     0,     0,     0,   483,     0,   484,   485,
     486,   487,     0,   488,   489,   490,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,   506,   507,     0,     0,   508,
     509,   510,   511,   512,   513,     0,     0,   514,   515,   516,
     517,     0,   518,   519,     0,     0,   520,   521,   522,   523,
       0,     0,   524,   525,     0,   526,   527,   528,   529,     0,
       0,     0,     0,     0,   530,   531,     0,     0,     0,   532,
     533,   534,   535,     0,   536,   537,     0,   538,   539,     0,
     540,   541,     0,     0,   542,     0,     0,   543,     0,   544,
       0,   545,   546,     0,     0,     0,     0,     0,   547,     0,
     548,     0,     0,   549,     0,     0,     0,   550,     0,   551,
     552,   553,   554,     0,     0,     0,     0,     0,     0,   555,
     556,   557,     0,   558,   559,   560,   561,     0,     0,   562,
       0,     0,     0,   563,   564,   565,   566,     0,   567,     0,
       0,     0,     0,     0,     0,     0,     0,   568,   569,   570,
       0,     0,   571,   572,     0,   573,     0,     0,   574,     0,
     575,     0,     0,     0,     0,     0,     0,   576,   577,     0,
       0,   578,     0,   579,     0,   580,   581,     0,     0,  2486,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,  2487,
     600,   601,   602,   603,   604,   605,   194,   195,     0,   196,
     197,   198,   199,   200,     0,     0,   201,  2488,     0,     0,
       0,   202,     0,     0,   203,     0,   204,   205,   206,   207,
     208,   209,     0,   210,     0,     0,     0,   211,     0,     0,
       0,   212,     0,     0,   213,   214,   215,     0,   216,     0,
     217,   218,     0,     0,   219,     0,     0,   220,   221,     0,
     222,   223,   224,     0,   225,     0,   226,   227,   228,   229,
     230,   231,     0,   232,   233,     0,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,   250,   251,     0,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,   254,     0,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,     0,   261,   262,     0,
     263,     0,     0,     0,     0,     0,   264,   265,   266,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,   272,
       0,     0,     0,   273,     0,   274,   275,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,   282,   283,   284,
     285,   286,     0,     0,   287,   288,   289,   290,   291,     0,
       0,   292,   293,     0,   294,   295,   296,   297,   298,     0,
       0,   299,   300,     0,     0,     0,   301,   302,     0,   303,
       0,     0,     0,   304,     0,   305,   306,   307,   308,     0,
     309,     0,   310,     0,     0,     0,   311,   312,     0,   313,
       0,     0,   314,   315,     0,     0,     0,   316,   317,   318,
     319,     0,     0,   320,   321,   322,     0,     0,   323,     0,
       0,     0,     0,   324,   325,   326,     0,     0,     0,   327,
       0,     0,     0,   328,   329,     0,   330,   331,     0,     0,
       0,   332,     0,   333,     0,     0,   334,   335,     0,     0,
     336,     0,     0,   337,   338,     0,     0,     0,     0,     0,
     339,   340,     0,   341,     0,   342,     0,   343,   344,     0,
       0,     0,     0,     0,     0,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,   367,   368,   369,   370,     0,   371,   372,     0,     0,
       0,     0,   373,   374,   375,   376,   377,   378,     0,     0,
     379,   380,     0,   381,     0,   382,     0,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,     0,
     399,   400,     0,     0,     0,   401,     0,   402,   403,     0,
     404,   405,   406,     0,     0,   407,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   408,   409,   410,     0,   411,
       0,   412,     0,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,     0,   423,     0,   424,   425,   426,     0,
     427,     0,   428,   429,   430,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     446,   447,     0,   448,   449,   450,     0,     0,   451,   452,
     453,   454,   455,   456,   457,   458,     0,   459,     0,   460,
     461,     0,   462,   463,   464,     0,   465,     0,     0,   466,
     467,   468,   469,     0,   470,     0,   471,   472,   473,   474,
     475,     0,   476,   477,     0,     0,     0,   478,   479,   480,
     481,     0,     0,     0,   482,     0,     0,     0,   483,     0,
     484,   485,   486,   487,     0,   488,   489,   490,   491,   492,
       0,     0,     0,     0,     0,   493,   494,   495,     0,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
     501,   502,   503,   504,   505,     0,     0,   506,   507,     0,
       0,   508,   509,   510,   511,   512,   513,     0,     0,   514,
     515,   516,   517,     0,   518,   519,     0,     0,   520,   521,
     522,   523,     0,     0,   524,   525,     0,   526,   527,   528,
     529,     0,     0,     0,     0,     0,   530,   531,     0,     0,
       0,   532,   533,   534,   535,     0,   536,   537,     0,   538,
     539,     0,   540,   541,     0,     0,   542,     0,     0,   543,
       0,   544,     0,   545,   546,     0,     0,     0,     0,     0,
     547,     0,   548,     0,     0,   549,     0,     0,     0,   550,
       0,   551,   552,   553,   554,     0,     0,     0,     0,     0,
       0,   555,   556,   557,     0,   558,   559,   560,   561,     0,
       0,   562,     0,     0,     0,   563,   564,   565,   566,     0,
     567,     0,     0,     0,     0,     0,     0,     0,     0,   568,
     569,   570,     0,     0,   571,   572,     0,   573,     0,     0,
     574,     0,   575,     0,     0,     0,     0,     0,     0,   576,
     577,     0,     0,   578,     0,   579,     0,   580,   581,     0,
       0,     0,   582,   583,   584,   585,   586,   587,   588,   589,
       0,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,     0,   600,   601,   602,   603,   604,   605,   194,   195,
       0,   196,   197,   198,   199,   200,     0,     0,   201,  1296,
       0,     0,     0,   202,     0,     0,   203,     0,   204,   205,
     206,   207,   208,   209,     0,   210,     0,     0,     0,   211,
       0,     0,     0,   212,     0,     0,   213,   214,   215,     0,
     216,     0,   217,   218,     0,     0,   219,     0,     0,   220,
     221,     0,   222,   223,   224,     0,   225,     0,   226,   227,
     228,   229,   230,   231,     0,   232,   233,     0,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,   250,   251,     0,     0,
       0,   252,     0,     0,     0,     0,   253,     0,     0,   254,
       0,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,     0,   261,
     262,     0,   263,     0,     0,     0,     0,     0,   264,   265,
     266,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,   272,     0,     0,     0,   273,     0,   274,   275,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,   282,
     283,   284,   285,   286,     0,     0,   287,   288,   289,   290,
     291,     0,     0,   292,   293,     0,   294,   295,   296,   297,
     298,     0,     0,   299,   300,     0,     0,     0,   301,   302,
       0,   303,     0,     0,     0,   304,     0,   305,   306,   307,
     308,     0,   309,     0,   310,     0,     0,     0,   311,   312,
       0,   313,     0,     0,   314,   315,     0,     0,     0,   316,
     317,   318,   319,     0,     0,   320,   321,   322,     0,     0,
     323,     0,     0,     0,     0,   324,   325,   326,     0,     0,
       0,   327,     0,     0,     0,   328,   329,     0,   330,   331,
       0,     0,     0,   332,     0,   333,     0,     0,   334,   335,
       0,     0,   336,     0,     0,   337,   338,     0,     0,     0,
       0,     0,   339,   340,     0,   341,     0,   342,     0,   343,
     344,     0,     0,     0,     0,     0,     0,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,   367,   368,   369,   370,     0,   371,   372,
       0,     0,     0,     0,   373,   374,   375,   376,   377,   378,
       0,     0,   379,   380,     0,   381,     0,   382,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,     0,   399,   400,     0,     0,     0,   401,     0,   402,
     403,     0,   404,   405,   406,     0,     0,   407,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   408,   409,   410,
       0,   411,     0,   412,     0,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,     0,   423,     0,   424,   425,
     426,     0,   427,     0,   428,   429,   430,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
     445,     0,   446,   447,     0,   448,   449,   450,     0,     0,
     451,   452,   453,   454,   455,   456,   457,   458,     0,   459,
       0,   460,   461,     0,   462,   463,   464,     0,   465,     0,
       0,   466,   467,   468,   469,     0,   470,     0,   471,   472,
     473,   474,   475,     0,   476,   477,     0,     0,     0,   478,
     479,   480,   481,     0,     0,     0,   482,     0,     0,     0,
     483,     0,   484,   485,   486,   487,     0,   488,   489,   490,
     491,   492,     0,     0,     0,     0,     0,   493,   494,   495,
       0,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,   501,   502,   503,   504,   505,     0,     0,   506,
     507,     0,     0,   508,   509,   510,   511,   512,   513,     0,
       0,   514,   515,   516,   517,     0,   518,   519,     0,     0,
     520,   521,   522,   523,     0,     0,   524,   525,     0,   526,
     527,   528,   529,     0,     0,     0,     0,     0,   530,   531,
       0,     0,     0,   532,   533,   534,   535,     0,   536,   537,
       0,   538,   539,     0,   540,   541,     0,     0,   542,     0,
       0,   543,     0,   544,     0,   545,   546,     0,     0,     0,
       0,     0,   547,     0,   548,     0,     0,   549,     0,     0,
       0,   550,     0,   551,   552,   553,   554,     0,     0,     0,
       0,     0,     0,   555,   556,   557,     0,   558,   559,   560,
     561,     0,     0,   562,     0,     0,     0,   563,   564,   565,
     566,     0,   567,     0,     0,     0,     0,     0,     0,     0,
       0,   568,   569,   570,     0,     0,   571,   572,     0,   573,
       0,     0,   574,     0,   575,     0,     0,     0,     0,     0,
       0,   576,   577,     0,     0,   578,     0,   579,     0,   580,
     581,     0,     0,     0,   582,   583,   584,   585,   586,   587,
     588,   589,     0,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,     0,   600,   601,   602,   603,   604,   605,
     194,   195,     0,   196,   197,   198,   199,   200,     0,     0,
     201,  2860,     0,     0,     0,   202,     0,     0,   203,     0,
     204,   205,   206,   207,   208,   209,     0,   210,     0,     0,
       0,   211,     0,     0,     0,   212,     0,     0,   213,   214,
     215,     0,   216,     0,   217,   218,     0,     0,   219,     0,
       0,   220,   221,     0,   222,   223,   224,     0,   225,     0,
     226,   227,   228,   229,   230,   231,     0,   232,   233,     0,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,   250,   251,
       0,     0,     0,   252,     0,     0,     0,     0,   253,     0,
       0,   254,     0,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
       0,   261,   262,     0,   263,     0,     0,     0,     0,     0,
     264,   265,   266,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,   272,     0,     0,     0,   273,     0,   274,
     275,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,   282,   283,   284,   285,   286,     0,     0,   287,   288,
     289,   290,   291,     0,     0,   292,   293,     0,   294,   295,
     296,   297,   298,     0,     0,   299,   300,     0,     0,     0,
     301,   302,     0,   303,     0,     0,     0,   304,     0,   305,
     306,   307,   308,     0,   309,     0,   310,     0,     0,     0,
     311,   312,     0,   313,     0,     0,   314,   315,     0,     0,
       0,   316,   317,   318,   319,     0,     0,   320,   321,   322,
       0,     0,   323,     0,     0,     0,     0,   324,   325,   326,
       0,     0,     0,   327,     0,     0,     0,   328,   329,     0,
     330,   331,     0,     0,     0,   332,     0,   333,     0,     0,
     334,   335,     0,     0,   336,     0,     0,   337,   338,     0,
       0,     0,     0,     0,   339,   340,     0,   341,     0,   342,
       0,   343,   344,     0,     0,     0,     0,     0,     0,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,   367,   368,   369,   370,     0,
     371,   372,     0,     0,     0,     0,   373,   374,   375,   376,
     377,   378,     0,     0,   379,   380,     0,   381,     0,   382,
       0,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,     0,   399,   400,     0,     0,     0,   401,
       0,   402,   403,     0,   404,   405,   406,     0,     0,   407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   408,
     409,   410,     0,   411,     0,   412,     0,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,     0,   423,     0,
     424,   425,   426,     0,   427,     0,   428,   429,   430,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,   445,     0,   446,   447,     0,   448,   449,   450,
       0,     0,   451,   452,   453,   454,   455,   456,   457,   458,
       0,   459,     0,   460,   461,     0,   462,   463,   464,     0,
     465,     0,     0,   466,   467,   468,   469,     0,   470,     0,
     471,   472,   473,   474,   475,     0,   476,   477,     0,     0,
       0,   478,   479,   480,   481,     0,     0,     0,   482,     0,
       0,     0,   483,     0,   484,   485,   486,   487,     0,   488,
     489,   490,   491,   492,     0,     0,     0,     0,     0,   493,
     494,   495,     0,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,   501,   502,   503,   504,   505,     0,
       0,   506,   507,     0,     0,   508,   509,   510,   511,   512,
     513,     0,     0,   514,   515,   516,   517,     0,   518,   519,
       0,     0,   520,   521,   522,   523,     0,     0,   524,   525,
       0,   526,   527,   528,   529,     0,     0,     0,     0,     0,
     530,   531,     0,     0,     0,   532,   533,   534,   535,     0,
     536,   537,     0,   538,   539,     0,   540,   541,     0,     0,
     542,     0,     0,   543,     0,   544,     0,   545,   546,     0,
       0,     0,     0,     0,   547,     0,   548,     0,     0,   549,
       0,     0,     0,   550,     0,   551,   552,   553,   554,     0,
       0,     0,     0,     0,     0,   555,   556,   557,     0,   558,
     559,   560,   561,     0,     0,   562,     0,     0,     0,   563,
     564,   565,   566,     0,   567,     0,     0,     0,     0,     0,
       0,     0,     0,   568,   569,   570,     0,     0,   571,   572,
       0,   573,     0,     0,   574,     0,   575,     0,     0,     0,
       0,     0,     0,   576,   577,     0,     0,   578,     0,   579,
       0,   580,   581,     0,     0,     0,   582,   583,   584,   585,
     586,   587,   588,   589,     0,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,     0,   600,   601,   602,   603,
     604,   605,   194,   195,     0,   196,   197,   198,   199,   200,
       0,     0,   201,  3292,     0,     0,     0,   202,     0,     0,
     203,     0,   204,   205,   206,   207,   208,   209,     0,   210,
       0,     0,     0,   211,     0,     0,     0,   212,     0,     0,
     213,   214,   215,     0,   216,     0,   217,   218,     0,     0,
     219,     0,     0,   220,   221,     0,   222,   223,   224,     0,
     225,     0,   226,   227,   228,   229,   230,   231,     0,   232,
     233,     0,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
     250,   251,     0,     0,     0,   252,     0,     0,     0,     0,
     253,     0,     0,   254,     0,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,     0,   261,   262,     0,   263,     0,     0,     0,
       0,     0,   264,   265,   266,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,   272,     0,     0,     0,   273,
       0,   274,   275,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,   282,   283,   284,   285,   286,     0,     0,
     287,   288,   289,   290,   291,     0,     0,   292,   293,     0,
     294,   295,   296,   297,   298,     0,     0,   299,   300,     0,
       0,     0,   301,   302,     0,   303,     0,     0,     0,   304,
       0,   305,   306,   307,   308,     0,   309,     0,   310,     0,
       0,     0,   311,   312,     0,   313,     0,     0,   314,   315,
       0,     0,     0,   316,   317,   318,   319,     0,     0,   320,
     321,   322,     0,     0,   323,     0,     0,     0,     0,   324,
     325,   326,     0,     0,     0,   327,     0,     0,     0,   328,
     329,     0,   330,   331,     0,     0,     0,   332,     0,   333,
       0,     0,   334,   335,     0,     0,   336,     0,     0,   337,
     338,     0,     0,     0,     0,     0,   339,   340,     0,   341,
       0,   342,     0,   343,   344,     0,     0,     0,     0,     0,
       0,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,   367,   368,   369,
     370,     0,   371,   372,     0,     0,     0,     0,   373,   374,
     375,   376,   377,   378,     0,     0,   379,   380,     0,   381,
       0,   382,     0,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,     0,   399,   400,     0,     0,
       0,   401,     0,   402,   403,     0,   404,   405,   406,     0,
       0,   407,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   408,   409,   410,     0,   411,     0,   412,     0,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,     0,
     423,     0,   424,   425,   426,     0,   427,     0,   428,   429,
     430,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   446,   447,     0,   448,
     449,   450,     0,     0,   451,   452,   453,   454,   455,   456,
     457,   458,     0,   459,     0,   460,   461,     0,   462,   463,
     464,     0,   465,     0,     0,   466,   467,   468,   469,     0,
     470,     0,   471,   472,   473,   474,   475,     0,   476,   477,
       0,     0,     0,   478,   479,   480,   481,     0,     0,     0,
     482,     0,     0,     0,   483,     0,   484,   485,   486,   487,
       0,   488,   489,   490,   491,   492,     0,     0,     0,     0,
       0,   493,   494,   495,     0,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,   501,   502,   503,   504,
     505,     0,     0,   506,   507,     0,     0,   508,   509,   510,
     511,   512,   513,     0,     0,   514,   515,   516,   517,     0,
     518,   519,     0,     0,   520,   521,   522,   523,     0,     0,
     524,   525,     0,   526,   527,   528,   529,     0,     0,     0,
       0,     0,   530,   531,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,     0,   538,   539,     0,   540,   541,
       0,     0,   542,     0,     0,   543,     0,   544,     0,   545,
     546,     0,     0,     0,     0,     0,   547,     0,   548,     0,
       0,   549,     0,     0,     0,   550,     0,   551,   552,   553,
     554,     0,     0,     0,     0,     0,     0,   555,   556,   557,
       0,   558,   559,   560,   561,     0,     0,   562,     0,     0,
       0,   563,   564,   565,   566,     0,   567,     0,     0,     0,
       0,     0,     0,     0,     0,   568,   569,   570,     0,     0,
     571,   572,     0,   573,     0,     0,   574,     0,   575,     0,
       0,     0,     0,     0,     0,   576,   577,     0,     0,   578,
       0,   579,     0,   580,   581,     0,     0,     0,   582,   583,
     584,   585,   586,   587,   588,   589,     0,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,     0,   600,   601,
     602,   603,   604,   605,   194,   195,     0,   196,   197,   198,
     199,   200,     0,     0,   201,  3856,     0,     0,     0,   202,
       0,     0,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,     0,     0,   211,     0,     0,     0,   212,
       0,     0,   213,   214,   215,     0,   216,     0,   217,   218,
       0,     0,   219,     0,     0,   220,   221,     0,   222,   223,
     224,     0,   225,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,     0,   252,     0,     0,
       0,     0,   253,     0,     0,   254,     0,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,     0,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,   274,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,   286,
       0,     0,   287,   288,   289,   290,   291,     0,     0,   292,
     293,     0,   294,   295,   296,   297,   298,     0,     0,   299,
     300,     0,     0,     0,   301,   302,     0,   303,     0,     0,
       0,   304,     0,   305,   306,   307,   308,     0,   309,     0,
     310,     0,     0,     0,   311,   312,     0,   313,     0,     0,
     314,   315,     0,     0,     0,   316,   317,   318,   319,     0,
       0,   320,   321,   322,     0,     0,   323,     0,     0,     0,
       0,   324,   325,   326,     0,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,     0,     0,     0,   332,
       0,   333,     0,     0,   334,   335,     0,     0,   336,     0,
       0,   337,   338,     0,     0,     0,     0,     0,   339,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,     0,
       0,     0,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,   367,
     368,   369,   370,     0,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   377,   378,     0,     0,   379,   380,
       0,   381,     0,   382,     0,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,     0,   399,   400,
       0,     0,     0,   401,     0,   402,   403,     0,   404,   405,
     406,     0,     0,   407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   408,   409,   410,     0,   411,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,   447,
       0,   448,   449,   450,     0,     0,   451,   452,   453,   454,
     455,   456,   457,   458,     0,   459,     0,   460,   461,     0,
     462,   463,   464,     0,   465,     0,     0,   466,   467,   468,
     469,     0,   470,     0,   471,   472,   473,   474,   475,     0,
     476,   477,     0,     0,     0,   478,   479,   480,   481,     0,
       0,     0,   482,     0,     0,     0,   483,     0,   484,   485,
     486,   487,     0,   488,   489,   490,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,   506,   507,     0,     0,   508,
     509,   510,   511,   512,   513,     0,     0,   514,   515,   516,
     517,     0,   518,   519,     0,     0,   520,   521,   522,   523,
       0,     0,   524,   525,     0,   526,   527,   528,   529,     0,
       0,     0,     0,     0,   530,   531,     0,     0,     0,   532,
     533,   534,   535,     0,   536,   537,     0,   538,   539,     0,
     540,   541,     0,     0,   542,     0,     0,   543,     0,   544,
       0,   545,   546,     0,     0,     0,     0,     0,   547,     0,
     548,     0,     0,   549,     0,     0,     0,   550,     0,   551,
     552,   553,   554,     0,     0,     0,     0,     0,     0,   555,
     556,   557,     0,   558,   559,   560,   561,     0,     0,   562,
       0,     0,     0,   563,   564,   565,   566,     0,   567,     0,
       0,     0,     0,     0,     0,     0,     0,   568,   569,   570,
       0,     0,   571,   572,     0,   573,     0,     0,   574,     0,
     575,     0,     0,     0,     0,     0,     0,   576,   577,     0,
       0,   578,     0,   579,     0,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,     0,
     600,   601,   602,   603,   604,   605,     0,     0,     0,   194,
     195,  2381,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,     0,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,     0,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,     0,     0,     0,   194,   195,  2426,   196,   197,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
       0,     0,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,     0,     0,   211,     0,     0,     0,   212,
       0,     0,   213,   214,   215,     0,   216,     0,   217,   218,
       0,     0,   219,     0,     0,   220,   221,     0,   222,   223,
     224,     0,   225,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,     0,   252,     0,     0,
       0,     0,   253,     0,     0,   254,     0,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,     0,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,   274,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,   286,
       0,     0,   287,   288,   289,   290,   291,     0,     0,   292,
     293,     0,   294,   295,   296,   297,   298,     0,     0,   299,
     300,     0,     0,     0,   301,   302,     0,   303,     0,     0,
       0,   304,     0,   305,   306,   307,   308,     0,   309,     0,
     310,     0,     0,     0,   311,   312,     0,   313,     0,     0,
     314,   315,     0,     0,     0,   316,   317,   318,   319,     0,
       0,   320,   321,   322,     0,     0,   323,     0,     0,     0,
       0,   324,   325,   326,     0,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,     0,     0,     0,   332,
       0,   333,     0,     0,   334,   335,     0,     0,   336,     0,
       0,   337,   338,     0,     0,     0,     0,     0,   339,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,     0,
       0,     0,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,   367,
     368,   369,   370,     0,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   377,   378,     0,     0,   379,   380,
       0,   381,     0,   382,     0,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,     0,   399,   400,
       0,     0,     0,   401,     0,   402,   403,     0,   404,   405,
     406,     0,     0,   407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   408,   409,   410,     0,   411,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,   447,
       0,   448,   449,   450,     0,     0,   451,   452,   453,   454,
     455,   456,   457,   458,     0,   459,     0,   460,   461,     0,
     462,   463,   464,     0,   465,     0,     0,   466,   467,   468,
     469,     0,   470,     0,   471,   472,   473,   474,   475,     0,
     476,   477,     0,     0,     0,   478,   479,   480,   481,     0,
       0,     0,   482,     0,     0,     0,   483,     0,   484,   485,
     486,   487,     0,   488,   489,   490,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,   506,   507,     0,     0,   508,
     509,   510,   511,   512,   513,     0,     0,   514,   515,   516,
     517,     0,   518,   519,     0,     0,   520,   521,   522,   523,
       0,     0,   524,   525,     0,   526,   527,   528,   529,     0,
       0,     0,     0,     0,   530,   531,     0,     0,     0,   532,
     533,   534,   535,     0,   536,   537,     0,   538,   539,     0,
     540,   541,     0,     0,   542,     0,     0,   543,     0,   544,
       0,   545,   546,     0,     0,     0,     0,     0,   547,     0,
     548,     0,     0,   549,     0,     0,     0,   550,     0,   551,
     552,   553,   554,     0,     0,     0,     0,     0,     0,   555,
     556,   557,     0,   558,   559,   560,   561,     0,     0,   562,
       0,     0,     0,   563,   564,   565,   566,     0,   567,     0,
       0,     0,     0,     0,     0,     0,     0,   568,   569,   570,
       0,     0,   571,   572,     0,   573,     0,     0,   574,     0,
     575,     0,     0,     0,     0,     0,     0,   576,   577,     0,
       0,   578,     0,   579,     0,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,     0,
     600,   601,   602,   603,   604,   605,     0,     0,     0,   194,
     195,  3363,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,     0,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,     0,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,     0,     0,     0,   194,   195,  3609,   196,   197,   198,
     199,   200,     0,     0,   201,     0,     0,     0,     0,   202,
       0,     0,   203,     0,   204,   205,   206,   207,   208,   209,
       0,   210,     0,     0,     0,   211,     0,     0,     0,   212,
       0,     0,   213,   214,   215,     0,   216,     0,   217,   218,
       0,     0,   219,     0,     0,   220,   221,     0,   222,   223,
     224,     0,   225,     0,   226,   227,   228,   229,   230,   231,
       0,   232,   233,     0,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,   250,   251,     0,     0,     0,   252,     0,     0,
       0,     0,   253,     0,     0,   254,     0,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,     0,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,   272,     0,     0,
       0,   273,     0,   274,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,   286,
       0,     0,   287,   288,   289,   290,   291,     0,     0,   292,
     293,     0,   294,   295,   296,   297,   298,     0,     0,   299,
     300,     0,     0,     0,   301,   302,     0,   303,     0,     0,
       0,   304,     0,   305,   306,   307,   308,     0,   309,     0,
     310,     0,     0,     0,   311,   312,     0,   313,     0,     0,
     314,   315,     0,     0,     0,   316,   317,   318,   319,     0,
       0,   320,   321,   322,     0,     0,   323,     0,     0,     0,
       0,   324,   325,   326,     0,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,     0,     0,     0,   332,
       0,   333,     0,     0,   334,   335,     0,     0,   336,     0,
       0,   337,   338,     0,     0,     0,     0,     0,   339,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,     0,
       0,     0,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,   367,
     368,   369,   370,     0,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   377,   378,     0,     0,   379,   380,
       0,   381,     0,   382,     0,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,     0,   399,   400,
       0,     0,     0,   401,     0,   402,   403,     0,   404,   405,
     406,     0,     0,   407,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   408,   409,   410,     0,   411,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,     0,   423,     0,   424,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,   447,
       0,   448,   449,   450,     0,     0,   451,   452,   453,   454,
     455,   456,   457,   458,     0,   459,     0,   460,   461,     0,
     462,   463,   464,     0,   465,     0,     0,   466,   467,   468,
     469,     0,   470,     0,   471,   472,   473,   474,   475,     0,
     476,   477,     0,     0,     0,   478,   479,   480,   481,     0,
       0,     0,   482,     0,     0,     0,   483,     0,   484,   485,
     486,   487,     0,   488,   489,   490,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,   501,   502,
     503,   504,   505,     0,     0,   506,   507,     0,     0,   508,
     509,   510,   511,   512,   513,     0,     0,   514,   515,   516,
     517,     0,   518,   519,     0,     0,   520,   521,   522,   523,
       0,     0,   524,   525,     0,   526,   527,   528,   529,     0,
       0,     0,     0,     0,   530,   531,     0,     0,     0,   532,
     533,   534,   535,     0,   536,   537,     0,   538,   539,     0,
     540,   541,     0,     0,   542,     0,     0,   543,     0,   544,
       0,   545,   546,     0,     0,     0,     0,     0,   547,     0,
     548,     0,     0,   549,     0,     0,     0,   550,     0,   551,
     552,   553,   554,     0,     0,     0,     0,     0,     0,   555,
     556,   557,     0,   558,   559,   560,   561,     0,     0,   562,
       0,     0,     0,   563,   564,   565,   566,     0,   567,     0,
       0,     0,     0,     0,     0,     0,     0,   568,   569,   570,
       0,     0,   571,   572,     0,   573,     0,     0,   574,     0,
     575,     0,     0,     0,     0,     0,     0,   576,   577,     0,
       0,   578,     0,   579,     0,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,     0,
     600,   601,   602,   603,   604,   605,     0,     0,     0,   194,
     195,  3623,   196,   197,   198,   199,   200,   664,   665,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,   666,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
     261,   262,     0,   263,   667,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,   668,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   669,   284,   285,   670,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   671,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,   672,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,   673,
       0,   323,     0,     0,     0,   674,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,   675,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,   676,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,     0,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   677,   429,   430,   431,   678,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,   679,     0,   441,   442,   443,
     444,   445,     0,   680,   447,     0,   448,   449,   450,     0,
       0,   681,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,   682,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
     683,   684,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   685,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   191,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,   686,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,   687,   544,   688,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,     0,     0,   590,   591,   592,     0,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,   735,
     665,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,   666,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,   667,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
     668,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   669,   284,   285,   670,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   671,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,   672,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,   673,     0,   323,     0,     0,     0,   674,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
     675,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,   676,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,     0,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   677,   429,   430,
     431,   736,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,   679,     0,   441,
     442,   443,   444,   445,     0,   680,   447,     0,   448,   449,
     450,     0,     0,   681,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,   682,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,   683,   684,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   685,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   191,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,   686,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,   687,   544,   688,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,     0,     0,   590,   591,   592,     0,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   194,   195,     0,   196,   197,   198,   199,
     200,     0,   665,   201,     0,     0,     0,     0,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,   666,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,     0,   261,   262,     0,   263,   667,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,   668,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   669,   284,   285,   670,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   671,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,   672,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,   673,     0,   323,     0,     0,     0,   674,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,   675,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,   676,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,     0,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   677,
     429,   430,   431,     0,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,   679,
       0,   441,   442,   443,   444,   445,     0,   680,   447,     0,
     448,   449,   450,     0,     0,   681,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,   682,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,   683,   684,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   685,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     191,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,   686,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,   687,   544,   688,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,     0,     0,   590,   591,
     592,     0,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,  2755,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,   294,   295,   296,   297,   298,  2756,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,  2757,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,     0,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
    2758,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,  1617,  1618,     0,   399,
     400,     0,     0,  2759,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,     0,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,  5037,   730,  5038,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,     0,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,  2760,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,   201,     0,     0,
    1659,  1660,   202,  1661,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,     0,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,   294,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,     0,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,   399,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,  1662,
       0,     0,  1663,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   191,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
    1664,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,  1149,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,  1150,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,  1151,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,   958,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,  1152,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   191,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,  2188,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   294,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,  2189,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,  1587,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,  1588,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
       0,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,  2191,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,     0,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,  1173,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,  1174,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,   958,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
     191,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,   294,   295,   296,   297,   298,     0,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,     0,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,     0,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
    1442,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,     0,   399,
     400,     0,     0,  1443,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,   856,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,     0,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,  1444,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,  1149,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,  3473,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,   294,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,   958,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,   399,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   191,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,   957,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,   958,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   191,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   959,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
     957,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   294,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
     958,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   191,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,  1243,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,     0,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,  1244,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
    1245,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   194,   195,     0,   196,   197,
     198,   199,   200,  1866,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,   294,   295,   296,   297,   298,     0,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,     0,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,   958,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
       0,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,     0,   399,
     400,     0,     0,     0,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,     0,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   191,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,     0,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,     0,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,   294,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,   958,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,   399,   400,     0,  2934,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   191,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,  1149,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,   958,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   191,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   294,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
     958,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   191,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,  4947,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,     0,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
    4948,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
       0,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,   294,   295,   296,   297,   298,     0,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,     0,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,     0,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
       0,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,     0,   399,
     400,     0,     0,     0,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,     0,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,   730,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,     0,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,     0,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,     0,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,   294,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,     0,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,   399,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,     0,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,   787,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,  1179,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,     0,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,     0,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,  1180,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   294,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,  2158,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
       0,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,     0,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,  2277,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
       0,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,   294,   295,   296,   297,   298,     0,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,     0,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,     0,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
       0,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,     0,   399,
     400,     0,     0,     0,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,     0,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   191,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,     0,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,  1179,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,   294,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,     0,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,   399,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,     0,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,  2862,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,     0,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,     0,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,  2872,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   294,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
       0,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,     0,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,  2899,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
       0,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   194,   195,     0,   196,   197,
     198,   199,   200,     0,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
     286,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,   294,   295,   296,   297,   298,     0,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,     0,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,     0,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
       0,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,     0,   399,
     400,     0,     0,     0,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,     0,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,  2962,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
     447,     0,   448,   449,   450,     0,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,   483,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,     0,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,     0,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,   194,   195,     0,
     196,   197,   198,   199,   200,     0,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,     0,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,   286,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,   294,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,     0,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,   399,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,   447,     0,   448,   449,   450,     0,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,   483,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,     0,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,   194,
     195,     0,   196,   197,   198,   199,   200,     0,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,   286,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,   294,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   984,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,     0,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,   447,     0,   448,   449,   450,     0,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,   483,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,     0,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,   286,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,   294,
     295,   296,  1748,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
       0,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,  1749,
     397,   398,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,   447,     0,   448,   449,
     450,     0,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,   483,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,     0,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   194,   195,     0,   196,   197,   198,   199,
     200,     0,     0,   201,     0,     0,     0,     0,   202,     0,
       0,   203,     0,   204,   205,   206,   207,   208,   209,     0,
     210,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,   217,   218,     0,
       0,   219,     0,     0,   220,   221,     0,   222,   223,   224,
       0,   225,     0,   226,   227,   228,   229,   230,   231,     0,
     232,   233,     0,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,   250,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,     0,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,   272,     0,     0,     0,
     273,     0,   274,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,   286,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
       0,   294,   295,   296,   297,   298,     0,     0,   299,   300,
       0,     0,     0,   301,   302,     0,   303,     0,     0,     0,
     304,     0,   305,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,   311,   312,     0,   313,     0,     0,   314,
     315,     0,     0,     0,   316,   317,   318,   319,     0,     0,
     320,   321,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,   326,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,     0,     0,     0,   332,     0,
     333,     0,     0,   334,   335,     0,     0,   336,     0,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
       0,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,   399,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,   406,
       0,     0,   407,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   408,   409,   410,     0,   411,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
       0,   423,     0,   424,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,   447,     0,
     448,   449,   450,     0,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,   459,     0,   460,   461,     0,   462,
     463,   464,     0,   465,     0,     0,   466,   467,   468,   469,
       0,   470,     0,   471,   472,   473,   474,   475,     0,   476,
     477,     0,     0,     0,   478,   479,   480,   481,     0,     0,
       0,   482,     0,     0,     0,   483,     0,   484,   485,   486,
     487,     0,   488,   489,   490,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,   501,   502,   503,
     504,   505,     0,     0,   506,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
       0,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,   540,
     541,     0,     0,   542,     0,     0,   543,     0,   544,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,     0,     0,     0,     0,     0,     0,   555,   556,
     557,     0,   558,   559,   560,   561,     0,     0,   562,     0,
       0,     0,   563,   564,   565,   566,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,   573,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,  4690,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,     0,   600,
     601,   602,   603,   604,   605,   194,   195,     0,   196,   197,
     198,   199,   200,  1164,     0,   201,     0,     0,     0,     0,
     202,     0,     0,   203,     0,   204,   205,   206,   207,   208,
     209,     0,   210,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,   217,
     218,     0,     0,   219,     0,     0,   220,   221,     0,   222,
     223,   224,     0,   225,     0,   226,   227,   228,   229,   230,
     231,     0,   232,   233,     0,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,   250,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,  1165,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,   274,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,     0,   284,   285,
       0,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,     0,     0,   295,   296,   297,   298,     0,     0,
     299,   300,     0,     0,     0,   301,   302,     0,   303,     0,
       0,     0,   304,     0,   305,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,   311,   312,     0,   313,     0,
       0,   314,   315,     0,     0,     0,   316,   317,   318,   319,
       0,     0,   320,   321,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,   326,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,     0,     0,     0,
     332,     0,   333,     0,     0,   334,   335,     0,     0,   336,
       0,     0,   337,   338,   675,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
       0,     0,     0,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,  1166,     0,     0,     0,   399,
     400,     0,     0,     0,   401,     0,   402,   403,     0,   404,
     405,   406,     0,     0,   407,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   408,   409,   410,     0,   411,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,     0,   423,     0,   424,   425,   426,     0,   427,
       0,     0,   429,   430,   431,     0,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,     0,
     447,     0,   448,   449,   450,     0,     0,     0,   452,   453,
     454,   455,   456,   457,   458,     0,   459,     0,   460,   461,
       0,   462,   463,   464,     0,   465,     0,     0,   466,   467,
     468,   469,     0,   470,     0,   471,   472,   473,   474,   475,
       0,   476,   477,     0,     0,     0,   478,   479,   480,   481,
       0,     0,     0,   482,     0,     0,     0,     0,     0,   484,
     485,   486,   487,     0,   488,   489,   490,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,   501,
     502,   503,   504,   505,     0,     0,   506,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,     0,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,   191,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
     532,   533,   534,   535,     0,   536,   537,     0,   538,   539,
       0,   540,   541,     0,     0,   542,     0,     0,   543,     0,
     544,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,     0,     0,     0,     0,
     555,   556,   557,     0,   558,   559,   560,   561,     0,     0,
     562,     0,     0,     0,   563,   564,   565,   566,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,   573,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,     0,     0,
     590,   591,   592,     0,   594,   595,   596,   597,   598,   599,
       0,   600,   601,   602,   603,   604,   605,   194,   195,     0,
     196,   197,   198,   199,   200,  1807,     0,   201,     0,     0,
       0,     0,   202,     0,     0,   203,     0,   204,   205,   206,
     207,   208,   209,     0,   210,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,   217,   218,     0,     0,   219,     0,     0,   220,   221,
       0,   222,   223,   224,     0,   225,     0,   226,   227,   228,
     229,   230,   231,     0,   232,   233,     0,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,   250,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,     0,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,   274,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,     0,
     284,   285,     0,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,     0,     0,   295,   296,   297,   298,
       0,     0,   299,   300,     0,     0,     0,   301,   302,     0,
     303,     0,     0,     0,   304,     0,   305,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,   311,   312,     0,
     313,     0,     0,   314,   315,     0,     0,     0,   316,   317,
     318,   319,     0,     0,   320,   321,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,   326,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,     0,
       0,     0,   332,     0,   333,     0,     0,   334,   335,     0,
       0,   336,     0,     0,   337,   338,   675,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,     0,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,  1808,     0,     0,
       0,   399,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,   406,     0,     0,   407,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   408,   409,   410,     0,
     411,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,     0,   423,     0,   424,   425,   426,
       0,   427,     0,     0,   429,   430,   431,     0,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,     0,   447,     0,   448,   449,   450,     0,     0,     0,
     452,   453,   454,   455,   456,   457,   458,     0,   459,     0,
     460,   461,     0,   462,   463,   464,     0,   465,     0,     0,
     466,   467,   468,   469,     0,   470,     0,   471,   472,   473,
     474,   475,     0,   476,   477,     0,     0,     0,   478,   479,
     480,   481,     0,     0,     0,   482,     0,     0,     0,     0,
       0,   484,   485,   486,   487,     0,   488,   489,   490,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,   501,   502,   503,   504,   505,     0,     0,   506,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
       0,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,   191,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,   532,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,   540,   541,     0,     0,   542,     0,     0,
     543,     0,   544,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,     0,     0,
       0,     0,   555,   556,   557,     0,   558,   559,   560,   561,
       0,     0,   562,     0,     0,     0,   563,   564,   565,   566,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,   573,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
       0,     0,   590,   591,   592,     0,   594,   595,   596,   597,
     598,   599,     0,   600,   601,   602,   603,   604,   605,   194,
     195,     0,   196,   197,   198,   199,   200,  2723,     0,   201,
       0,     0,     0,     0,   202,     0,     0,   203,     0,   204,
     205,   206,   207,   208,   209,     0,   210,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,   217,   218,     0,     0,   219,     0,     0,
     220,   221,     0,   222,   223,   224,     0,   225,     0,   226,
     227,   228,   229,   230,   231,     0,   232,   233,     0,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,   250,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,     0,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,   274,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,     0,   284,   285,     0,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,     0,     0,   295,   296,
     297,   298,     0,     0,   299,   300,     0,     0,     0,   301,
     302,     0,   303,     0,     0,     0,   304,     0,   305,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,   311,
     312,     0,   313,     0,     0,   314,   315,     0,     0,     0,
     316,   317,   318,   319,     0,     0,   320,   321,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,   326,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,     0,     0,     0,   332,     0,   333,     0,     0,   334,
     335,     0,     0,   336,     0,     0,   337,   338,   675,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,     0,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,  2724,
       0,     0,     0,   399,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,   406,     0,     0,   407,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   408,   409,
     410,     0,   411,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,     0,   423,     0,   424,
     425,   426,     0,   427,     0,     0,   429,   430,   431,     0,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,     0,   447,     0,   448,   449,   450,     0,
       0,     0,   452,   453,   454,   455,   456,   457,   458,     0,
     459,     0,   460,   461,     0,   462,   463,   464,     0,   465,
       0,     0,   466,   467,   468,   469,     0,   470,     0,   471,
     472,   473,   474,   475,     0,   476,   477,     0,     0,     0,
     478,   479,   480,   481,     0,     0,     0,   482,     0,     0,
       0,     0,     0,   484,   485,   486,   487,     0,   488,   489,
     490,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,   501,   502,   503,   504,   505,     0,     0,
     506,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,     0,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,   191,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,   532,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,   540,   541,     0,     0,   542,
       0,     0,   543,     0,   544,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
       0,     0,     0,     0,   555,   556,   557,     0,   558,   559,
     560,   561,     0,     0,   562,     0,     0,     0,   563,   564,
     565,   566,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
     573,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,     0,     0,   590,   591,   592,     0,   594,   595,
     596,   597,   598,   599,     0,   600,   601,   602,   603,   604,
     605,   194,   195,     0,   196,   197,   198,   199,   200,     0,
       0,   201,     0,     0,     0,     0,   202,     0,     0,   203,
       0,   204,   205,   206,   207,   208,   209,     0,   210,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,   217,   218,     0,     0,   219,
       0,     0,   220,   221,     0,   222,   223,   224,     0,   225,
       0,   226,   227,   228,   229,   230,   231,     0,   232,   233,
       0,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,   250,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
     274,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,     0,   284,   285,     0,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,     0,     0,
     295,   296,   297,   298,     0,     0,   299,   300,     0,     0,
       0,   301,   302,     0,   303,     0,     0,     0,   304,     0,
     305,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,   311,   312,     0,   313,     0,     0,   314,   315,     0,
       0,     0,   316,   317,   318,   319,     0,     0,   320,   321,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
     326,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,     0,     0,     0,   332,     0,   333,     0,
       0,   334,   335,     0,     0,   336,     0,     0,   337,   338,
     675,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,     0,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,     0,     0,     0,     0,   399,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,   406,     0,     0,
     407,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     408,   409,   410,     0,   411,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,     0,   423,
       0,   424,   425,   426,     0,   427,     0,     0,   429,   430,
     431,     0,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,     0,   447,     0,   448,   449,
     450,     0,     0,     0,   452,   453,   454,   455,   456,   457,
     458,     0,   459,     0,   460,   461,     0,   462,   463,   464,
       0,   465,     0,     0,   466,   467,   468,   469,     0,   470,
       0,   471,   472,   473,   474,   475,     0,   476,   477,     0,
       0,     0,   478,   479,   480,   481,     0,     0,     0,   482,
       0,     0,     0,     0,     0,   484,   485,   486,   487,     0,
     488,   489,   490,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,   501,   502,   503,   504,   505,
       0,     0,   506,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,     0,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,   191,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,   540,   541,     0,
       0,   542,     0,     0,   543,     0,   544,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,     0,     0,     0,     0,   555,   556,   557,     0,
     558,   559,   560,   561,     0,     0,   562,     0,     0,     0,
     563,   564,   565,   566,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,   573,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,     0,     0,   590,   591,   592,     0,
     594,   595,   596,   597,   598,   599,     0,   600,   601,   602,
     603,   604,   605,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,     0,     0,     0,     0,   202,     0,     0,
       0,     0,   204,   205,   206,   207,   208,     0,     0,  -443,
       0,     0,     0,   211,     0,     0,     0,   212,     0,     0,
     213,   214,   215,     0,   216,     0,     0,     0,     0,     0,
     219,  4645,     0,   220,   221,     0,   222,   223,     0,     0,
       0,     0,   226,   227,   228,  4646,   230,   231,     0,   232,
     233,     0,   234,   235,     0,   237,     0,   239,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
       0,   251,     0,     0,     0,   252,     0,     0,     0,     0,
     253,     0,     0,   254,     0,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
       0,     0,     0,   261,   262,     0,   263,     0,     0,     0,
       0,     0,   264,   265,   266,   267,   268,     0,     0,     0,
       0,     0,     0,   270,   271,   272,     0,  -413,  -413,   273,
       0,  -413,   275,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,   282,   283,   284,   285,     0,     0,     0,
     287,   288,   289,   290,   291,     0,     0,   292,   293,  4647,
     294,   295,   296,   297,   298,     0,     0,     0,     0,     0,
       0,     0,     0,   302,     0,   303,     0,     0,     0,   304,
       0,     0,   306,   307,   308,     0,   309,     0,   310,     0,
       0,     0,     0,   312,     0,     0,     0,     0,     0,   315,
       0,     0,     0,   316,   317,   318,   319,  4648,     0,   320,
       0,   322,     0,     0,   323,     0,     0,     0,     0,   324,
     325,     0,     0,     0,     0,   327,     0,     0,     0,   328,
     329,     0,   330,   331,  4649,     0,     0,   332,     0,   333,
       0,     0,     0,   335,     0,     0,   336,  4650,     0,   337,
     338,     0,     0,     0,     0,     0,   339,   340,     0,   341,
       0,   342,     0,   343,   344,     0,     0,     0,     0,  -398,
       0,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,   367,   368,   369,
     370,     0,   371,   372,     0,     0,     0,     0,   373,   374,
     375,   376,   377,   378,     0,     0,   379,   380,     0,   381,
       0,   382,     0,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,     0,     0,   400,     0,     0,
       0,   401,     0,   402,   403,     0,   404,   405,  4651,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   409,   410,     0,     0,     0,   412,     0,   413,
     414,   415,   416,   417,   418,   419,   420,   421,     0,     0,
       0,     0,     0,   425,   426,     0,   427,     0,   428,   429,
     430,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   446,     0,     0,   448,
       0,   450,  -398,     0,   451,   452,   453,   454,   455,   456,
     457,   458,     0,     0,     0,   460,     0,     0,   462,   463,
     464,  4652,   465,     0,     0,     0,   467,   468,   469,     0,
     470,     0,   471,   472,     0,   474,   475,     0,   476,     0,
       0,     0,     0,   478,   479,   480,     0,     0,     0,     0,
     482,     0,     0,     0,     0,     0,     0,   485,     0,   487,
       0,   488,     0,     0,   491,   492,     0,     0,     0,     0,
       0,   493,   494,   495,     0,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,     0,   502,   503,   504,
     505,     0,     0,     0,   507,     0,     0,   508,   509,   510,
     511,   512,   513,     0,     0,   514,   515,   516,   517,     0,
     518,   519,     0,     0,   520,   521,   522,   523,     0,     0,
     524,   525,     0,   526,   527,   528,   529,     0,     0,     0,
       0,     0,   530,   531,     0,     0,     0,     0,   533,   534,
     535,     0,   536,   537,     0,   538,   539,     0,     0,     0,
       0,     0,   542,     0,     0,   543,     0,     0,     0,   545,
     546,     0,     0,     0,     0,     0,   547,     0,   548,     0,
       0,   549,     0,     0,     0,   550,     0,   551,   552,   553,
     554,     0,     0,  -398,     0,     0,     0,   555,   556,     0,
       0,   558,     0,   560,   561,     0,     0,   562,     0,     0,
       0,     0,   564,     0,     0,     0,   567,     0,     0,     0,
       0,     0,     0,     0,     0,   568,   569,   570,     0,     0,
     571,   572,     0,     0,     0,     0,   574,     0,   575,     0,
       0,     0,     0,     0,     0,   576,   577,     0,     0,   578,
       0,   579,     0,   580,   581,     0,     0,     0,   582,   583,
     584,   585,   586,   587,   588,   589,     0,   590,   591,   592,
       0,   594,   595,   596,   597,   598,   599,     0,   600,     0,
       0,     0,   604,   605,   195,     0,   196,   197,   198,   199,
     200,     0,     0,     0,     0,     0,     0,     0,   202,     0,
       0,     0,     0,   204,   205,   206,   207,   208,     0,     0,
    -443,     0,     0,     0,   211,     0,     0,     0,   212,     0,
       0,   213,   214,   215,     0,   216,     0,     0,     0,     0,
       0,   219,  4645,     0,   220,   221,     0,   222,   223,     0,
       0,     0,     0,   226,   227,   228,  4646,   230,   231,     0,
     232,   233,     0,   234,   235,     0,   237,     0,   239,   240,
     241,   242,   243,   244,     0,   245,   246,     0,   247,   248,
     249,     0,   251,     0,     0,     0,   252,     0,     0,     0,
       0,   253,     0,     0,   254,     0,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,     0,     0,     0,   261,   262,     0,   263,     0,     0,
       0,     0,     0,   264,   265,   266,   267,   268,     0,     0,
       0,     0,     0,     0,   270,   271,   272,     0,  -434,     0,
     273,     0,  -434,   275,     0,   276,   277,   278,     0,     0,
     279,   280,     0,   281,   282,   283,   284,   285,     0,     0,
       0,   287,   288,   289,   290,   291,     0,     0,   292,   293,
    4647,   294,   295,   296,   297,   298,     0,     0,     0,     0,
       0,     0,     0,     0,   302,     0,   303,     0,     0,     0,
     304,     0,     0,   306,   307,   308,     0,   309,     0,   310,
       0,     0,     0,     0,   312,     0,     0,     0,     0,     0,
     315,     0,     0,     0,   316,   317,   318,   319,  4648,     0,
     320,     0,   322,     0,     0,   323,     0,     0,     0,     0,
     324,   325,     0,     0,     0,     0,   327,     0,     0,     0,
     328,   329,     0,   330,   331,  4649,     0,     0,   332,     0,
     333,     0,     0,     0,   335,     0,     0,   336,  4650,     0,
     337,   338,     0,     0,     0,     0,     0,   339,   340,     0,
     341,     0,   342,     0,   343,   344,     0,     0,     0,     0,
    -398,     0,     0,   345,     0,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,   367,   368,
     369,   370,     0,   371,   372,     0,     0,     0,     0,   373,
     374,   375,   376,   377,   378,     0,     0,   379,   380,     0,
     381,     0,   382,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,     0,   394,
     395,   396,   397,   398,     0,     0,     0,     0,   400,     0,
       0,     0,   401,     0,   402,   403,     0,   404,   405,  4651,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   409,   410,     0,     0,     0,   412,     0,
     413,   414,   415,   416,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   425,   426,     0,   427,     0,   428,
     429,   430,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,   437,   438,     0,   439,   440,     0,
       0,   441,   442,   443,   444,   445,     0,   446,     0,     0,
     448,     0,   450,  -398,     0,   451,   452,   453,   454,   455,
     456,   457,   458,     0,     0,     0,   460,     0,     0,   462,
     463,   464,  4652,   465,     0,     0,     0,   467,   468,   469,
       0,   470,     0,   471,   472,     0,   474,   475,     0,   476,
       0,     0,     0,     0,   478,   479,   480,     0,     0,     0,
       0,   482,     0,     0,     0,     0,     0,     0,   485,     0,
     487,     0,   488,     0,     0,   491,   492,     0,     0,     0,
       0,     0,   493,   494,   495,     0,   496,     0,     0,   497,
       0,     0,   498,     0,   499,     0,   500,     0,   502,   503,
     504,   505,     0,     0,     0,   507,     0,     0,   508,   509,
     510,   511,   512,   513,     0,     0,   514,   515,   516,   517,
       0,   518,   519,     0,     0,   520,   521,   522,   523,     0,
       0,   524,   525,     0,   526,   527,   528,   529,     0,     0,
       0,     0,     0,   530,   531,     0,     0,     0,     0,   533,
     534,   535,     0,   536,   537,     0,   538,   539,     0,     0,
       0,     0,     0,   542,     0,     0,   543,     0,     0,     0,
     545,   546,     0,     0,     0,     0,     0,   547,     0,   548,
       0,     0,   549,     0,     0,     0,   550,     0,   551,   552,
     553,   554,  -434,     0,  -398,     0,     0,     0,   555,   556,
       0,     0,   558,     0,   560,   561,     0,     0,   562,     0,
       0,     0,     0,   564,     0,     0,     0,   567,     0,     0,
       0,     0,     0,     0,     0,     0,   568,   569,   570,     0,
       0,   571,   572,     0,     0,     0,     0,   574,     0,   575,
       0,     0,     0,     0,     0,     0,   576,   577,     0,     0,
     578,     0,   579,     0,   580,   581,     0,     0,     0,   582,
     583,   584,   585,   586,   587,   588,   589,     0,   590,   591,
     592,     0,   594,   595,   596,   597,   598,   599,     0,   600,
       0,     0,     0,   604,   605,   195,     0,   196,   197,   198,
     199,   200,     0,     0,     0,     0,     0,     0,     0,   202,
       0,     0,     0,     0,   204,   205,   206,   207,   208,     0,
       0,  -443,     0,     0,     0,   211,     0,     0,     0,   212,
       0,     0,   213,   214,   215,     0,   216,     0,     0,     0,
       0,     0,   219,  4645,     0,   220,   221,     0,   222,   223,
       0,     0,     0,     0,   226,   227,   228,  4646,   230,   231,
       0,   232,   233,     0,   234,   235,     0,   237,     0,   239,
     240,   241,   242,   243,   244,     0,   245,   246,     0,   247,
     248,   249,     0,   251,     0,     0,     0,   252,     0,     0,
       0,     0,   253,     0,     0,   254,     0,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,     0,     0,     0,   261,   262,     0,   263,     0,
       0,     0,     0,     0,   264,   265,   266,   267,   268,     0,
       0,     0,     0,     0,     0,   270,   271,   272,     0,  -431,
       0,   273,     0,  -431,   275,     0,   276,   277,   278,     0,
       0,   279,   280,     0,   281,   282,   283,   284,   285,     0,
       0,     0,   287,   288,   289,   290,   291,     0,     0,   292,
     293,  4647,   294,   295,   296,   297,   298,     0,     0,     0,
       0,     0,     0,     0,     0,   302,     0,   303,     0,     0,
       0,   304,     0,     0,   306,   307,   308,     0,   309,     0,
     310,     0,     0,     0,     0,   312,     0,     0,     0,     0,
       0,   315,     0,     0,     0,   316,   317,   318,   319,  4648,
       0,   320,     0,   322,     0,     0,   323,     0,     0,     0,
       0,   324,   325,     0,     0,     0,     0,   327,     0,     0,
       0,   328,   329,     0,   330,   331,  4649,     0,     0,   332,
       0,   333,     0,     0,     0,   335,     0,     0,   336,  4650,
       0,   337,   338,     0,     0,     0,     0,     0,   339,   340,
       0,   341,     0,   342,     0,   343,   344,     0,     0,     0,
       0,  -398,     0,     0,   345,     0,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,   367,
     368,   369,   370,     0,   371,   372,     0,     0,     0,     0,
     373,   374,   375,   376,   377,   378,     0,     0,   379,   380,
       0,   381,     0,   382,     0,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,     0,
     394,   395,   396,   397,   398,     0,     0,     0,     0,   400,
       0,     0,     0,   401,     0,   402,   403,     0,   404,   405,
    4651,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   409,   410,     0,     0,     0,   412,
       0,   413,   414,   415,   416,   417,   418,   419,   420,   421,
       0,     0,     0,     0,     0,   425,   426,     0,   427,     0,
     428,   429,   430,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,   437,   438,     0,   439,   440,
       0,     0,   441,   442,   443,   444,   445,     0,   446,     0,
       0,   448,     0,   450,  -398,     0,   451,   452,   453,   454,
     455,   456,   457,   458,     0,     0,     0,   460,     0,     0,
     462,   463,   464,  4652,   465,     0,     0,     0,   467,   468,
     469,     0,   470,     0,   471,   472,     0,   474,   475,     0,
     476,     0,     0,     0,     0,   478,   479,   480,     0,     0,
       0,     0,   482,     0,     0,     0,     0,     0,     0,   485,
       0,   487,     0,   488,     0,     0,   491,   492,     0,     0,
       0,     0,     0,   493,   494,   495,     0,   496,     0,     0,
     497,     0,     0,   498,     0,   499,     0,   500,     0,   502,
     503,   504,   505,     0,     0,     0,   507,     0,     0,   508,
     509,   510,   511,   512,   513,     0,     0,   514,   515,   516,
     517,     0,   518,   519,     0,     0,   520,   521,   522,   523,
       0,     0,   524,   525,     0,   526,   527,   528,   529,     0,
       0,     0,     0,     0,   530,   531,     0,     0,     0,     0,
     533,   534,   535,     0,   536,   537,     0,   538,   539,     0,
       0,     0,     0,     0,   542,     0,     0,   543,     0,     0,
       0,   545,   546,     0,     0,     0,     0,     0,   547,     0,
     548,     0,     0,   549,     0,     0,     0,   550,     0,   551,
     552,   553,   554,  -431,     0,  -398,     0,     0,     0,   555,
     556,     0,     0,   558,     0,   560,   561,     0,     0,   562,
       0,     0,     0,     0,   564,     0,     0,     0,   567,     0,
       0,     0,     0,     0,     0,     0,     0,   568,   569,   570,
       0,     0,   571,   572,     0,     0,     0,     0,   574,     0,
     575,     0,     0,     0,     0,     0,     0,   576,   577,     0,
       0,   578,     0,   579,     0,   580,   581,     0,     0,     0,
     582,   583,   584,   585,   586,   587,   588,   589,     0,   590,
     591,   592,     0,   594,   595,   596,   597,   598,   599,     0,
     600,     0,     0,     0,   604,   605,   195,     0,   196,   197,
     198,   199,   200,     0,     0,     0,     0,     0,     0,     0,
     202,     0,     0,     0,     0,   204,   205,   206,   207,   208,
       0,     0,  -443,     0,     0,     0,   211,     0,     0,     0,
     212,     0,     0,   213,   214,   215,     0,   216,     0,     0,
       0,     0,     0,   219,  4645,     0,   220,   221,     0,   222,
     223,     0,     0,     0,     0,   226,   227,   228,  4646,   230,
     231,     0,   232,   233,     0,   234,   235,     0,   237,     0,
     239,   240,   241,   242,   243,   244,     0,   245,   246,     0,
     247,   248,   249,     0,   251,     0,     0,     0,   252,     0,
       0,     0,     0,   253,     0,     0,   254,     0,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,     0,     0,     0,   261,   262,     0,   263,
       0,     0,     0,     0,     0,   264,   265,   266,   267,   268,
       0,     0,     0,     0,     0,     0,   270,   271,   272,     0,
       0,     0,   273,     0,  4891,   275,     0,   276,   277,   278,
       0,     0,   279,   280,     0,   281,   282,   283,   284,   285,
       0,     0,     0,   287,   288,   289,   290,   291,     0,     0,
     292,   293,  4647,   294,   295,   296,   297,   298,     0,     0,
       0,     0,     0,     0,     0,     0,   302,     0,   303,     0,
       0,     0,   304,     0,     0,   306,   307,   308,     0,   309,
       0,   310,     0,     0,     0,     0,   312,     0,     0,     0,
       0,     0,   315,     0,     0,     0,   316,   317,   318,   319,
    4648,     0,   320,     0,   322,     0,     0,   323,     0,     0,
       0,     0,   324,   325,     0,     0,     0,     0,   327,     0,
       0,     0,   328,   329,     0,   330,   331,  4649,     0,     0,
     332,     0,   333,     0,     0,     0,   335,     0,     0,   336,
    4650,     0,   337,   338,     0,     0,     0,     0,     0,   339,
     340,     0,   341,     0,   342,     0,   343,   344,     0,     0,
       0,     0,  -398,     0,     0,   345,     0,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
     367,   368,   369,   370,     0,   371,   372,     0,     0,     0,
       0,   373,   374,   375,   376,   377,   378,     0,     0,   379,
     380,     0,   381,     0,   382,     0,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
       0,   394,   395,   396,   397,   398,     0,     0,     0,     0,
     400,     0,     0,     0,   401,     0,   402,   403,     0,   404,
     405,  4651,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   409,   410,     0,     0,     0,
     412,     0,   413,   414,   415,   416,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   425,   426,     0,   427,
       0,   428,   429,   430,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,   437,   438,     0,   439,
     440,     0,     0,   441,   442,   443,   444,   445,     0,   446,
       0,     0,   448,     0,   450,  -398,     0,   451,   452,   453,
     454,   455,   456,   457,   458,     0,     0,     0,   460,     0,
       0,   462,   463,   464,  4652,   465,     0,     0,     0,   467,
     468,   469,     0,   470,     0,   471,   472,     0,   474,   475,
       0,   476,     0,     0,     0,     0,   478,   479,   480,     0,
       0,     0,     0,   482,     0,     0,     0,     0,     0,     0,
     485,     0,   487,     0,   488,     0,     0,   491,   492,     0,
       0,     0,     0,     0,   493,   494,   495,     0,   496,     0,
       0,   497,     0,     0,   498,     0,   499,     0,   500,     0,
     502,   503,   504,   505,     0,     0,     0,   507,     0,     0,
     508,   509,   510,   511,   512,   513,     0,     0,   514,   515,
     516,   517,     0,   518,   519,     0,     0,   520,   521,   522,
     523,     0,     0,   524,   525,     0,   526,   527,   528,   529,
       0,     0,     0,     0,     0,   530,   531,     0,     0,     0,
       0,   533,   534,   535,     0,   536,   537,     0,   538,   539,
       0,     0,     0,     0,     0,   542,     0,     0,   543,     0,
       0,     0,   545,   546,     0,     0,     0,     0,     0,   547,
       0,   548,     0,     0,   549,     0,     0,     0,   550,     0,
     551,   552,   553,   554,     0,     0,  -398,     0,     0,     0,
     555,   556,     0,     0,   558,     0,   560,   561,     0,     0,
     562,     0,     0,     0,     0,   564,     0,     0,     0,   567,
       0,     0,     0,     0,     0,     0,     0,     0,   568,   569,
     570,     0,     0,   571,   572,     0,     0,     0,     0,   574,
       0,   575,     0,     0,     0,     0,     0,     0,   576,   577,
       0,     0,   578,     0,   579,     0,   580,   581,     0,     0,
       0,   582,   583,   584,   585,   586,   587,   588,   589,     0,
     590,   591,   592,     0,   594,   595,   596,   597,   598,   599,
       0,   600,     0,     0,     0,   604,   605,   195,     0,   196,
     197,   198,   199,   200,     0,     0,     0,     0,     0,     0,
       0,   202,     0,     0,     0,     0,   204,   205,   206,   207,
     208,     0,     0,  -443,     0,     0,     0,   211,     0,     0,
       0,   212,     0,     0,   213,   214,   215,     0,   216,     0,
       0,     0,     0,     0,   219,  4645,     0,   220,   221,     0,
     222,   223,     0,     0,     0,     0,   226,   227,   228,  4646,
     230,   231,     0,   232,   233,     0,   234,   235,     0,   237,
       0,   239,   240,   241,   242,   243,   244,     0,   245,   246,
       0,   247,   248,   249,     0,   251,     0,     0,     0,   252,
       0,     0,     0,     0,   253,     0,     0,   254,     0,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,     0,     0,     0,   261,   262,     0,
     263,     0,     0,     0,     0,     0,   264,   265,   266,   267,
     268,     0,     0,     0,     0,     0,     0,   270,   271,   272,
       0,     0,     0,   273,     0,  -436,   275,     0,   276,   277,
     278,     0,     0,   279,   280,     0,   281,   282,   283,   284,
     285,     0,     0,     0,   287,   288,   289,   290,   291,     0,
       0,   292,   293,  4647,   294,   295,   296,   297,   298,     0,
       0,     0,     0,     0,     0,     0,     0,   302,     0,   303,
       0,     0,     0,   304,     0,     0,   306,   307,   308,     0,
     309,     0,   310,     0,     0,     0,     0,   312,     0,     0,
       0,     0,     0,   315,     0,     0,     0,   316,   317,   318,
     319,  4648,     0,   320,     0,   322,     0,     0,   323,     0,
       0,     0,     0,   324,   325,     0,     0,     0,     0,   327,
       0,     0,     0,   328,   329,     0,   330,   331,  4649,     0,
       0,   332,     0,   333,     0,     0,     0,   335,     0,     0,
     336,  4650,     0,   337,   338,     0,     0,     0,     0,     0,
     339,   340,     0,   341,     0,   342,     0,   343,   344,     0,
       0,     0,     0,  -398,     0,     0,   345,     0,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,   367,   368,   369,   370,     0,   371,   372,     0,     0,
       0,     0,   373,   374,   375,   376,   377,   378,     0,     0,
     379,   380,     0,   381,     0,   382,     0,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,     0,   394,   395,   396,   397,   398,     0,     0,     0,
       0,   400,     0,     0,     0,   401,     0,   402,   403,     0,
     404,   405,  4651,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   409,   410,     0,     0,
       0,   412,     0,   413,   414,   415,   416,   417,   418,   419,
     420,   421,     0,     0,     0,     0,     0,   425,   426,     0,
     427,     0,   428,   429,   430,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,   437,   438,     0,
     439,   440,     0,     0,   441,   442,   443,   444,   445,     0,
     446,     0,     0,   448,     0,   450,  -398,     0,   451,   452,
     453,   454,   455,   456,   457,   458,     0,     0,     0,   460,
       0,     0,   462,   463,   464,  4652,   465,     0,     0,     0,
     467,   468,   469,     0,   470,     0,   471,   472,     0,   474,
     475,     0,   476,     0,     0,     0,     0,   478,   479,   480,
       0,     0,     0,     0,   482,     0,     0,     0,     0,     0,
       0,   485,     0,   487,     0,   488,     0,     0,   491,   492,
       0,     0,     0,     0,     0,   493,   494,   495,     0,   496,
       0,     0,   497,     0,     0,   498,     0,   499,     0,   500,
       0,   502,   503,   504,   505,     0,     0,     0,   507,     0,
       0,   508,   509,   510,   511,   512,   513,     0,     0,   514,
     515,   516,   517,     0,   518,   519,     0,     0,   520,   521,
     522,   523,     0,     0,   524,   525,     0,   526,   527,   528,
     529,     0,     0,     0,     0,     0,   530,   531,     0,     0,
       0,     0,   533,   534,   535,     0,   536,   537,     0,   538,
     539,     0,     0,     0,     0,     0,   542,     0,     0,   543,
       0,     0,     0,   545,   546,     0,     0,     0,     0,     0,
     547,     0,   548,     0,     0,   549,     0,     0,     0,   550,
       0,   551,   552,   553,   554,     0,     0,  -398,     0,     0,
       0,   555,   556,     0,     0,   558,     0,   560,   561,     0,
       0,   562,     0,     0,     0,     0,   564,     0,     0,     0,
     567,     0,     0,     0,     0,     0,     0,     0,     0,   568,
     569,   570,     0,     0,   571,   572,     0,     0,     0,     0,
     574,     0,   575,     0,     0,     0,     0,     0,     0,   576,
     577,     0,     0,   578,     0,   579,     0,   580,   581,     0,
       0,     0,   582,   583,   584,   585,   586,   587,   588,   589,
       0,   590,   591,   592,     0,   594,   595,   596,   597,   598,
     599,     0,   600,     0,     0,     0,   604,   605,   195,     0,
     196,   197,   198,   199,   200,     0,     0,     0,     0,     0,
       0,     0,   202,     0,     0,     0,     0,   204,   205,   206,
     207,   208,     0,     0,  -443,     0,     0,     0,   211,     0,
       0,     0,   212,     0,     0,   213,   214,   215,     0,   216,
       0,     0,     0,     0,     0,   219,  4645,     0,   220,   221,
       0,   222,   223,     0,     0,     0,     0,   226,   227,   228,
    4646,   230,   231,     0,   232,   233,     0,   234,   235,     0,
     237,     0,   239,   240,   241,   242,   243,   244,     0,   245,
     246,     0,   247,   248,   249,     0,   251,     0,     0,     0,
     252,     0,     0,     0,     0,   253,     0,     0,   254,     0,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,     0,     0,     0,   261,   262,
       0,   263,     0,     0,     0,     0,     0,   264,   265,   266,
     267,   268,     0,     0,     0,     0,     0,     0,   270,   271,
     272,     0,     0,     0,   273,     0,  4952,   275,     0,   276,
     277,   278,     0,     0,   279,   280,     0,   281,   282,   283,
     284,   285,     0,     0,     0,   287,   288,   289,   290,   291,
       0,     0,   292,   293,  4647,   294,   295,   296,   297,   298,
       0,     0,     0,     0,     0,     0,     0,     0,   302,     0,
     303,     0,     0,     0,   304,     0,     0,   306,   307,   308,
       0,   309,     0,   310,     0,     0,     0,     0,   312,     0,
       0,     0,     0,     0,   315,     0,     0,     0,   316,   317,
     318,   319,  4648,     0,   320,     0,   322,     0,     0,   323,
       0,     0,     0,     0,   324,   325,     0,     0,     0,     0,
     327,     0,     0,     0,   328,   329,     0,   330,   331,  4649,
       0,     0,   332,     0,   333,     0,     0,     0,   335,     0,
       0,   336,  4650,     0,   337,   338,     0,     0,     0,     0,
       0,   339,   340,     0,   341,     0,   342,     0,   343,   344,
       0,     0,     0,     0,  -398,     0,     0,   345,     0,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,   367,   368,   369,   370,     0,   371,   372,     0,
       0,     0,     0,   373,   374,   375,   376,   377,   378,     0,
       0,   379,   380,     0,   381,     0,   382,     0,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,     0,   394,   395,   396,   397,   398,     0,     0,
       0,     0,   400,     0,     0,     0,   401,     0,   402,   403,
       0,   404,   405,  4651,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   409,   410,     0,
       0,     0,   412,     0,   413,   414,   415,   416,   417,   418,
     419,   420,   421,     0,     0,     0,     0,     0,   425,   426,
       0,   427,     0,   428,   429,   430,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,   437,   438,
       0,   439,   440,     0,     0,   441,   442,   443,   444,   445,
       0,   446,     0,     0,   448,     0,   450,  -398,     0,   451,
     452,   453,   454,   455,   456,   457,   458,     0,     0,     0,
     460,     0,     0,   462,   463,   464,  4652,   465,     0,     0,
       0,   467,   468,   469,     0,   470,     0,   471,   472,     0,
     474,   475,     0,   476,     0,     0,     0,     0,   478,   479,
     480,     0,     0,     0,     0,   482,     0,     0,     0,     0,
       0,     0,   485,     0,   487,     0,   488,     0,     0,   491,
     492,     0,     0,     0,     0,     0,   493,   494,   495,     0,
     496,     0,     0,   497,     0,     0,   498,     0,   499,     0,
     500,     0,   502,   503,   504,   505,     0,     0,     0,   507,
       0,     0,   508,   509,   510,   511,   512,   513,     0,     0,
     514,   515,   516,   517,     0,   518,   519,     0,     0,   520,
     521,   522,   523,     0,     0,   524,   525,     0,   526,   527,
     528,   529,     0,     0,     0,     0,     0,   530,   531,     0,
       0,     0,     0,   533,   534,   535,     0,   536,   537,     0,
     538,   539,     0,     0,     0,     0,     0,   542,     0,     0,
     543,     0,     0,     0,   545,   546,     0,     0,     0,     0,
       0,   547,     0,   548,     0,     0,   549,     0,     0,     0,
     550,     0,   551,   552,   553,   554,     0,     0,  -398,     0,
       0,     0,   555,   556,     0,     0,   558,     0,   560,   561,
       0,     0,   562,     0,     0,     0,     0,   564,     0,     0,
       0,   567,     0,     0,     0,     0,     0,     0,     0,     0,
     568,   569,   570,     0,     0,   571,   572,     0,     0,     0,
       0,   574,     0,   575,     0,     0,     0,     0,     0,     0,
     576,   577,     0,     0,   578,     0,   579,     0,   580,   581,
       0,     0,     0,   582,   583,   584,   585,   586,   587,   588,
     589,     0,   590,   591,   592,     0,   594,   595,   596,   597,
     598,   599,     0,   600,     0,     0,     0,   604,   605,   195,
       0,   196,   197,   198,   199,   200,     0,     0,     0,     0,
       0,     0,     0,   202,     0,     0,     0,     0,   204,   205,
     206,   207,   208,     0,     0,  -443,     0,     0,     0,   211,
       0,     0,     0,   212,     0,     0,   213,   214,   215,     0,
     216,     0,     0,     0,     0,     0,   219,  4645,     0,   220,
     221,     0,   222,   223,     0,     0,     0,     0,   226,   227,
     228,  4646,   230,   231,     0,   232,   233,     0,   234,   235,
       0,   237,     0,   239,   240,   241,   242,   243,   244,     0,
     245,   246,     0,   247,   248,   249,     0,   251,     0,     0,
       0,   252,     0,     0,     0,     0,   253,     0,     0,   254,
       0,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,     0,     0,     0,   261,
     262,     0,   263,     0,     0,     0,     0,     0,   264,   265,
     266,   267,   268,     0,     0,     0,     0,     0,     0,   270,
     271,   272,     0,     0,     0,   273,     0,  4996,   275,     0,
     276,   277,   278,     0,     0,   279,   280,     0,   281,   282,
     283,   284,   285,     0,     0,     0,   287,   288,   289,   290,
     291,     0,     0,   292,   293,  4647,   294,   295,   296,   297,
     298,     0,     0,     0,     0,     0,     0,     0,     0,   302,
       0,   303,     0,     0,     0,   304,     0,     0,   306,   307,
     308,     0,   309,     0,   310,     0,     0,     0,     0,   312,
       0,     0,     0,     0,     0,   315,     0,     0,     0,   316,
     317,   318,   319,  4648,     0,   320,     0,   322,     0,     0,
     323,     0,     0,     0,     0,   324,   325,     0,     0,     0,
       0,   327,     0,     0,     0,   328,   329,     0,   330,   331,
    4649,     0,     0,   332,     0,   333,     0,     0,     0,   335,
       0,     0,   336,  4650,     0,   337,   338,     0,     0,     0,
       0,     0,   339,   340,     0,   341,     0,   342,     0,   343,
     344,     0,     0,     0,     0,  -398,     0,     0,   345,     0,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,   367,   368,   369,   370,     0,   371,   372,
       0,     0,     0,     0,   373,   374,   375,   376,   377,   378,
       0,     0,   379,   380,     0,   381,     0,   382,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,     0,   394,   395,   396,   397,   398,     0,
       0,     0,     0,   400,     0,     0,     0,   401,     0,   402,
     403,     0,   404,   405,  4651,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   409,   410,
       0,     0,     0,   412,     0,   413,   414,   415,   416,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   425,
     426,     0,   427,     0,   428,   429,   430,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,   437,
     438,     0,   439,   440,     0,     0,   441,   442,   443,   444,
     445,     0,   446,     0,     0,   448,     0,   450,  -398,     0,
     451,   452,   453,   454,   455,   456,   457,   458,     0,     0,
       0,   460,     0,     0,   462,   463,   464,  4652,   465,     0,
       0,     0,   467,   468,   469,     0,   470,     0,   471,   472,
       0,   474,   475,     0,   476,     0,     0,     0,     0,   478,
     479,   480,     0,     0,     0,     0,   482,     0,     0,     0,
       0,     0,     0,   485,     0,   487,     0,   488,     0,     0,
     491,   492,     0,     0,     0,     0,     0,   493,   494,   495,
       0,   496,     0,     0,   497,     0,     0,   498,     0,   499,
       0,   500,     0,   502,   503,   504,   505,     0,     0,     0,
     507,     0,     0,   508,   509,   510,   511,   512,   513,     0,
       0,   514,   515,   516,   517,     0,   518,   519,     0,     0,
     520,   521,   522,   523,     0,     0,   524,   525,     0,   526,
     527,   528,   529,     0,     0,     0,     0,     0,   530,   531,
       0,     0,     0,     0,   533,   534,   535,     0,   536,   537,
       0,   538,   539,     0,     0,     0,     0,     0,   542,     0,
       0,   543,     0,     0,     0,   545,   546,     0,     0,     0,
       0,     0,   547,     0,   548,     0,     0,   549,     0,     0,
       0,   550,     0,   551,   552,   553,   554,     0,     0,  -398,
       0,     0,     0,   555,   556,     0,     0,   558,     0,   560,
     561,     0,     0,   562,     0,     0,     0,     0,   564,     0,
       0,     0,   567,     0,     0,     0,     0,     0,     0,     0,
       0,   568,   569,   570,     0,     0,   571,   572,     0,     0,
       0,     0,   574,     0,   575,     0,     0,     0,     0,     0,
       0,   576,   577,     0,     0,   578,     0,   579,     0,   580,
     581,     0,     0,     0,   582,   583,   584,   585,   586,   587,
     588,   589,     0,   590,   591,   592,     0,   594,   595,   596,
     597,   598,   599,     0,   600,     0,     0,     0,   604,   605,
     195,     0,   196,   197,   198,   199,   200,     0,     0,     0,
       0,     0,     0,     0,   202,     0,     0,     0,     0,   204,
     205,   206,   207,   208,     0,     0,  -443,     0,     0,     0,
     211,     0,     0,     0,   212,     0,     0,   213,   214,   215,
       0,   216,     0,     0,     0,     0,     0,   219,  4645,     0,
     220,   221,     0,   222,   223,     0,     0,     0,     0,   226,
     227,   228,  4646,   230,   231,     0,   232,   233,     0,   234,
     235,     0,   237,     0,   239,   240,   241,   242,   243,   244,
       0,   245,   246,     0,   247,   248,   249,     0,   251,     0,
       0,     0,   252,     0,     0,     0,     0,   253,     0,     0,
     254,     0,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,     0,     0,     0,
     261,   262,     0,   263,     0,     0,     0,     0,     0,   264,
     265,   266,   267,   268,     0,     0,     0,     0,     0,     0,
     270,   271,   272,     0,     0,     0,   273,     0,  -417,   275,
       0,   276,   277,   278,     0,     0,   279,   280,     0,   281,
     282,   283,   284,   285,     0,     0,     0,   287,   288,   289,
     290,   291,     0,     0,   292,   293,  4647,   294,   295,   296,
     297,   298,     0,     0,     0,     0,     0,     0,     0,     0,
     302,     0,   303,     0,     0,     0,   304,     0,     0,   306,
     307,   308,     0,   309,     0,   310,     0,     0,     0,     0,
     312,     0,     0,     0,     0,     0,   315,     0,     0,     0,
     316,   317,   318,   319,  4648,     0,   320,     0,   322,     0,
       0,   323,     0,     0,     0,     0,   324,   325,     0,     0,
       0,     0,   327,     0,     0,     0,   328,   329,     0,   330,
     331,  4649,     0,     0,   332,     0,   333,     0,     0,     0,
     335,     0,     0,   336,  4650,     0,   337,   338,     0,     0,
       0,     0,     0,   339,   340,     0,   341,     0,   342,     0,
     343,   344,     0,     0,     0,     0,  -398,     0,     0,   345,
       0,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,   367,   368,   369,   370,     0,   371,
     372,     0,     0,     0,     0,   373,   374,   375,   376,   377,
     378,     0,     0,   379,   380,     0,   381,     0,   382,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,     0,   394,   395,   396,   397,   398,
       0,     0,     0,     0,   400,     0,     0,     0,   401,     0,
     402,   403,     0,   404,   405,  4651,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   409,
     410,     0,     0,     0,   412,     0,   413,   414,   415,   416,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     425,   426,     0,   427,     0,   428,   429,   430,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
     437,   438,     0,   439,   440,     0,     0,   441,   442,   443,
     444,   445,     0,   446,     0,     0,   448,     0,   450,  -398,
       0,   451,   452,   453,   454,   455,   456,   457,   458,     0,
       0,     0,   460,     0,     0,   462,   463,   464,  4652,   465,
       0,     0,     0,   467,   468,   469,     0,   470,     0,   471,
     472,     0,   474,   475,     0,   476,     0,     0,     0,     0,
     478,   479,   480,     0,     0,     0,     0,   482,     0,     0,
       0,     0,     0,     0,   485,     0,   487,     0,   488,     0,
       0,   491,   492,     0,     0,     0,     0,     0,   493,   494,
     495,     0,   496,     0,     0,   497,     0,     0,   498,     0,
     499,     0,   500,     0,   502,   503,   504,   505,     0,     0,
       0,   507,     0,     0,   508,   509,   510,   511,   512,   513,
       0,     0,   514,   515,   516,   517,     0,   518,   519,     0,
       0,   520,   521,   522,   523,     0,     0,   524,   525,     0,
     526,   527,   528,   529,     0,     0,     0,     0,     0,   530,
     531,     0,     0,     0,     0,   533,   534,   535,     0,   536,
     537,     0,   538,   539,     0,     0,     0,     0,     0,   542,
       0,     0,   543,     0,     0,     0,   545,   546,     0,     0,
       0,     0,     0,   547,     0,   548,     0,     0,   549,     0,
       0,     0,   550,     0,   551,   552,   553,   554,     0,     0,
    -398,     0,     0,     0,   555,   556,     0,     0,   558,     0,
     560,   561,     0,     0,   562,     0,     0,     0,     0,   564,
       0,     0,     0,   567,     0,     0,     0,     0,     0,     0,
       0,     0,   568,   569,   570,     0,     0,   571,   572,     0,
       0,     0,     0,   574,     0,   575,     0,     0,     0,     0,
       0,     0,   576,   577,     0,     0,   578,     0,   579,     0,
     580,   581,     0,     0,     0,   582,   583,   584,   585,   586,
     587,   588,   589,     0,   590,   591,   592,     0,   594,   595,
     596,   597,   598,   599,     0,   600,     0,     0,     0,   604,
     605,   195,     0,   196,   197,   198,   199,   200,     0,     0,
       0,     0,     0,     0,     0,   202,     0,     0,     0,     0,
     204,   205,   206,   207,   208,     0,     0,  -443,     0,     0,
       0,   211,     0,     0,     0,   212,     0,     0,   213,   214,
     215,     0,   216,     0,     0,     0,     0,     0,   219,  4645,
       0,   220,   221,     0,   222,   223,     0,     0,     0,     0,
     226,   227,   228,  4646,   230,   231,     0,   232,   233,     0,
     234,   235,     0,   237,     0,   239,   240,   241,   242,   243,
     244,     0,   245,   246,     0,   247,   248,   249,     0,   251,
       0,     0,     0,   252,     0,     0,     0,     0,   253,     0,
       0,   254,     0,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,     0,     0,
       0,   261,   262,     0,   263,     0,     0,     0,     0,     0,
     264,   265,   266,   267,   268,     0,     0,     0,     0,     0,
       0,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     275,     0,   276,   277,   278,     0,     0,   279,   280,     0,
     281,   282,   283,   284,   285,     0,     0,     0,   287,   288,
     289,   290,   291,     0,     0,   292,   293,  4647,   294,   295,
     296,   297,   298,     0,     0,     0,     0,     0,     0,     0,
       0,   302,     0,   303,     0,     0,     0,   304,     0,     0,
     306,   307,   308,     0,   309,     0,   310,     0,     0,     0,
       0,   312,     0,     0,     0,     0,     0,   315,     0,     0,
       0,   316,   317,   318,   319,  4648,     0,   320,     0,   322,
       0,     0,   323,     0,     0,     0,     0,   324,   325,     0,
       0,     0,     0,   327,     0,     0,     0,   328,   329,     0,
     330,   331,  4649,     0,     0,   332,     0,   333,     0,     0,
       0,   335,     0,     0,   336,  4650,     0,   337,   338,     0,
       0,     0,     0,     0,   339,   340,     0,   341,     0,   342,
       0,   343,   344,     0,     0,     0,     0,  -398,     0,     0,
     345,     0,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,   367,   368,   369,   370,     0,
     371,   372,     0,     0,     0,     0,   373,   374,   375,   376,
     377,   378,     0,     0,   379,   380,     0,   381,     0,   382,
       0,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,     0,   394,   395,   396,   397,
     398,     0,     0,     0,     0,   400,     0,     0,     0,   401,
       0,   402,   403,     0,   404,   405,  4651,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     409,   410,     0,     0,     0,   412,     0,   413,   414,   415,
     416,   417,   418,   419,   420,   421,     0,     0,     0,     0,
       0,   425,   426,     0,   427,     0,   428,   429,   430,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,   437,   438,     0,   439,   440,     0,     0,   441,   442,
     443,   444,   445,     0,   446,     0,     0,   448,     0,   450,
    -398,     0,   451,   452,   453,   454,   455,   456,   457,   458,
       0,     0,     0,   460,     0,     0,   462,   463,   464,  4652,
     465,     0,     0,     0,   467,   468,   469,     0,   470,     0,
     471,   472,     0,   474,   475,     0,   476,     0,     0,     0,
       0,   478,   479,   480,     0,     0,     0,     0,   482,     0,
       0,     0,     0,     0,     0,   485,     0,   487,     0,   488,
       0,     0,   491,   492,     0,     0,     0,     0,     0,   493,
     494,   495,     0,   496,     0,     0,   497,     0,     0,   498,
       0,   499,     0,   500,     0,   502,   503,   504,   505,     0,
       0,     0,   507,     0,     0,   508,   509,   510,   511,   512,
     513,     0,     0,   514,   515,   516,   517,     0,   518,   519,
       0,     0,   520,   521,   522,   523,     0,     0,   524,   525,
       0,   526,   527,   528,   529,     0,     0,     0,     0,     0,
     530,   531,     0,     0,     0,     0,   533,   534,   535,     0,
     536,   537,     0,   538,   539,     0,     0,     0,     0,     0,
     542,     0,     0,   543,     0,     0,     0,   545,   546,     0,
       0,     0,     0,     0,   547,     0,   548,     0,     0,   549,
       0,     0,     0,   550,     0,   551,   552,   553,   554,     0,
       0,  -398,     0,     0,     0,   555,   556,     0,     0,   558,
       0,   560,   561,     0,     0,   562,     0,     0,     0,     0,
     564,     0,     0,     0,   567,     0,     0,     0,     0,     0,
       0,     0,     0,   568,   569,   570,     0,     0,   571,   572,
       0,     0,     0,     0,   574,     0,   575,     0,     0,     0,
       0,     0,     0,   576,   577,     0,     0,   578,     0,   579,
       0,   580,   581,     0,     0,     0,   582,   583,   584,   585,
     586,   587,   588,   589,     0,   590,   591,   592,     0,   594,
     595,   596,   597,   598,   599,     0,   600,     0,     0,     0,
     604,   605,   195,     0,   196,   197,   198,   199,   200,     0,
       0,     0,     0,     0,     0,     0,   202,     0,     0,     0,
       0,   204,   205,   206,   207,   208,     0,     0,  -443,     0,
       0,     0,   211,     0,     0,     0,   212,     0,     0,   213,
     214,   215,     0,   216,     0,     0,     0,     0,     0,   219,
    4645,     0,   220,   221,     0,   222,   223,     0,     0,     0,
       0,   226,   227,   228,  4646,   230,   231,     0,   232,   233,
       0,   234,   235,     0,   237,     0,   239,   240,   241,   242,
     243,   244,     0,   245,   246,     0,   247,   248,   249,     0,
     251,     0,     0,     0,   252,     0,     0,     0,     0,   253,
       0,     0,   254,     0,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,     0,
       0,     0,   261,   262,     0,   263,     0,     0,     0,     0,
       0,   264,   265,   266,   267,   268,     0,     0,     0,     0,
       0,     0,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   275,     0,   276,   277,   278,     0,     0,   279,   280,
       0,   281,   282,   283,   284,   285,     0,     0,     0,   287,
     288,   289,   290,   291,     0,     0,   292,   293,  4647,   294,
     295,   296,   297,   298,     0,     0,     0,     0,     0,     0,
       0,     0,   302,     0,   303,     0,     0,     0,   304,     0,
       0,   306,   307,   308,     0,   309,     0,   310,     0,     0,
       0,     0,   312,     0,     0,     0,     0,     0,   315,     0,
       0,     0,   316,   317,   318,   319,  4648,     0,   320,     0,
     322,     0,     0,   323,     0,     0,     0,     0,   324,   325,
       0,     0,     0,     0,   327,     0,     0,     0,   328,   329,
       0,   330,   331,  4649,     0,     0,   332,     0,   333,     0,
       0,     0,   335,     0,     0,   336,  4650,     0,   337,   338,
       0,     0,     0,     0,     0,   339,   340,     0,   341,     0,
     342,     0,   343,   344,     0,     0,     0,     0,  -398,     0,
       0,   345,     0,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,   367,   368,   369,   370,
       0,   371,   372,     0,     0,     0,     0,   373,   374,   375,
     376,   377,   378,     0,     0,   379,   380,     0,   381,     0,
     382,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,     0,   394,   395,   396,
     397,   398,     0,     0,     0,     0,   400,     0,     0,     0,
     401,     0,   402,   403,     0,   404,   405,  4651,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   409,   410,     0,     0,     0,   412,     0,   413,   414,
     415,   416,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   425,   426,     0,   427,     0,   428,   429,   430,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,   437,   438,     0,   439,   440,     0,     0,   441,
     442,   443,   444,   445,     0,   446,     0,     0,   448,     0,
     450,  -398,     0,   451,   452,   453,   454,   455,   456,   457,
     458,     0,     0,     0,   460,     0,     0,   462,   463,   464,
    4652,   465,     0,     0,     0,   467,   468,   469,     0,   470,
       0,   471,   472,     0,   474,   475,     0,   476,     0,     0,
       0,     0,   478,   479,   480,     0,     0,     0,     0,   482,
       0,     0,     0,     0,     0,     0,   485,     0,   487,     0,
     488,     0,     0,   491,   492,     0,     0,     0,     0,     0,
     493,   494,   495,     0,   496,     0,     0,   497,     0,     0,
     498,     0,   499,     0,   500,     0,   502,   503,   504,   505,
       0,     0,     0,   507,     0,     0,   508,   509,   510,   511,
     512,   513,     0,     0,   514,   515,   516,   517,     0,   518,
     519,     0,     0,   520,   521,   522,   523,     0,     0,   524,
     525,     0,   526,   527,   528,   529,     0,     0,     0,     0,
       0,   530,   531,     0,     0,     0,     0,   533,   534,   535,
       0,   536,   537,     0,   538,   539,     0,     0,     0,     0,
       0,   542,     0,     0,  4894,     0,     0,     0,   545,   546,
       0,     0,     0,     0,     0,   547,     0,   548,     0,     0,
     549,     0,     0,     0,   550,     0,   551,   552,   553,   554,
       0,     0,  -398,     0,     0,     0,   555,   556,     0,     0,
     558,     0,   560,   561,     0,     0,   562,     0,     0,     0,
       0,   564,     0,     0,     0,   567,     0,     0,     0,     0,
       0,     0,     0,     0,   568,   569,   570,     0,     0,   571,
     572,     0,     0,     0,     0,   574,     0,   575,     0,     0,
       0,     0,     0,     0,   576,   577,     0,     0,   578,     0,
     579,     0,   580,   581,     0,     0,     0,   582,   583,   584,
     585,   586,   587,   588,   589,     0,   590,   591,   592,     0,
     594,   595,   596,   597,   598,   599,     0,   600,     0,     0,
       0,   604,   605,   195,     0,   196,   197,   198,   199,   200,
       0,     0,     0,     0,     0,     0,     0,   202,     0,     0,
       0,     0,   204,   205,   206,   207,   208,     0,     0,     0,
       0,     0,     0,   211,     0,     0,     0,   212,     0,     0,
     213,   214,   215,     0,   216,     0,     0,     0,     0,     0,
     219,     0,     0,   220,   221,     0,   222,   223,     0,     0,
       0,     0,   226,   227,   228,     0,   230,   231,     0,   232,
     233,     0,   234,   235,     0,   237,     0,   239,   240,   241,
     242,   243,   244,     0,   245,   246,     0,   247,   248,   249,
       0,   251,     0,     0,     0,   252,     0,     0,     0,     0,
     253,     0,     0,   254,     0,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
       0,     0,     0,   261,   262,     0,   263,     0,     0,     0,
       0,     0,   264,   265,   266,   267,   268,     0,     0,     0,
       0,     0,     0,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   275,     0,   276,   277,   278,     0,     0,   279,
     280,     0,   281,   282,   283,   284,   285,     0,     0,     0,
     287,   288,   289,   290,   291,     0,     0,   292,   293,     0,
     294,   295,   296,   297,   298,     0,     0,     0,     0,     0,
       0,     0,     0,   302,     0,   303,     0,     0,     0,   304,
       0,     0,   306,   307,   308,     0,   309,     0,   310,     0,
       0,     0,     0,   312,     0,     0,     0,     0,     0,   315,
       0,     0,     0,   316,   317,   318,   319,     0,     0,   320,
       0,   322,     0,     0,   323,     0,     0,     0,     0,   324,
     325,     0,     0,     0,     0,   327,     0,     0,     0,   328,
     329,     0,   330,   331,     0,     0,     0,   332,     0,   333,
       0,     0,     0,   335,     0,     0,   336,     0,     0,   337,
     338,     0,     0,     0,     0,     0,   339,   340,     0,   341,
       0,   342,     0,   343,   344,     0,     0,     0,     0,     0,
       0,     0,   345,     0,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,   367,   368,   369,
     370,     0,   371,   372,     0,     0,     0,     0,   373,   374,
     375,   376,   377,   378,     0,     0,   379,   380,     0,   381,
       0,   382,     0,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,     0,   394,   395,
     396,   397,   398,     0,     0,     0,     0,   400,     0,     0,
       0,   401,     0,   402,   403,     0,   404,   405,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   409,   410,     0,     0,     0,   412,     0,   413,
     414,   415,   416,   417,   418,   419,   420,   421,     0,     0,
       0,     0,     0,   425,   426,     0,   427,     0,   428,   429,
     430,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,   437,   438,     0,   439,   440,     0,     0,
     441,   442,   443,   444,   445,     0,   446,     0,     0,   448,
       0,   450,     0,     0,   451,   452,   453,   454,   455,   456,
     457,   458,     0,     0,     0,   460,     0,     0,   462,   463,
     464,     0,   465,     0,     0,     0,   467,   468,   469,     0,
     470,     0,   471,   472,     0,   474,   475,     0,   476,     0,
       0,     0,     0,   478,   479,   480,     0,     0,     0,     0,
     482,     0,     0,     0,     0,     0,     0,   485,     0,   487,
       0,   488,     0,     0,   491,   492,     0,     0,     0,     0,
       0,   493,   494,   495,     0,   496,     0,     0,   497,     0,
       0,   498,     0,   499,     0,   500,     0,   502,   503,   504,
     505,     0,     0,     0,   507,     0,     0,   508,   509,   510,
     511,   512,   513,     0,     0,   514,   515,   516,   517,     0,
     518,   519,     0,     0,   520,   521,   522,   523,     0,     0,
     524,   525,     0,   526,   527,   528,   529,     0,     0,     0,
       0,     0,   530,   531,     0,     0,     0,     0,   533,   534,
     535,     0,   536,   537,     0,   538,   539,     0,     0,     0,
       0,     0,   542,     0,     0,   543,     0,     0,     0,   545,
     546,     0,     0,     0,     0,     0,   547,     0,   548,     0,
       0,   549,     0,     0,     0,   550,     0,   551,   552,   553,
     554,     0,     0,     0,     0,     0,     0,   555,   556,     0,
       0,   558,     0,   560,   561,     0,     0,   562,     0,  3407,
    3408,     0,   564,     0,     0,  3409,   567,  3410,     0,  3411,
    3412,     0,     0,     0,     0,   568,   569,   570,     0,     0,
     571,   572,     0,     0,     0,     0,   574,  3413,   575,     0,
       0,     0,     0,     0,     0,   576,   577,     0,     0,   578,
       0,   579,     0,   580,   581,     0,     0,     0,   582,   583,
     584,   585,   586,   587,   588,   589,     0,   590,   591,   592,
       0,   594,   595,   596,   597,   598,   599,     0,   600,     0,
       0,     0,   604,   605,     0,     0,     0,  3414,     0,     0,
    3415,     0,     0,     0,     0,     0,     0,     0,  3416,     0,
       0,     0,     0,     0,  3407,  3408,     0,     0,     0,     0,
    3409,     0,  3410,     0,  3411,  3412,     0,  3417,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3413,     0,  3418,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3419,     0,  3420,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3421,  3422,  3414,     0,     0,  3415,     0,     0,     0,     0,
       0,     0,     0,  3416,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3417,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3423,     0,     0,     0,     0,     0,     0,  3418,
       0,     0,     0,     0,     0,  3424,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3425,     0,     0,  3419,     0,  3420,
       0,     0,     0,  3426,  3427,     0,  3428,     0,     0,     0,
       0,     0,     0,     0,     0,  3421,  3422,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3429,  3430,  3431,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3423,     0,     0,
       0,     0,  3432,  3433,  3434,     0,     0,     0,     0,  3435,
    3424,     0,  3436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3425,
    3437,  3438,     0,     0,     0,     0,     0,     0,  3426,  3427,
       0,  3428,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3439,  3440,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3429,  3430,
    3431,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3441,     0,     0,     0,     0,     0,     0,  3432,  3433,  3434,
       0,     0,     0,     0,  3435,     0,     0,  3436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3437,  3438,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3442,     0,     0,     0,  3443,     0,     0,  3439,
    3440,     0,     0,     0,     0,     0,     0,     0,  3444,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3441,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3445,     0,
       0,  3446,     0,     0,  3447,  3448,  3449,  3450,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3442,     0,     0,
       0,  3443,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3444,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3451,  3452,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3453,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3445,     0,     0,  3446,     0,     0,  3447,
    3448,  3449,  3450,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3451,  3452,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4968,     0,
    3453
};

static const yytype_int16 yycheck[] =
{
       6,     0,    43,     0,   985,  1022,     0,   773,   758,   759,
    1343,   978,    18,   986,  1430,   980,    22,   112,  1343,  1293,
     112,  1059,   772,   976,   802,    31,  1761,  2217,  2334,   841,
    1560,  1048,    38,  1505,     6,    41,    58,    43,    55,  1895,
      46,  1266,  1267,  2145,  2146,  1059,    52,    53,  1725,  1095,
    1804,  2687,  1192,  1525,  2109,  2178,    21,  2447,  2181,  2182,
     999,    19,    61,   999,    61,  1591,  1725,    57,    94,    58,
    1295,  1543,    30,  1678,    39,  1215,  1480,    35,  1033,  2777,
    2386,  1286,  1307,  1308,  1309,  2181,  2182,  1312,    94,  2908,
    2689,  1505,    21,  1480,  1140,  2051,  2052,  1697,  1799,  1141,
    1839,  2936,  2471,  2059,  2060,  2061,  3318,  2337,  2337,  1064,
      39,  2501,  2337,  2473,  3365,  3455,   115,  2337,  2728,  2415,
    2598,  1507,  2479,   177,  2602,  1511,  1351,   967,  2345,  3006,
     908,   909,   910,  3473,  3474,   981,   142,  2163,    21,  1525,
     918,   617,   618,   770,  4046,  2589,  2590,  2591,  2200,  3006,
    1878,  1537,  1490,  3134,  4056,  2166,    39,  2958,   631,   632,
      22,  2605,  2522,  2188,  4016,   171,    52,   173,  1896,   930,
     176,   177,   178,   179,  1902,   115,  2488,    59,  2230,  2231,
    1908,   125,    73,    73,    21,    11,  2630,   193,    35,  2191,
    2634,   144,  1147,    21,   160,    71,    18,    19,    18,    19,
    2158,   173,    48,    21,   176,   125,  2650,  2651,  2683,  2904,
      22,  2334,  2656,    18,    19,  1259,  1260,  1261,    19,     9,
      31,    18,    19,    18,    19,    78,  1270,  1194,  2672,  2673,
      18,    19,    62,    21,  3958,    68,   162,  2681,   194,    29,
     103,    18,    19,  2398,    34,    18,    19,  1214,   176,   197,
     125,   197,   109,    18,    19,    18,    19,  1301,   239,   235,
    1304,   163,    71,  2386,    67,    18,    19,  3364,   249,   131,
      21,   186,  3806,   176,   103,  2131,    48,  3983,  1322,  1323,
     130,   156,  1326,   179,  2722,   259,   237,   194,    52,  1627,
      70,   125,  2770,     5,   176,    18,    19,   158,   180,   327,
    1344,  1345,   643,   644,   645,  1349,  1350,   648,   649,   197,
    3649,   652,   194,   654,   655,   656,    57,   373,  4188,   156,
      64,   112,   156,   160,   115,   388,   192,    18,    19,   222,
     142,   465,   377,  3427,  3428,  1037,  1038,  3431,   456,   160,
     125,   783,  3908,    71,   473,    35,   156,   125,   316,   212,
     231,   130,   572,  2989,   430,  2715,  3450,    23,   246,   373,
     160,   501,   316,  3923,   407,   231,  3926,   179,  3169,    35,
     194,   156,   433,   493,  1135,    18,    19,    18,    19,   160,
    3631,   193,   501,    49,   380,    18,    19,   728,   258,    23,
     388,   241,    77,    12,    74,    61,    62,   401,   583,   189,
    2790,   125,   197,  2881,   278,  4616,   482,   125,  4619,   160,
     186,   572,   393,   231,    18,    19,   572,    21,  4685,   370,
     230,   246,  1172,   548,   197,   111,   128,    61,    62,  4416,
      21,   194,   378,  1183,   537,    18,    19,   165,   162,    18,
      19,   282,   592,   197,    18,    19,   450,  1439,   156,   331,
     246,   235,    18,    19,  2310,  2510,  2511,  1449,    35,  2937,
      18,    19,  2488,   572,  2320,   615,   572,   245,   571,  3901,
    1282,  3156,  3157,    18,    19,   156,   372,    18,    19,   263,
     249,  3166,  3167,    74,  1296,    62,   156,   572,  4475,  1456,
     266,  1458,    61,    62,  1489,   249,  1491,  1492,    18,    19,
     156,   429,  3934,   457,   629,    37,   369,   626,    18,    19,
     156,  1506,    73,   389,  1509,  1510,  2876,  1512,   738,    73,
    1515,  1516,  1517,  1518,    18,    19,   429,  1522,    18,    19,
     371,  1007,  1527,    18,    19,   156,   502,  1532,  1533,  1534,
    1535,  1536,   293,   511,    73,  1540,  1541,   429,    70,   235,
    2406,  1546,  1547,  1548,  1549,   235,  1551,  1552,   743,  1554,
      18,    19,  1557,  1036,   156,   387,    77,   387,   390,   160,
     390,   625,   156,  4279,   130,   456,   637,   262,   739,   231,
     389,  1359,   387,   361,   470,   390,   742,  1063,  4799,  2818,
     387,   293,   387,   390,  1440,   390,   547,   150,  3810,   387,
     433,   471,   390,   743,  1450,   603,   682,   725,   482,   743,
    1388,   617,   618,  1459,   387,   744,   659,   390,   738,   625,
    2476,   627,   387,  3717,   387,   390,   316,   390,   369,  1390,
    1391,  4483,   738,  4900,   387,   158,   642,   390,   456,  1115,
     646,    18,    19,  4203,   235,   651,   700,   643,   372,  1125,
     543,    23,  1690,   738,   372,   276,   609,  1674,    18,    19,
    1102,   389,  1700,    35,   387,   493,   285,   390,  4234,   198,
     141,   150,   263,  3042,  4544,   493,  1690,    49,   652,   630,
     743,   502,   433,   739,   150,   613,   547,   219,  2442,    61,
      62,  3163,   404,   589,   700,   721,   387,   441,   743,   390,
     706,  3007,   502,  3302,   758,  3304,   470,   536,   511,   605,
     738,  3406,   766,   767,   720,   721,   730,  2189,  3328,  2191,
    4059,   502,  3633,  1948,   639,  1066,  4260,  2917,  4580,   631,
     637,  1871,   773,    37,  2889,  1875,  2692,   194,  3176,  3836,
    1880,   717,   595,   749,   387,  3114,   387,   390,   614,   390,
    2504,   262,   758,  4477,   387,  4461,  4462,   390,   739,   609,
     766,   767,  2166,   543,   770,  1990,  2792,  2502,  3212,  1909,
    1910,   628,   583,   699,  3469,   781,   782,  3006,   744,  2166,
    3874,   787,   583,   387,   241,   576,   390,   743,   579,  2389,
     743,   637,  3886,   623,  3238,   743,  3240,   743,   763,   743,
    3894,   721,  2479,   825,   387,   617,   618,   390,   387,   637,
    3254,   390,  3256,   387,   640,   743,   390,  3292,  2348,   637,
    2479,   387,  2780,  2848,   390,  2850,   648,  3271,   648,   387,
     609,  3925,   390,   696,   763,   841,   825,  2123,  2063,  2125,
     743,  4693,   387,   648,  3156,   390,   387,   738,   738,   390,
     615,   648,  2854,   648,  2214,   743,   951,   743,   912,   951,
     648,   743,  3663,   739,  2224,   637,   741,   387,   658,  1824,
     390,   648,    18,    19,   345,   648,   738,   387,    18,    19,
     390,  1583,   743,   648,  3007,   648,   981,    18,    19,   981,
    1934,   738,   643,   387,  2254,   648,   390,   387,    18,    19,
     390,  2234,   387,  1681,   741,   390,   912,   741,   914,  2234,
     738,   744,   911,  1725,   911,   219,   970,   739,   743,   743,
     738,   743,  2282,   744,  2328,   648,  2452,   717,   748,   387,
     739,   741,   390,   723,   739,   601,    18,    19,   743,   993,
    3130,  2328,     4,   739,   744,   944,   743,   944,   743,  1922,
     956,   739,   637,   952,  1656,   743,   741,   648,  2002,    21,
     626,   647,  2006,   744,   970,   991,   739,   601,  4308,   781,
     976,   656,   657,  4679,   743,  3030,   739,    39,   743,  3664,
     986,    18,    19,  3343,  2028,   991,   985,   993,   985,   995,
     743,   985,   583,  3004,  1000,   785,   575,  1003,  1004,   456,
    2338,  1007,   563,  1057,    52,   648,  1032,   648,  1014,   563,
     387,    81,   952,   390,   635,   648,   739,  1023,  1024,  1025,
     743,   543,  1028,    65,   547,  1031,  1032,   387,  1034,  1035,
     390,  3391,  1004,   741,   563,   743,   493,  2453,  1092,  1045,
     572,  3860,   694,  3741,   648,  1051,  1052,  1053,   739,  1055,
    1056,  1057,   743,   609,  1060,  1061,  1062,  1063,  1084,  1065,
     741,   100,   743,  1069,  1814,   648,   200,  1845,  1033,   648,
    3905,   741,   738,   743,   648,  1081,   638,   285,  1084,  4060,
    1052,   634,   648,  3693,  1056,   741,  1092,   743,  1060,  1095,
     648,   156,  1853,  1099,  1100,   741,   739,   743,  4950,  1064,
     743,    65,   743,   648,  1033,  2100,   739,   648,  1114,  1115,
     743,    64,  3989,  1139,   275,    18,    19,   174,  1124,  1125,
     741,  1127,  1128,    18,    19,    18,    19,  5029,   648,    33,
    1156,  1096,  3989,  1139,  1140,  1064,  4047,  3189,   648,  1193,
      18,    19,  1148,  1184,   373,   656,   657,    18,    19,   741,
    1156,   743,  2107,  1626,   648,   634,   739,   741,   648,   743,
     743,    18,    19,   648,  1170,  1638,   378,  1096,   634,   743,
      18,    19,  1178,   739,    22,   204,   292,   743,  1184,   293,
     637,   739,  1147,  3400,  3401,   743,   144,  1193,  2000,   176,
     648,  2186,  2145,  2146,   378,  1007,    18,    19,   743,   238,
      18,    19,   743,  3813,   275,  3815,  3816,  1834,  3680,  3681,
    3570,   276,   407,  1096,   256,  1842,  2211,    47,  1147,   258,
     204,   402,    22,   743,   111,   160,   153,   255,   139,   601,
    1706,  2226,   271,   743,  1240,  1241,   563,   164,   380,   566,
     193,   387,   122,  4583,   390,   369,    85,   387,   191,   743,
     390,  1063,    77,   743,    19,    71,   387,   612,   743,   390,
      21,   732,   733,   734,   735,  2260,  2261,   387,   572,    21,
     390,   648,  1367,  2268,  3329,  1367,  1282,  3332,  1068,    87,
    3649,   738,   635,   131,   235,   743,   420,    48,   648,  2129,
    1296,  2577,   256,  1292,   197,  1292,  1313,    44,   198,  2337,
      65,  3658,  1114,  1115,  2720,   387,    18,    19,   390,  2155,
    2156,   122,  1124,  1125,   566,  1127,   355,  3507,  3508,   433,
     369,   369,  3618,  2337,   448,   543,  2265,  2266,   212,  2265,
    2266,   131,  3358,  1387,  4585,  3695,  4430,  1343,  4432,   455,
    3784,  3571,  3571,  3299,  4684,   249,  3571,  3303,  2343,  2387,
     387,  3571,  1693,   390,   709,  1409,  1373,   276,  1375,  1376,
    1377,  1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,   158,
    3395,   275,  1398,  2387,   258,   635,   641,  1431,   333,  2425,
    2422,  1387,  2854,   743,  1857,   160,   216,  1393,  2860,  1415,
     743,   422,  1398,   287,    40,   122,  2621,  3875,   606,   583,
    4612,   365,  3103,  1409,    11,   433,   624,  4242,   465,  1415,
     290,  2941,  1466,  2126,  3149,    18,    19,  3017,   488,   194,
    3780,   332,   470,  2648,   123,  1431,   108,  2567,  2568,  2703,
    2704,  2571,   566,  3168,    18,    19,  2482,   262,   477,  2481,
    1439,  4781,   429,   509,  3145,  3568,  3569,  3186,   100,  3809,
    1449,   203,  3052,   501,   293,    26,   350,  1463,  3818,   386,
    1466,   188,   243,  3823,   659,   418,  3071,  2939,  2940,   388,
     413,   197,  3568,  3569,   635,  3203,  3204,  1039,  2445,   290,
       9,   353,   511,   743,   387,   167,   535,   390,  2201,   238,
    2203,   256,   387,   373,   387,   390,   401,   390,    13,  2212,
     400,   643,   648,  2708,   388,    21,   276,  2867,   648,   387,
     549,   553,   390,    84,   743,  2228,   387,   648,   200,   390,
     636,    53,   271,  1564,   487,  2939,   209,   511,   648,   643,
     387,   743,    64,   390,    18,    19,  2249,   141,   442,   387,
    2253,   607,   390,   501,   190,  2905,    18,    19,   247,  4148,
    2505,  2506,  2507,  2913,  2940,   586,   585,   738,  2918,   743,
     167,   122,   373,   290,   635,   387,   648,   502,   390,   387,
     635,   535,   390,   389,  3046,    18,    19,  1567,   465,  1585,
    1586,   370,    18,    19,  3184,   651,   238,   158,   122,   553,
    3116,  4227,  4228,   200,   122,  1601,  2563,   743,  4417,   282,
    3004,  2379,   615,   743,   209,  3359,   258,  3361,   355,  3915,
     510,   648,   743,    18,    19,   570,  3845,  3004,   388,   271,
     428,    18,    19,   743,   493,   140,   613,   188,   125,  4969,
    1636,    18,    19,  1639,  1640,  1641,  2680,   363,    18,    19,
     156,   596,   139,  1649,   571,   707,   373,   704,   705,   543,
     370,   604,  1658,   235,   188,  1661,   486,   186,  1680,   564,
     188,   743,  1679,   503,    25,  1682,   237,  2479,  1640,  1641,
    4368,   401,  1726,   127,  4118,   387,   741,   282,   390,  1685,
     644,   263,   249,  1689,   603,  2971,    18,    19,  2974,  2975,
    4059,  1680,  2978,  2979,  2980,  2981,  2982,  2983,  2984,  2985,
    1706,   763,  2988,   355,  2990,   272,   743,    18,    19,    18,
      19,  1765,   653,   122,   594,   231,   125,   566,  1724,  1725,
    1726,   783,  4200,   277,    18,    19,   280,   502,   477,   290,
     743,  4550,   243,    13,  2687,  1741,   435,   401,   420,   493,
    1746,   345,   447,  1769,  1770,   648,    18,    19,  1754,    77,
     282,  1757,   323,   648,   231,   648,   290,  1811,   547,  1765,
    3989,    74,   290,  1769,  1770,    18,    19,   592,   637,   609,
     648,   282,  1826,   637,  1586,  3375,   243,   648,  2528,   188,
    2818,    13,   563,   594,   387,   566,  4396,   390,   553,  1601,
     615,   648,  3915,  1799,   248,  1801,  3549,  1803,  3131,   370,
     648,  3134,   816,   387,  2818,  1811,   390,   168,    13,  3134,
     219,  3564,   373,   420,  1803,   498,   293,   197,  4464,   401,
    1826,    13,   374,  4469,  1636,   477,   648,   547,  1834,   534,
     648,   656,   657,   603,   564,   332,  1842,  1863,  3794,   373,
    3796,   630,   714,   715,   716,   373,   739,   186,   743,   128,
    1876,   550,  1858,  1859,  1860,  1861,  1862,  1863,  1864,  1824,
     140,   739,  1827,   397,  3987,  3988,  1872,   594,  1874,   738,
    1876,   885,   743,  1879,  4649,  4650,   430,  1689,  4514,   743,
     193,   290,   739,   637,   566,   401,  1858,  1859,  1860,     0,
    1862,  3987,  3988,   498,  1706,  1824,  3496,   549,  1827,  1921,
      18,    19,  1874,   387,  4273,   587,   390,  1879,   140,   237,
     630,  2949,  1724,  2691,   127,   387,    18,    19,   390,    19,
     615,   743,   235,   681,  4736,   743,   533,   266,   738,  1741,
     612,  4577,  1921,   485,   692,   140,   648,   367,    18,    19,
     456,   220,  1754,   957,   387,  1757,   628,   390,   140,  4004,
     263,   387,   429,  3553,   390,   194,  2951,    18,    19,    18,
      19,    18,    19,    13,   373,  2678,  4602,   415,  3006,   739,
     653,  1033,   194,  2949,   300,   301,   547,   493,    18,    19,
     587,  3658,   387,  1045,   738,   390,   416,  1799,   156,   672,
     387,  3029,  3006,   390,  2000,  2001,    18,    19,   608,  3658,
     387,  3606,  1064,   390,   639,   167,  2719,   387,   637,   246,
     390,    18,    19,  2067,   293,    18,    19,  3012,  3013,  3014,
    3015,   160,  2735,  2736,  2737,  2738,    74,    18,    19,   239,
     369,   743,  3365,   594,  1096,   248,   364,   276,   200,   249,
    1102,   141,   370,   615,   739,   648,   285,   637,   743,  1861,
    3088,   138,  1864,  3029,  1116,   387,  2110,  3587,   390,   630,
     594,  2067,  3108,   285,   648,   480,   594,  3231,    18,    19,
      18,    19,    18,    19,    18,    19,   387,  3032,   387,   390,
    3834,   390,  2088,   138,  2138,  1147,  3840,   739,   401,   637,
     140,   160,   615,   387,  3847,  2136,   390,  4909,  4910,  3852,
    4490,  3147,  3855,   212,  2110,   418,  4161,   654,   743,  3635,
    2823,   439,    18,    19,   743,   387,    18,    19,   390,   445,
     446,   637,  4897,  4898,    18,    19,   730,   731,   732,   733,
     734,   735,  2138,    21,   387,   563,   739,   390,   566,  2145,
    2146,   228,  2107,  3110,   433,   193,  3085,  3193,  3084,   388,
    4786,  3484,  2158,   743,  4344,   739,  4346,  2163,   623,  3484,
      48,   626,   216,   216,   648,   454,    18,    19,  2222,  2210,
     158,   743,   744,   228,  2163,   681,   648,  2183,  2107,    19,
      18,    19,  2188,   393,   612,   594,   692,   235,  2194,  2195,
    2196,  2197,  2198,    18,    19,   743,  2202,   744,  2204,  2596,
      18,    19,    18,    19,  2258,   648,  2603,   496,  2214,   263,
     263,  2217,   648,  2219,  2220,   263,  2222,  2223,  2224,   547,
     743,   744,   738,  2229,   681,   741,  2232,   743,  2234,    18,
      19,  3908,  2190,  2239,   564,   692,  2242,  2243,    18,    19,
       9,  2199,   681,   648,  4100,   345,  2252,  2205,  2254,   237,
    3414,   648,  2258,   692,  4007,   739,  3933,  2970,   420,  2972,
    2973,   648,    31,  2976,  2977,  4625,  2272,   739,   648,   387,
    4576,   599,   390,  2986,  2987,  2233,  2282,  2283,  2991,  2237,
      18,    19,  3446,  3447,   212,   387,  2244,  2245,   390,    18,
      19,  4045,  4288,   137,   137,  3073,   739,  4293,  3631,    18,
      19,   141,   630,   739,  4406,    86,   731,   387,   152,   152,
     390,   230,    18,    19,   739,  2341,   648,  4623,  4624,    18,
      19,   738,    77,  2329,   105,   742,   387,  2333,   387,   390,
     387,   390,   125,   390,   739,  2341,   493,   648,    93,   648,
     366,   367,   739,  2349,  2350,  2399,  2158,   387,  2370,  2348,
     390,    77,   739,   167,   648,   148,  2378,    18,    19,  2376,
    2377,    18,    19,  2380,   603,   387,  2392,   227,   390,   229,
     418,   533,   125,  2372,   738,  2372,   648,  2383,  2350,  3604,
     387,  2370,   370,   390,   387,   138,  2392,   390,  3156,  2378,
     853,   127,  3864,  2399,   187,   648,   387,  3165,   731,   390,
      38,    18,    19,   744,   504,   505,   739,   739,    46,  2415,
     873,    18,    19,  4409,  2420,    19,    12,  4413,  2424,  2425,
     668,    32,   670,   886,   887,   587,    61,    62,   739,   583,
     739,  2243,   158,  4389,  4794,  3709,    71,   387,   185,   387,
     390,   387,   390,   387,   390,   739,   390,   235,   108,  2455,
     122,   234,   235,  4576,   739,    26,  2462,  2463,   743,   230,
    2272,  3735,  3736,   620,   621,  2487,   739,   739,    79,  4465,
     743,   738,  2471,  2479,  4470,   228,  2482,   744,   261,  4009,
     637,   387,  2488,  2489,   390,   387,   739,  3761,   390,  2488,
    2531,  2488,   212,   387,   679,  3208,   390,   682,  2487,  2488,
    4623,  4624,   687,   320,   321,   345,   564,   692,   325,   326,
     265,   237,   108,    84,   738,  3927,   188,  2329,  3930,  3931,
     744,  2333,  3747,   793,   794,  2531,   796,  4344,   798,  4346,
     648,   127,  2538,  3571,   637,   387,   197,   640,   390,   481,
    2505,  2506,  2507,   154,  2598,   456,   648,   219,  2602,   387,
     739,   235,   390,   212,   743,  3550,  3551,  3571,   566,   547,
      12,   221,   387,  2569,  2570,   390,   739,  3707,   648,   387,
     743,   387,   390,  2579,   390,   212,  2505,  2506,  2507,   179,
     739,   738,   667,   668,   743,   670,   739,   648,   343,   648,
     743,   648,  2598,   739,    18,    19,  2602,   743,   387,  1661,
     717,   390,   739,   564,   200,   135,   743,   387,   648,  2626,
     390,  4083,  4084,  3659,   369,   739,   739,   212,   290,   743,
     743,   739,   564,   718,   719,   419,   648,   569,   728,   729,
     730,   731,   732,   733,   734,   735,    23,   739,   364,   656,
     657,   648,   630,  2455,   370,   648,   481,   243,    35,   387,
    2462,  2463,   390,   654,   738,   739,   739,   648,   387,   739,
     743,   390,    49,   385,   504,   505,   237,    13,   387,   739,
     612,   390,   738,   743,    61,    62,   431,  2683,   739,   739,
     739,   387,   739,   743,   390,   563,   628,   378,   387,   381,
     286,   390,   739,  1755,  1756,  2712,   743,  2714,   648,   739,
     648,   373,   648,  2709,   648,    56,   197,  3993,  3994,  3995,
    3996,   246,   654,   439,   739,    66,  2770,   739,   743,   739,
     739,   231,  4055,   743,   743,    76,   387,  4060,   194,   390,
     387,  3698,   739,   390,   394,  4060,   739,   197,  3705,    90,
      91,    92,   648,   739,   404,   739,   648,   743,   739,   743,
      33,   411,   323,   493,   648,   106,   739,  2569,  2570,   739,
     743,   501,  1824,   743,  2770,  1827,   366,   367,   122,  3742,
     387,   125,   372,   390,  2780,   739,   246,   739,   533,   743,
     387,   743,   621,   390,   150,   151,  2792,  2793,  2794,   739,
    2844,   739,   103,   739,   140,   739,   648,   493,  4023,   370,
    3513,   501,   739,  2792,   415,   501,   743,  3845,  2247,  2248,
     648,   122,   458,   459,   460,   461,   462,   463,   464,   378,
     103,   547,    59,   648,   420,   739,   437,  2881,   501,   743,
     648,  3845,   648,   739,   188,   212,   739,   739,  2844,   122,
     743,     7,  2848,   739,  2850,   739,  3658,   743,   739,   744,
    2856,   743,   743,  4588,  2860,   515,   100,   743,   739,   648,
      26,  2867,   743,   738,  2870,   219,    96,   478,   648,    12,
    3835,  2265,  2266,   599,   220,  2881,   575,   188,   572,  2885,
     620,   621,  2936,  2937,  4987,  4988,    13,   739,   728,   729,
     730,   731,   732,   733,   734,   735,   738,   637,  3648,  2905,
      48,   739,   739,   499,   630,   188,   743,  2913,   738,  3882,
     648,  2917,  2918,   739,   739,   122,    43,   743,    84,   648,
    3893,   739,   594,   739,   620,   621,   738,  2933,   539,   648,
    2936,  2937,   141,   739,   245,   738,   290,   743,   738,   176,
     739,   637,   648,   180,   743,  1330,  1331,  1906,  1907,   648,
     739,  3989,   612,   738,  3008,   156,   738,   194,   744,   739,
    3055,  2967,   245,  3055,   738,   108,   738,    94,   564,   739,
     566,    98,   738,   743,   738,  3989,   547,  3031,   144,   290,
      21,   188,   738,   334,   127,   156,    27,   648,   738,   589,
     738,   648,  4266,   738,   238,  4041,   738,   141,   738,   738,
     351,   739,  3008,   738,   600,   605,   738,   290,   197,   739,
     739,   122,   219,   743,   258,   738,   612,    21,   739,   373,
     739,  4067,   743,   738,   738,  3031,  2088,   271,    77,   738,
      71,   648,    33,   739,    75,  3041,    77,   738,  3044,   111,
    3046,   648,   738,  3042,    93,  2107,   739,  3046,   738,  3046,
     743,   739,  3051,  3052,    64,   743,   199,   738,  3057,   630,
     738,  2123,   373,  2125,    74,  2127,  2128,  3032,  2130,   739,
    3783,   237,   738,   743,   738,  3081,   122,   188,  3077,    89,
    3077,   739,   739,   290,   125,   134,   397,   739,   741,   739,
     373,   743,   235,   743,   331,   739,   100,  3103,   738,   743,
    3126,  3107,  3108,  3032,   120,    48,   739,   738,   738,  3115,
     743,   355,   708,  2175,   397,  3114,   227,  2179,   229,   739,
    3126,  2933,   739,   743,  3130,  3131,   253,   739,  3134,   739,
     738,   743,   739,   743,   378,  3134,   345,  3134,   489,  3145,
     141,  3147,   188,   286,  2206,  2207,  2208,  2209,   738,   738,
    3156,  3157,   156,  3223,   739,   738,   160,   323,   743,  3165,
    3166,  3167,   203,  3233,   742,   739,   373,  3156,  3157,   743,
     612,   739,   738,   219,  2236,   743,  3165,  3166,  3167,   290,
     738,   527,   528,   193,   530,   531,   532,  3193,   192,   199,
     194,   738,   429,   738,   738,   122,  4169,  4170,   125,  4172,
     551,   345,   739,   549,   370,   332,   743,  4754,   212,   738,
     226,   738,   738,   217,   601,  4180,   265,   568,   276,   739,
     738,   738,   263,   743,   738,   235,   738,   231,   293,  3041,
     738,   738,  3044,   477,   238,   622,   623,    37,   738,   738,
     594,   738,   246,    37,   290,   738,   738,   390,   249,   738,
     738,   738,  4585,   263,   258,   738,   738,   738,   738,   738,
     738,   188,   373,    21,   738,   738,   738,   271,   160,   396,
     738,   738,   276,   738,   275,   738,   738,   738,   384,   738,
     738,   285,   738,   594,   738,   451,  3292,   738,   738,   738,
     738,  3103,   219,   738,   343,   504,   505,   738,  4714,   171,
     744,   533,  3308,  3115,   519,   549,  3323,   193,   709,     7,
    3316,   594,  3318,   141,   743,   115,   744,   366,   367,   335,
     369,   115,   122,   339,   378,   366,   367,   373,   122,   709,
     346,   372,   563,  3145,   615,   516,   743,   378,  4885,    50,
    3410,   282,   100,    30,   345,   287,   743,   583,   743,   743,
     487,   355,  3358,    71,  3360,   572,   499,   273,  4325,  3365,
     504,   505,    27,   290,   743,   366,   367,   743,   658,  3358,
     742,   615,   743,   166,   378,  3445,   519,   418,   738,   179,
     744,   547,   431,  3453,   388,   179,   697,   594,   188,  3395,
    3460,   518,   194,  3399,   188,   563,  2458,  4944,   156,  4946,
     166,   543,   160,   141,   543,   287,    71,   157,   418,   743,
      75,   427,    77,    88,   697,  4962,   743,   194,    21,   219,
     743,   564,   379,   566,  4419,   219,   569,   559,  4401,    71,
    4403,  4404,  4706,   560,   646,    13,   194,   100,   300,   301,
     634,   442,   739,  2505,  2506,  2507,   373,   739,   140,    10,
     743,   739,   739,  4406,   212,   744,   497,   600,  4431,   217,
     125,   604,   739,   739,   630,  3471,   739,  5014,  5015,   612,
     739,  2533,   739,   477,   739,   491,   522,   502,  3484,   136,
     238,  3487,  3488,   594,   533,   156,    26,   739,   246,   654,
     290,   726,    48,   726,   160,   743,   290,   501,   160,   637,
     258,  3507,  3508,   504,   505,  3511,   547,   160,   160,   519,
    4784,   654,   160,   271,   160,  2577,   517,   345,   276,   728,
     729,   730,   731,   732,   733,   734,   735,   285,   160,   404,
     739,  3537,   572,   743,  3540,    21,  4531,    77,    87,  4534,
    4535,  4536,  4537,  3549,    84,   549,   249,   316,   594,   125,
       7,   738,   110,    39,   583,   401,   356,   158,  3564,    74,
    3566,  4514,   356,   604,  4277,   708,   401,   401,   368,    55,
      56,   583,   372,   373,    80,   238,    82,  3583,   372,   373,
     261,   136,   141,   445,   446,  3591,   730,   731,   732,   733,
     734,   735,   261,   401,   604,   258,   401,   355,   263,   603,
     136,    48,   401,   401,   401,   401,   619,   345,   271,   743,
     614,   615,  3618,    64,   619,   743,   632,    21,  4613,   125,
     378,   501,   710,    74,  4957,  3631,  4621,  4622,   492,   628,
     388,   635,  4957,   637,   650,  4630,   738,   177,    89,   738,
     743,   739,   148,   610,   184,  4411,    57,   448,  4981,  4602,
    3649,   171,  3658,  3659,   378,   717,  4981,     7,  3664,   111,
      26,   378,   524,   525,   526,   706,   614,   594,  4685,     7,
    4383,  5004,   592,   200,   228,  3664,   504,   505,   738,  5004,
     275,   187,   743,    35,   192,   744,   742,   287,   287,   287,
     287,   287,   355,   287,   698,  5028,   100,   237,   743,   743,
     160,   366,   367,  5028,   378,  2767,   583,   372,   236,   635,
     743,    77,   743,   378,   583,   378,   743,   401,    84,   477,
     583,    35,    13,   743,   160,   210,   197,   728,   729,   730,
     731,   732,   733,   734,   735,   739,   197,   741,   378,   743,
     583,   583,   193,   501,   748,  2807,   456,   433,   199,   194,
     255,   744,   156,   418,   744,  2817,   160,  2819,  2820,  2821,
    2822,   744,  2824,  2825,   744,   744,   504,   505,   743,   249,
     732,  3583,   572,  4539,   252,   561,   576,   194,   572,   579,
     181,   514,   576,   323,   235,   579,   345,   743,    60,   589,
     194,   549,   158,   405,   594,   589,   122,   597,   194,   125,
     594,   739,   739,   597,  3810,   739,   158,   739,   212,   739,
     162,   177,   263,   217,   477,   739,   739,   197,   184,   731,
    2882,  3875,   739,   738,   364,   743,   739,   735,   739,  3870,
     370,  2893,   497,  4786,   238,  4548,   739,   739,   739,   743,
     739,  3847,   246,  3849,   158,   603,  3852,   743,   162,  3855,
     202,  3905,   739,   743,   258,   739,   739,   615,  3864,   141,
     690,   402,   188,   744,   572,   744,   744,   271,   739,  3875,
     222,   237,   276,   743,   404,  3226,   572,   635,   745,   637,
     404,   285,   547,  4900,   572,   160,   549,   572,   202,   572,
     126,   743,   503,   219,  3900,   141,   744,   108,    35,  3905,
     728,   729,   730,   731,   732,   733,   734,   735,   222,  2971,
     156,   739,  2974,  2975,   263,   263,  2978,  2979,  2980,  2981,
    2982,  2983,  2984,  2985,   263,    62,  2988,   738,  2990,  4902,
     730,   731,  3938,  3939,   440,   287,   730,   731,   738,   604,
     698,   403,   598,   707,   738,   504,   505,   378,   673,   249,
     401,   355,   615,  3959,   673,   160,   167,   323,   160,   160,
     160,   160,   160,   160,   290,   160,   160,   418,   160,   160,
    3032,   160,   160,   287,   378,   112,   160,  3983,   115,   160,
     738,   739,   160,   741,   388,   743,   123,  3959,   160,   200,
     748,   729,   730,   731,   732,   733,   734,   735,   364,   160,
     160,  4007,   160,  5020,   370,   160,   160,   547,   160,   160,
    4009,   141,   160,  4019,   160,   160,   160,   160,   160,   709,
      27,    28,   642,   286,   235,   654,   465,   378,   743,   738,
      21,   383,  5049,   738,   738,  4041,    27,    28,   572,   572,
    4806,   706,   744,   572,   141,  5026,   583,   373,   655,  4055,
     744,   583,   743,   385,  4060,  4061,    63,  3408,  3409,   738,
    4059,  4067,  3413,   345,   197,   738,   738,   419,   519,   383,
      77,   212,    63,   477,   725,   286,    83,    84,   433,   743,
      87,   197,   428,    77,   739,   743,    77,  4093,  3900,   615,
     630,   443,    83,    84,   336,   141,    87,   501,   739,   345,
    3451,   154,   739,   739,   111,   419,  3457,  3458,  3459,   245,
     245,  3462,   739,   744,   739,   739,   468,   111,   125,   249,
     111,   739,   129,   260,   156,   744,  3938,   555,   738,   443,
     738,    12,  3194,   738,   125,   456,   160,   406,   129,    73,
     533,   533,   533,   533,  4150,   549,  4200,   669,   533,   160,
     161,   158,   249,   604,   468,   342,   642,   492,   738,   160,
     512,   263,   263,   738,   158,   156,   615,   158,   592,   728,
     729,   730,   731,   732,   733,   734,   735,   743,   564,   637,
     739,   547,  4188,   564,   583,   186,  4192,   373,  4242,   583,
     201,   543,   743,   451,  4200,   378,   378,   739,   512,   603,
     201,   739,   212,   214,   415,   473,   285,  4019,   743,   420,
      12,   615,   160,   214,   547,   345,   732,   354,   743,   738,
     357,   738,   504,   505,   710,   738,   738,   738,   235,   543,
     643,   635,   385,   637,   738,   242,  4242,   738,   738,   231,
     231,   235,   282,   254,   235,   738,   160,   197,   345,   563,
     739,   242,   566,   743,   258,   262,   267,  5007,   504,   505,
     739,   258,   739,   749,   630,   266,   267,   739,   594,  3331,
     739,   262,   391,  4279,  4273,  4281,  4282,   763,    48,   217,
     103,   373,   738,   294,   275,  3347,    62,  5000,   499,   247,
     738,   247,   738,   294,   698,   739,   739,   739,   739,   345,
      48,  4307,   495,   738,   688,   743,   739,  5020,   519,   688,
    4316,   743,   739,    48,   160,   322,   802,   738,   738,   228,
     103,   807,   245,  4329,   160,   278,   744,   743,   322,   111,
     111,   322,   738,   340,   401,   739,  5049,   741,  4344,   743,
    4346,   738,   414,   738,   748,   125,   340,   125,   359,   340,
     738,   837,   566,   564,   730,   738,   738,   583,   569,   384,
     378,   739,   363,   738,   378,   433,   516,   583,   210,   378,
     364,   269,   509,   246,   504,   505,   587,   739,   743,   197,
     744,   748,   743,   258,   258,   748,  4770,   258,   395,   600,
     748,   698,   404,   373,   739,   739,   637,   404,   739,   739,
    4406,   612,   739,   401,   395,   197,    48,   504,   505,   277,
     401,    48,   642,   404,    48,   153,   417,   628,    48,   388,
     732,   738,   908,   909,   910,   911,   125,    35,  4434,    35,
     626,   263,   918,   609,   203,   263,   372,    35,   373,   738,
     373,   373,   579,   654,   416,  4829,   728,   729,   730,   731,
     732,   733,   734,   735,   378,  4461,  4462,   739,   504,   505,
    4844,   378,    77,    21,   744,   456,   739,   738,   516,   488,
     607,   175,   739,  4857,   285,   385,   483,   743,   210,   147,
     710,  3543,   728,   729,   730,   731,   732,   733,   734,   735,
     566,   739,   483,    56,  4500,   258,   743,   708,   258,  4516,
     738,   738,   493,    66,   739,  3567,   739,   116,   117,   118,
     119,   120,   739,    76,   739,   739,   739,  4329,   739,   749,
     342,   743,   265,   428,   743,    48,  1012,    90,    91,    92,
     388,  4915,   739,   540,   541,   542,   120,   743,  4544,   120,
     547,  4925,    48,   106,    48,  4586,  4930,  1033,    48,   540,
     541,   542,   276,   547,   620,  1041,   547,   564,   373,   738,
     567,   368,   621,    15,    21,    81,   743,   511,   143,   373,
     564,   738,   743,   564,   228,   739,   567,   807,  1064,  4585,
    4964,  4587,  4966,   194,   743,   385,   263,   744,  4594,  4595,
      73,   194,    21,   342,   743,   173,   603,    48,   728,   729,
     730,   731,   732,   733,   734,   735,  4612,   837,  4992,   373,
    1096,   739,   603,   738,   223,   224,   225,   226,   739,   319,
    4626,   738,   637,   674,   398,    48,   473,   149,   609,   738,
    4636,   728,   729,   730,   731,   732,   733,   734,   735,   739,
    4646,   739,   136,   739,   738,  4651,   637,   738,   738,   574,
    5034,  5035,   739,   739,   743,  5039,   738,  4656,   738,  4656,
     136,  1147,  4656,   136,   738,   158,   441,   378,  1154,   538,
     739,   484,   743,  4679,    48,    48,  4730,   738,   484,  4733,
     679,   911,   728,   729,   730,   731,   732,   733,   734,   735,
     692,   535,   692,   555,   155,   634,   692,    32,   745,    64,
    1186,   385,  4719,    64,   739,   482,    19,   634,   703,   554,
     197,    32,   385,   385,   134,   722,   739,   143,   228,  4773,
     702,   692,   484,   689,  4730,   465,   335,  4733,   337,   338,
     339,   722,     6,   378,   378,   246,   154,   346,   741,    48,
    4746,   171,   609,   130,   634,   154,   230,   738,   292,   124,
     741,   741,   745,   231,   703,    54,   575,   143,   741,   373,
     738,   154,   215,  3825,   743,   575,   741,  4773,   501,  1255,
    1256,   334,    54,  4779,   154,   194,   378,   194,  1264,  1265,
    1266,  1267,  1268,  1269,   194,   575,   455,   636,   351,   125,
     378,  1277,  1278,   378,  1280,  1281,   743,   699,   162,  1285,
    1286,   196,  4656,  1289,  1290,  1291,  1292,  3001,  1294,  1295,
    3092,  1041,  2995,  2997,  4281,  4284,  1302,  1303,   427,  1305,
    1306,  1307,  1308,  1309,  2999,  1311,  1312,  1313,  1314,  1315,
    1316,  1317,  1318,  1319,  2992,  1321,  4277,  3562,  1324,  1325,
    4292,  4305,  3388,  1329,  4578,  3907,  1485,  1333,  1334,  1335,
    4852,  4683,  4853,  1038,  4307,  4482,  5049,  4874,  5000,    46,
    1346,  1347,  1348,   774,  2478,  1351,  2420,  3618,  1354,  1355,
    1356,  1357,  1358,  1359,  4912,  4564,  4564,  4564,  5016,  4822,
    4564,   490,   491,  4912,  4848,  4564,  1372,  1373,  4564,  1375,
    1376,  1377,  1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,
    4564,  4564,  1388,  4564,  4564,  4564,  1392,  4898,  1394,   472,
    4564,  4917,  4847,  4564,  3571,   998,  2180,  2185,  4924,  3088,
    3989,  3845,  2330,  4977,  1154,  4009,   489,  3052,  3057,  3051,
    3805,  3993,  3994,  3995,  3996,  4185,  4392,  4796,  4874,  4808,
    4539,  4003,  4806,  2328,  2265,  3589,  3864,  3046,  3865,  3428,
    1436,  4957,  2193,  3462,  3461,  4017,  1186,  4963,  4214,  3288,
    4818,  3917,  4968,  4586,  4409,  4543,  4465,  4413,  4470,  2856,
    4421,  4977,  2865,  4192,  1635,  4981,  3576,  3893,  3034,  2744,
    2739,  2266,  4258,  1465,  2266,  2265,  1915,  3490,   551,  1911,
     779,  2468,  2967,  2873,  1611,  1586,  3115,  3636,  5004,  2452,
      61,  1454,  1806,   750,  2783,   568,  4068,  2462,   749,  1658,
    2088,  3301,  2707,  2056,  5020,  4499,  4514,  2603,  4786,  1296,
    4860,  4779,  5028,   632,  2488,  1255,  1256,  5026,  4988,  5026,
    4987,  2488,  4348,  4086,  1264,  1265,  3511,  4594,  1268,  1269,
     649,   650,  2488,  5049,  4595,  2488,  3706,  1277,  1278,  3692,
    1280,  1281,  1270,   787,  4095,  1285,  4500,  3172,  3079,  1289,
    1290,  1291,  1292,  4384,  1294,  1240,  3484,  4509,  4408,  2138,
      16,  1144,  1302,  1303,  1690,  1305,  1306,  2387,   985,   985,
    3114,  1311,  1104,  3114,  1314,  1315,  1316,  1317,  1318,  1319,
    4064,  1321,  3655,   985,  1324,  1325,  4158,   983,  4055,  1329,
     985,  1893,  1867,  1333,  1334,  1335,   773,  1464,  2408,  2933,
    4859,  1779,  3118,  3830,  4776,  4176,  1346,  1347,  1348,  5004,
    5028,  3933,  4060,  4351,  1354,  1355,  1356,  1357,  1358,  2564,
    2793,  2565,  1827,    14,    43,  4003,    17,  1182,  2531,    43,
    1822,  1842,  1372,  1180,  1820,   735,  2455,    39,  2341,  4322,
    1096,    32,  2734,  1415,  2342,    36,   738,  1143,    11,    11,
     977,  1038,  1392,  3579,  1394,  4797,  1038,  3949,  1038,    50,
      51,  4006,  1658,  4300,  3501,    -1,    -1,    58,  1664,    -1,
    1666,  1667,    63,    64,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1678,  1679,    -1,  1681,  1682,    -1,    79,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1436,    -1,    -1,  4271,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,  4284,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     121,    -1,  4304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     131,   132,    -1,    -1,    -1,    -1,    -1,    61,    62,    63,
      -1,    -1,   143,   144,    -1,    -1,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    77,    -1,   156,    -1,    -1,    -1,    83,
      84,    -1,    -1,    87,    -1,    -1,    -1,    -1,    -1,   170,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    -1,
      -1,   125,    -1,    -1,    -1,   129,    -1,   208,    -1,   210,
      -1,    -1,    -1,    -1,   215,    -1,    -1,   218,  1824,    -1,
      -1,  1827,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1835,
      -1,    -1,   233,  1839,   158,    -1,  4418,    -1,    -1,  1845,
     241,    -1,    -1,   244,    -1,    -1,    -1,    -1,  1854,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     281,    -1,    -1,    -1,   285,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,   117,   118,   119,   120,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1658,    -1,
      -1,   235,    -1,    -1,  1664,    -1,  1666,  1667,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1936,    -1,    -1,    -1,  1940,    -1,    -1,    -1,   262,    -1,
      -1,    -1,  1948,    -1,  1950,    -1,    -1,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,    -1,
     317,   318,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   382,    -1,    -1,  1990,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,
      -1,    -1,   223,   224,   225,   226,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   415,    -1,   340,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   426,    -1,    -1,  2034,  2035,
    2036,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4620,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,
     451,    -1,   453,    -1,    -1,   456,    -1,  2063,    -1,    -1,
      -1,    -1,  2068,    -1,    -1,   466,   467,    -1,    -1,    -1,
    2076,   395,  2078,    -1,    -1,   476,    -1,   478,    -1,    -1,
     404,    -1,    -1,    -1,    -1,  1835,   487,    -1,    -1,  1839,
      -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,   445,   446,
     501,  2107,    -1,    -1,  1854,   506,   507,   508,    -1,    -1,
      -1,    -1,    14,    -1,   335,    17,   337,   338,   339,    -1,
      -1,    -1,    -1,    -1,    -1,   346,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,   539,    -1,
      -1,    -1,  4724,  4725,    -1,   546,    -1,    -1,    50,    51,
      -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,    -1,   483,
      -1,    63,    64,    -1,    -1,    -1,   387,    -1,    -1,   390,
      -1,    -1,  2178,    -1,    -1,  2181,  2182,    79,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1936,    -1,    -1,   590,
    1940,    -1,    -1,    -1,    -1,  4777,    -1,    99,    -1,    -1,
    1950,   602,    -1,    -1,    -1,   606,   427,    -1,    -1,    -1,
      -1,    -1,    -1,   614,    -1,    -1,   540,   541,   542,   121,
      -1,    -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,   131,
     132,    -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,
     564,   143,   144,   567,   645,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     661,   662,   663,   664,    -1,    -1,    -1,    -1,   170,   490,
     491,    -1,    -1,    -1,    -1,   676,    -1,    -1,    -1,   603,
    2286,    -1,    -1,    -1,  2034,  2035,  2036,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,   210,    -1,
      -1,    -1,   713,   215,    -1,    -1,   218,    -1,  2068,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2076,    -1,  2078,    -1,
      -1,   233,    -1,    -1,    -1,    -1,    -1,   738,    -1,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4934,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,    -1,   711,   712,  2372,    -1,    -1,    -1,
    2376,  2377,    -1,  2379,  2380,    -1,    -1,    -1,    -1,   281,
      21,    -1,    -1,   285,    -1,    -1,    27,    28,    -1,    -1,
    4564,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   722,    -1,
      -1,  4983,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    63,    -1,    -1,    -1,    -1,   648,   649,   650,
      -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,  2444,    -1,
      -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,
      -1,  2457,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     111,    -1,    -1,    -1,    -1,  4649,  4650,    -1,    -1,    -1,
     382,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2505,
    2506,  2507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   415,    -1,   156,    -1,   158,    -1,    -1,
      -1,    -1,    -1,    -1,   426,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2286,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,    -1,   451,
      -1,   453,    -1,    -1,   456,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,   467,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   476,    -1,   478,    -1,  2584,  4753,
    4754,    -1,    -1,    -1,    -1,   487,    -1,  2593,  2594,    -1,
     231,   493,    -1,    -1,   235,    -1,  4770,    -1,    -1,   501,
      -1,   242,    -1,    -1,   506,   507,   508,  2613,  2614,    -1,
    2616,    -1,    -1,  2619,  2620,  2621,  2622,  2623,    -1,    -1,
    2626,   262,  2372,    -1,    -1,    -1,    -1,    -1,    -1,  2635,
      -1,    -1,    -1,    -1,  2640,    -1,  2642,   539,  2644,  2645,
      -1,  2647,  2648,    -1,   546,    -1,  2652,  2653,  2654,    -1,
      -1,    -1,  2658,  2659,  2660,  4829,  2662,    -1,  2664,    -1,
    2666,    -1,  2668,    -1,  2670,    -1,    -1,    -1,    -1,  2675,
    4844,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   322,    -1,  4857,    -1,  2691,    -1,    -1,   590,    -1,
      -1,    -1,    -1,    -1,  2444,    -1,    -1,    -1,    -1,   340,
     602,  2707,  2708,    -1,   606,    -1,  2712,  2457,  2714,    -1,
      -1,  4885,   614,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4897,  4898,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,    -1,
      -1,  4915,    -1,   645,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4925,    -1,    -1,   395,    -1,  4930,    -1,    -1,    -1,
     401,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,    -1,
    4944,  2777,  4946,    -1,   676,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4962,    -1,
    4964,    -1,  4966,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   713,    -1,    -1,    -1,   456,    -1,    -1,  4992,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2584,    -1,   738,    -1,    -1,    -1,
    5014,  5015,   483,  2593,  2594,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5034,  5035,    -1,  2613,  2614,  5039,  2616,    -1,    -1,  2619,
    2620,  2621,  2622,  2623,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2635,    -1,    -1,    -1,    -1,
    2640,    -1,  2642,    -1,  2644,  2645,    -1,  2647,    -1,   540,
     541,   542,  2652,  2653,  2654,    -1,   547,    -1,  2658,  2659,
    2660,    -1,  2662,    -1,  2664,    -1,  2666,    -1,  2668,    -1,
    2670,    -1,    -1,   564,    -1,  2675,   567,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    35,    36,    -1,    -1,    -1,    -1,  2707,    -1,    -1,
      -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    61,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    73,
      -1,    -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    97,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   109,  3032,  2777,    -1,    -1,
      -1,    -1,     7,    -1,    -1,    -1,    -1,    12,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3071,    -1,  3073,    -1,    -1,
      -1,  3077,    -1,   157,   158,    -1,    -1,    -1,    -1,   163,
      -1,   722,   166,    58,    -1,    -1,    61,    62,    63,    64,
      -1,    -1,   176,    -1,    69,    -1,    71,   738,    -1,    -1,
     741,    -1,    77,    -1,    -1,  3111,    -1,    -1,    83,    84,
      -1,    -1,    87,    -1,   198,    -1,   200,    -1,    -1,    -1,
      -1,    96,    -1,    -1,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,    -1,  3148,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     125,    -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,    -1,
    3186,    -1,    -1,   158,    -1,    -1,    -1,    -1,    -1,  3195,
      -1,    -1,    -1,    -1,   169,    -1,    -1,    -1,   282,    -1,
      -1,    -1,    -1,    -1,  3210,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3218,    -1,    -1,    -1,    -1,   192,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   316,    -1,    -1,  3241,  3242,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
     235,  3267,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,  3277,    -1,  3279,    -1,  3281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     285,    -1,    -1,    -1,    -1,    -1,    -1,  3323,    -1,    -1,
      -1,    -1,    -1,    -1,   408,    -1,    -1,  3077,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   419,   420,    -1,   422,   423,
     424,    -1,    -1,    -1,    -1,    -1,    -1,   322,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     444,  3111,    -1,    -1,    -1,   340,    -1,    -1,    -1,   344,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3394,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,
      -1,    -1,    -1,   388,   498,    -1,    -1,    -1,    -1,    -1,
     395,    -1,    -1,    -1,    -1,    -1,    -1,   511,    -1,   404,
      -1,    -1,    -1,    -1,    -1,    -1,  3186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   543,
    3210,   436,    -1,   547,    -1,    -1,    -1,    -1,  3218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,   452,   453,   563,
      -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3241,  3242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   586,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3277,    -1,  3279,
      -1,  3281,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     624,    -1,    -1,    -1,    -1,    -1,    -1,   631,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3568,  3569,    -1,   540,   541,   542,    -1,    -1,
      -1,    -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     7,    -1,    -1,    -1,    -1,    12,   564,
      14,    -1,   567,    17,    -1,    -1,    -1,    -1,  3604,    -1,
    3606,    -1,    -1,    27,    28,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,    -1,
      -1,    -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,
      64,    -1,    -1,    -1,  3394,    69,    -1,    -1,    -1,  3655,
      -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    83,
      84,    -1,   637,    87,    -1,   640,    -1,    -1,    -1,    -1,
      -1,    -1,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3689,  3690,    -1,    -1,   111,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,    -1,    -1,    -1,   129,    -1,  3713,    -1,    -1,
      -1,    -1,    -1,   137,   138,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   152,    -1,
      -1,    -1,    -1,  3739,   158,  3741,    -1,    -1,  3744,  3745,
      -1,  3747,    -1,    -1,    -1,   169,    -1,   722,   723,   724,
      -1,    -1,  3758,    -1,    -1,    -1,    -1,  3763,    -1,    -1,
    3766,    -1,    -1,  3769,  3770,    -1,    -1,    -1,   192,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3791,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,
    3856,    -1,    -1,    12,    -1,    14,    -1,    -1,    -1,    -1,
      -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,    27,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   322,    58,
      -1,    -1,    -1,    -1,    63,  3655,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,    77,    -1,
     344,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,  3689,
    3690,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3956,  3957,   111,    -1,    -1,    -1,    -1,    -1,   382,    -1,
      -1,    -1,    -1,  3713,   388,    -1,   125,    -1,    -1,    -1,
     129,   395,    -1,    -1,    -1,    -1,    -1,    -1,   137,    -1,
     404,  3987,  3988,    -1,    -1,   144,    -1,    -1,    -1,  3739,
      -1,  3741,    -1,   152,  3744,  3745,    -1,    -1,    -1,   158,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3758,    -1,
      -1,    -1,   436,  3763,    -1,    -1,  3766,  4023,    -1,  3769,
    3770,    -1,    -1,    -1,    -1,    -1,    -1,   451,   452,   453,
      -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,
    4046,  3791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4056,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4077,    -1,  4079,    -1,    -1,   235,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,  3856,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   540,   541,   542,    -1,
      -1,    -1,    -1,   547,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     564,    -1,    -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   322,    -1,    -1,   590,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   603,
      -1,   340,    -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3956,  3957,    -1,    -1,
      -1,    -1,    -1,   637,    -1,    -1,   640,    -1,    -1,    -1,
      -1,    -1,    -1,  4229,    -1,    -1,    -1,    -1,    -1,   388,
      -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   404,    -1,    34,    35,  4255,
      -1,    -1,    -1,    40,    -1,    42,    -1,    44,    45,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,    -1,  4046,    -1,   722,   723,
     724,    -1,    -1,    -1,    -1,    -1,  4056,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,   112,    -1,  4077,   115,  4079,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4351,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,  4368,    -1,    -1,  4371,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,  4384,    -1,
      -1,   540,   541,   542,    -1,    -1,    -1,    -1,   547,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     187,    -1,   189,    -1,    -1,   564,    -1,   194,   567,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,   206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,   637,  4229,
      -1,   640,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   288,   289,  4509,   291,  4255,    -1,    -1,    -1,    -1,
    4516,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   328,   329,   330,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4559,    -1,    -1,    -1,    -1,  4564,    -1,
     347,   348,   349,   722,  4570,    -1,    -1,   354,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   375,   376,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4604,    -1,
      -1,  4351,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4368,    -1,
      -1,  4371,   409,   410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4384,    -1,    -1,  4643,    -1,    -1,
      -1,    -1,    -1,  4649,  4650,    -1,    -1,    -1,   435,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4699,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    -1,    -1,  4719,   501,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,    -1,    -1,
      -1,    -1,    -1,  4739,    -1,  4741,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4751,    -1,  4753,  4754,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4509,
      -1,    -1,    -1,    -1,  4770,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,    -1,   576,
      -1,    -1,   579,   580,   581,   582,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4559,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4827,    -1,  4829,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   622,   623,    -1,  4844,  4845,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4857,    -1,    -1,  4604,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,  4874,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4884,  4885,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4897,  4898,  4643,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4915,
      -1,    -1,    -1,    -1,    -1,    -1,  4922,    -1,    -1,  4925,
      -1,    -1,    -1,    -1,  4930,    -1,    -1,    -1,    -1,    -1,
      -1,  4937,    -1,    -1,    -1,    -1,    -1,    -1,  4944,    -1,
    4946,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4699,
      -1,    -1,    -1,    -1,    -1,    -1,  4962,    -1,  4964,    -1,
    4966,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4992,    -1,    -1,  4739,
      -1,  4741,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4751,    -1,    -1,    -1,    -1,    -1,    -1,  5014,  5015,
      -1,    -1,    -1,    -1,    -1,  5021,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5029,    -1,    -1,    -1,    -1,  5034,  5035,
      -1,    -1,    -1,  5039,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4827,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4845,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4884,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,  4922,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,  4937,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,  5021,    -1,    -1,   135,   136,   137,   138,   139,  5029,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,    -1,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,    -1,    -1,    -1,   730,
     731,    -1,    -1,    -1,    -1,   736,    -1,   738,    -1,    -1,
      -1,   742,    -1,    -1,    -1,   746,   747,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    46,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
     268,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,    -1,
      -1,    -1,   730,   731,    -1,    -1,    -1,    -1,   736,    -1,
     738,    -1,    -1,    -1,   742,    -1,    -1,    -1,   746,   747,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,   493,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,    -1,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,    -1,    -1,    -1,   730,   731,    -1,    -1,    -1,
      -1,   736,    -1,   738,    -1,    -1,    -1,   742,    -1,    -1,
      -1,   746,   747,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,    -1,    -1,    -1,   730,   731,
     732,    -1,    -1,    -1,   736,    -1,   738,    -1,    -1,    -1,
     742,    -1,    -1,    -1,   746,   747,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,    -1,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,    -1,    -1,
      -1,   730,   731,   732,    -1,    -1,    -1,   736,    -1,   738,
      -1,    -1,    -1,   742,    -1,    -1,    -1,   746,   747,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,    -1,    -1,    -1,   730,   731,    -1,    -1,    -1,    -1,
     736,    -1,   738,    -1,    -1,    -1,   742,    -1,    -1,    -1,
     746,   747,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,    -1,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,    -1,    -1,    -1,   730,   731,    -1,
      -1,    -1,    -1,   736,    -1,   738,    -1,    -1,    -1,   742,
      -1,    -1,    -1,   746,   747,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,    -1,    -1,    -1,
     730,   731,    -1,    -1,    -1,    -1,   736,    -1,   738,    -1,
      -1,    -1,   742,    -1,    -1,    -1,   746,   747,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,    -1,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
      -1,    -1,    -1,   730,   731,    -1,    -1,    -1,    -1,   736,
      -1,   738,    -1,    -1,    -1,   742,    -1,    -1,    -1,   746,
     747,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,    -1,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,    -1,    -1,    -1,   730,   731,    -1,    -1,
      -1,    -1,   736,    -1,   738,    -1,    -1,    -1,   742,    -1,
      -1,    -1,   746,   747,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,    -1,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,    -1,    -1,    -1,   730,
     731,    -1,    -1,    -1,    -1,   736,    -1,   738,    -1,    -1,
      -1,   742,    -1,    -1,    -1,   746,   747,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,    -1,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,    -1,
      -1,    -1,   730,   731,    -1,    -1,    -1,    -1,   736,    -1,
     738,    -1,    -1,    -1,   742,    -1,    -1,    -1,   746,   747,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,    -1,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,    -1,    -1,    -1,   730,   731,    -1,    -1,    -1,
      -1,   736,    -1,   738,    -1,    -1,    -1,   742,    -1,    -1,
      -1,   746,   747,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
      -1,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,    -1,    -1,    -1,   730,   731,
      -1,    -1,    -1,    -1,   736,    -1,   738,    -1,    -1,    -1,
     742,    -1,    -1,    -1,   746,   747,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,    -1,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,    -1,    -1,
      -1,   730,   731,    -1,    -1,    -1,    -1,   736,    -1,   738,
      -1,    -1,    -1,   742,    -1,    -1,    -1,   746,   747,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,    -1,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,    -1,    -1,    -1,   730,   731,    -1,    -1,    -1,    -1,
     736,    -1,   738,    -1,    -1,    -1,   742,    -1,    -1,    -1,
     746,   747,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,    -1,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,    -1,    -1,    -1,   730,   731,    -1,
      -1,    -1,    -1,   736,    -1,   738,    -1,    -1,    -1,   742,
      -1,    -1,    -1,   746,   747,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,    -1,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,    -1,    -1,    -1,
     730,   731,    -1,    -1,    -1,    -1,   736,    -1,   738,    -1,
      -1,    -1,   742,    -1,    -1,    -1,   746,   747,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,   493,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
     637,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,   738,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     747,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,   738,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   747,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
      -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,   738,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     747,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,    -1,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     742,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,   742,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   742,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   742,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   742,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   742,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   742,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   742,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,   739,    -1,    -1,   742,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,    -1,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   742,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
     742,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,    -1,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,
     641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,   655,    -1,    -1,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,    -1,    -1,    -1,   725,   726,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,   743,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,   493,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,   738,
     739,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,   739,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,   739,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
     263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,   275,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,   519,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,   637,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,   738,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,   738,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,   738,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,   738,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,   738,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,   738,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,    -1,    -1,    -1,     5,
       6,   732,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,    -1,    -1,    -1,     5,     6,   732,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,    -1,    -1,    -1,     5,
       6,   732,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,    -1,    -1,    -1,     5,     6,   732,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,    -1,    -1,    -1,     5,
       6,   732,     8,     9,    10,    11,    12,    13,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,   441,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,   493,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
     506,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,   587,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,   609,   610,   611,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,    -1,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,   506,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,   587,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,   609,   610,   611,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,   210,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,   493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,   506,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,    -1,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,    -1,   369,
     370,    -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,   521,   522,   523,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      18,    19,    20,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,   387,
      -1,    -1,   390,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
     648,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,   502,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,   199,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,   263,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,   519,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,   594,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    95,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,   522,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,   660,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,   418,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
      -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
      -1,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,    -1,   422,   423,   424,    -1,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,    -1,   450,    -1,   452,   453,   454,    -1,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,    -1,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,    -1,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,    -1,   422,   423,
     424,    -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,    -1,   450,    -1,   452,   453,
     454,    -1,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,    -1,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
      -1,    -1,   655,    -1,    -1,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,    -1,
      -1,    -1,   725,   726,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,    -1,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
      -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,   593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,   641,
      -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,    -1,    -1,   655,    -1,    -1,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
      -1,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
      -1,    -1,    -1,   725,   726,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    -1,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
      -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,    -1,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,   593,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,    -1,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,   634,    -1,   636,    -1,    -1,    -1,   640,
     641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,    -1,    -1,   655,    -1,    -1,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,    -1,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,    -1,    -1,    -1,   725,   726,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,    -1,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
      -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,    -1,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,    -1,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,   593,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
      -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,    -1,    -1,   655,    -1,    -1,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,    -1,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,    -1,    -1,    -1,   725,   726,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,    -1,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,    -1,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
      -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,   498,
      -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,    -1,    -1,   655,    -1,    -1,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,    -1,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,    -1,    -1,    -1,   725,   726,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,    -1,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,    -1,
      -1,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,    -1,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,   497,
     498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,    -1,    -1,   655,    -1,    -1,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,    -1,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,    -1,    -1,    -1,   725,   726,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,    -1,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,   396,
      -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,    -1,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,   496,
     497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,    -1,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,    -1,   655,    -1,
      -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,    -1,    -1,    -1,   725,   726,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   395,
     396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,    -1,
     496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,    -1,
      -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,   655,
      -1,    -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,    -1,    -1,    -1,   725,
     726,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    -1,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,    -1,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,    -1,
      -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
      -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,    -1,
     655,    -1,    -1,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,    -1,    -1,    -1,
     725,   726,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    -1,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
      -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,    -1,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,    -1,    -1,
      -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,   593,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,   636,    -1,    -1,    -1,   640,   641,    -1,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,    -1,
      -1,   655,    -1,    -1,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,    -1,    -1,
      -1,   725,   726,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,    -1,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   395,   396,    -1,    -1,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,    -1,    -1,   452,
      -1,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,    -1,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,    -1,
      -1,    -1,    -1,   496,   497,   498,    -1,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,    -1,    -1,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
     593,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,    -1,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,    -1,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    34,
      35,    -1,   655,    -1,    -1,    40,   659,    42,    -1,    44,
      45,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,    -1,
     673,   674,    -1,    -1,    -1,    -1,   679,    62,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,    -1,
      -1,    -1,   725,   726,    -1,    -1,    -1,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,    -1,    -1,    34,    35,    -1,    -1,    -1,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,   142,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    62,    -1,   159,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     205,   206,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   279,    -1,    -1,   187,    -1,   189,
      -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   328,   329,   330,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,   347,   348,   349,    -1,    -1,    -1,    -1,   354,
     260,    -1,   357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
     375,   376,    -1,    -1,    -1,    -1,    -1,    -1,   288,   289,
      -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   409,   410,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   328,   329,
     330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     435,    -1,    -1,    -1,    -1,    -1,    -1,   347,   348,   349,
      -1,    -1,    -1,    -1,   354,    -1,    -1,   357,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   375,   376,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   497,    -1,    -1,    -1,   501,    -1,    -1,   409,
     410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   513,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   573,    -1,
      -1,   576,    -1,    -1,   579,   580,   581,   582,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   513,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   622,   623,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,   579,
     580,   581,   582,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   622,   623,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   743,    -1,
     650
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   590,
     602,   606,   614,   637,   645,   661,   662,   663,   664,   676,
     713,   738,   750,   751,   754,   755,   756,   757,   758,   760,
     765,   767,   789,   790,   791,   792,   794,   797,   819,   841,
     848,   849,  1076,  1077,  1079,  1081,  1083,  1086,  1088,  1089,
    1090,  1091,  1092,  1094,  1095,  1129,  1130,  1131,  1134,  1148,
    1150,  1154,  1157,  1158,  1162,  1164,  1169,  1173,  1179,  1180,
    1181,  1182,  1183,  1184,  1185,  1310,  1344,  1346,  1347,  1348,
    1349,  1350,  1351,  1352,  1353,  1354,  1355,  1356,  1357,  1358,
    1359,  1360,  1361,  1369,  1370,  1388,  1389,  1393,  1397,  1403,
    1420,  1421,  1423,  1426,  1435,  1444,  1448,  1450,  1451,  1508,
    1510,  1512,  1534,  1540,  1542,  1543,  1544,  1546,  1550,  1552,
    1576,  1582,  1583,  1584,  1585,  1621,  1628,  1629,  1631,  1632,
      12,   108,   127,   200,   243,   286,   420,   499,   564,   566,
     600,   612,   708,  1595,  1596,  1597,  1600,   282,   371,  1163,
    1577,   572,  1491,   235,     5,     6,     8,     9,    10,    11,
      12,    15,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    90,    91,    92,
      93,    94,    98,   103,   106,   110,   111,   112,   115,   120,
     121,   126,   127,   129,   135,   136,   137,   138,   139,   143,
     146,   147,   148,   152,   154,   155,   157,   158,   159,   162,
     163,   165,   166,   167,   168,   169,   170,   173,   174,   175,
     176,   177,   180,   181,   183,   184,   185,   186,   187,   190,
     191,   195,   196,   198,   202,   204,   205,   206,   207,   209,
     211,   215,   216,   218,   221,   222,   226,   227,   228,   229,
     232,   233,   234,   237,   242,   243,   244,   248,   252,   253,
     255,   256,   260,   262,   265,   266,   269,   272,   273,   279,
     280,   282,   284,   286,   287,   295,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   316,   317,   318,   320,   321,   322,
     323,   325,   326,   331,   332,   333,   334,   335,   336,   339,
     340,   342,   344,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   357,   358,   361,   362,   363,   364,   365,   369,
     370,   374,   376,   377,   379,   380,   381,   384,   394,   395,
     396,   398,   400,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   413,   415,   416,   417,   419,   421,   422,
     423,   424,   425,   427,   428,   429,   432,   436,   437,   439,
     440,   443,   444,   445,   446,   447,   449,   450,   452,   453,
     454,   457,   458,   459,   460,   461,   462,   463,   464,   466,
     468,   469,   471,   472,   473,   475,   478,   479,   480,   481,
     483,   485,   486,   487,   488,   489,   491,   492,   496,   497,
     498,   499,   503,   507,   509,   510,   511,   512,   514,   515,
     516,   517,   518,   524,   525,   526,   528,   531,   534,   536,
     538,   539,   540,   541,   542,   543,   546,   547,   550,   551,
     552,   553,   554,   555,   558,   559,   560,   561,   563,   564,
     567,   568,   569,   570,   573,   574,   576,   577,   578,   579,
     585,   586,   590,   591,   592,   593,   595,   596,   598,   599,
     601,   602,   605,   608,   610,   612,   613,   619,   621,   624,
     628,   630,   631,   632,   633,   640,   641,   642,   644,   645,
     646,   647,   650,   654,   655,   656,   657,   659,   668,   669,
     670,   673,   674,   676,   679,   681,   688,   689,   692,   694,
     696,   697,   701,   702,   703,   704,   705,   706,   707,   708,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     721,   722,   723,   724,   725,   726,   813,  1488,  1496,  1503,
    1504,  1505,  1506,   316,   457,   563,   566,  1536,  1536,   641,
    1578,   108,   199,   286,   390,   499,   519,   564,   569,   600,
     604,   612,   654,   708,  1053,  1365,  1592,  1596,  1597,  1598,
    1599,  1600,  1345,   108,   167,   200,   235,   286,   420,   499,
     519,   564,   587,   600,   612,   628,   654,   708,  1365,  1496,
    1163,   103,   536,   850,    13,    14,    99,   130,   144,   167,
     170,   183,   210,   235,   241,   274,   285,   421,   425,   441,
     449,   457,   493,   506,   507,   558,   587,   609,   611,  1488,
    1491,  1497,  1500,  1504,  1506,  1507,  1556,  1557,  1486,  1496,
     766,   566,   128,   220,   293,  1371,   407,   659,    87,   428,
    1449,   111,   235,   647,  1452,   243,  1536,  1163,  1496,  1445,
     487,   612,  1536,  1163,   128,   293,  1372,  1392,   653,  1436,
     522,   838,   842,   843,  1496,    13,   425,  1556,  1578,  1496,
      13,   140,   220,   527,   528,   530,   531,   532,   549,  1190,
    1191,  1192,  1590,    61,    62,   125,   209,   282,   352,   404,
     498,   585,   653,   654,   672,   708,   742,  1028,  1496,  1509,
    1519,  1524,  1525,  1404,   842,   204,   511,   585,   204,   511,
     566,  1398,   407,   659,   243,  1541,  1496,   660,  1311,  1312,
    1496,    32,    79,   154,   415,   437,   478,   539,  1624,     8,
      23,    29,    35,    37,    38,    39,    41,    54,    55,    61,
      62,    69,    72,    96,    97,   102,   104,   107,   108,   113,
     114,   115,   120,   122,   125,   171,   178,   179,   188,   195,
     205,   207,   213,   219,   226,   230,   241,   245,   271,   279,
     290,   319,   324,   335,   339,   341,   345,   346,   347,   348,
     349,   356,   366,   368,   372,   373,   397,   409,   410,   412,
     427,   455,   456,   475,   477,   484,   485,   491,   544,   545,
     552,   556,   557,   562,   572,   576,   577,   578,   579,   588,
     589,   590,   594,   597,   612,   616,   617,   618,   620,   625,
     627,   632,   633,   650,   665,   666,   671,   677,   678,   680,
     683,   684,   685,   686,   687,   691,   693,   695,   730,   731,
     736,   738,   742,   746,   747,  1026,  1183,  1207,  1211,  1214,
    1215,  1216,  1217,  1218,  1219,  1226,  1227,  1228,  1249,  1250,
    1472,  1474,  1476,  1477,  1478,  1483,  1485,  1488,  1496,  1587,
    1589,  1488,   401,   952,   738,  1588,  1589,   243,   282,  1180,
    1181,  1183,  1310,     0,   156,   752,   415,   104,   274,   612,
    1102,  1491,  1496,  1499,  1501,  1568,  1570,   608,  1132,  1146,
     246,  1342,   388,   603,  1324,  1325,   276,   603,  1325,  1330,
    1182,  1183,   130,   609,   195,  1424,  1486,  1496,   160,  1106,
    1496,   160,   813,   480,  1545,   212,   813,  1499,  1496,  1486,
     564,   230,  1364,   212,   167,  1085,  1595,  1536,  1578,  1170,
    1171,  1486,   738,   820,   744,   583,   185,  1362,  1486,  1362,
      19,  1579,   230,   981,   235,   212,   456,  1499,   235,   717,
    1496,   564,   981,   981,   212,   235,   566,  1591,  1591,  1595,
    1600,   367,   732,  1200,  1201,  1204,  1205,  1206,  1207,  1480,
    1496,  1364,  1364,  1364,  1496,   212,  1364,  1364,   717,  1496,
    1364,   564,  1364,  1364,  1364,   212,  1536,   761,  1427,   135,
     419,  1555,   481,   481,   564,   569,   612,   628,   654,   654,
     385,   738,  1571,   563,   378,  1571,    67,   511,  1571,   109,
     628,  1571,   742,  1571,   378,   583,   743,   381,    68,   433,
     744,  1499,   197,   231,  1125,  1496,  1491,  1630,  1204,   246,
      85,   293,  1454,   194,  1535,  1536,   197,    35,   316,  1409,
    1446,  1496,  1166,  1501,  1165,  1536,   246,  1373,  1364,  1438,
     316,   511,  1437,  1439,   621,   839,   501,   844,  1555,   378,
     197,   378,   583,  1579,  1200,  1192,   501,   654,   744,    35,
     125,   160,   502,  1029,  1381,  1499,   194,  1381,   255,   433,
    1526,  1527,  1529,  1531,    13,   125,   365,  1500,  1502,  1564,
     212,   742,  1499,    35,   125,  1031,  1032,  1499,   744,   125,
     585,  1515,  1523,  1525,   743,  1516,  1381,    36,    61,    72,
      97,    99,   109,   158,   163,   166,   176,   198,   200,   209,
     211,   282,   316,   381,   408,   419,   420,   423,   424,   444,
     498,   511,   547,   566,   631,  1028,  1405,  1409,  1410,  1412,
    1413,  1414,  1520,   844,   447,   534,  1143,  1144,  1145,   433,
     637,  1135,  1136,  1137,  1143,  1486,  1496,  1630,  1536,  1311,
     743,   738,  1313,    37,   219,   572,  1473,  1492,  1623,  1623,
    1623,    96,  1622,  1623,  1623,   738,   738,   738,  1214,   738,
     738,   738,  1204,  1262,   738,   738,   738,   738,   738,   738,
     738,   738,  1203,  1203,   738,  1014,   738,   738,   738,   572,
     738,   738,   738,  1588,   738,   738,   738,   738,   738,   738,
     738,   738,   738,  1204,   738,   738,   738,  1260,  1261,  1483,
    1496,   738,   738,   738,   738,   738,   738,   738,   738,   738,
    1014,   738,   738,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   738,   738,   738,   738,   738,  1014,   572,   738,
     738,   738,   572,   738,   738,   738,    37,   219,   572,   738,
    1203,  1014,  1014,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   738,   738,   738,   738,   738,   738,   738,   738,
     738,   738,   738,  1214,  1214,  1214,  1181,  1183,  1204,   742,
    1251,  1499,  1496,   141,   156,   345,   504,   505,   728,   729,
     730,   731,   732,   733,   734,   735,  1214,    71,   389,  1492,
     259,   652,   738,   744,   738,    48,   156,   156,   197,   111,
     739,   739,   739,   741,  1496,  1203,   738,   138,   228,   742,
     125,   138,   228,  1566,   465,   743,  1573,   300,   301,   445,
     446,   524,   525,   526,   787,  1147,   612,  1138,  1139,   146,
     392,   742,  1340,  1341,  1343,  1499,    48,    13,   140,  1586,
    1329,  1330,   290,   373,   594,  1331,  1332,  1474,  1496,  1586,
    1329,   194,   285,  1193,  1194,  1195,  1324,  1193,  1325,  1330,
     231,   293,   429,  1395,  1396,  1392,   160,   194,  1179,  1369,
    1370,  1388,  1393,  1422,  1425,  1473,  1496,   333,   570,   596,
    1078,  1501,  1082,  1499,  1496,  1080,   384,     7,    26,    84,
     144,   237,   323,   370,   451,   630,   921,   922,   935,   936,
     937,   943,   945,   946,  1410,     7,    12,    14,    17,    27,
      28,    58,    63,    64,    69,    77,    83,    84,    87,    96,
     111,   125,   129,   137,   138,   144,   152,   158,   169,   192,
     233,   235,   242,   262,   285,   322,   340,   344,   382,   388,
     395,   404,   436,   451,   452,   453,   483,   540,   541,   542,
     547,   564,   567,   590,   603,   637,   640,   722,   723,   724,
     982,   985,   987,   988,  1035,  1107,  1108,  1110,  1111,  1113,
    1115,  1116,  1117,  1118,  1120,  1122,  1496,   171,  1496,   813,
     533,  1601,  1602,  1084,  1362,   249,   743,   235,   263,   401,
    1050,  1176,  1177,  1204,  1258,  1259,  1496,   768,   769,   176,
     429,   743,  1149,    59,   176,   180,   194,   331,   429,  1159,
    1160,  1161,    57,   369,   369,   448,  1580,   366,   367,  1210,
    1496,  1496,  1496,   519,   193,  1496,   709,     7,   915,  1496,
    1501,  1567,  1569,  1564,  1496,  1496,   981,    11,   167,   200,
     420,   587,   800,  1594,  1602,  1608,  1610,  1611,  1616,   200,
     800,  1593,  1602,  1608,  1611,  1616,  1591,  1204,   743,    18,
      19,    21,   387,   390,   648,  1202,  1208,  1209,  1491,  1496,
     160,   161,   201,   214,   254,   267,   294,   359,  1212,    33,
     249,   275,   442,   517,  1210,   744,  1496,   813,  1496,   378,
    1496,   813,  1499,   709,   943,   945,  1366,  1367,  1368,   813,
    1496,  1501,  1563,  1362,  1564,  1496,  1364,   615,   762,    35,
     158,   162,   202,   222,   287,   383,   419,   443,   468,   512,
     543,  1428,  1432,  1433,  1536,    86,   742,   851,   852,   853,
     854,  1496,  1553,   563,  1496,  1572,  1501,  1499,   200,   420,
     566,  1554,  1563,  1557,    21,   160,  1304,  1305,   186,   363,
    1496,  1547,  1496,  1630,  1373,   516,   743,    50,   282,  1453,
      30,  1486,  1537,  1538,  1362,   742,   759,  1491,   287,   743,
     583,  1167,  1168,  1486,  1362,  1486,  1496,  1441,  1440,   743,
    1492,    56,    66,    76,    90,    91,    92,   106,   334,   351,
     489,   551,   568,   845,   847,   743,  1551,  1501,  1563,  1554,
     487,  1581,  1580,   197,  1186,  1187,  1342,    13,   365,  1564,
    1496,    71,  1034,  1204,  1501,   572,  1494,   273,   380,   643,
     743,  1530,   743,  1528,   658,  1511,   742,   743,  1496,   209,
     282,   498,   653,   672,  1522,  1381,  1496,  1526,  1516,  1381,
    1517,  1518,  1519,  1524,    13,    35,   125,   378,   484,   709,
    1204,  1533,   166,   275,   635,  1419,   738,   108,   167,   200,
     420,   566,   587,   612,   628,  1419,    13,  1499,  1329,   197,
     249,  1411,  1415,   198,    70,   543,   194,   543,   563,    70,
     543,    13,    43,    94,    98,   253,   332,   396,   518,   560,
    1399,  1400,  1401,   166,   222,   543,   543,  1329,  1419,   287,
     157,   422,   586,   234,   235,   261,  1052,    73,   563,   543,
     624,   743,   380,   643,    88,   743,   194,   788,  1312,  1314,
    1496,    21,   743,   379,  1626,   559,  1627,   646,   258,   471,
    1625,  1204,  1204,    13,   140,  1256,  1306,  1256,  1256,  1256,
     634,  1264,  1204,  1204,  1259,  1259,  1204,  1204,   140,  1256,
    1306,   739,   373,   739,   739,  1204,  1204,  1204,  1204,  1483,
     116,   117,   118,   119,   120,   223,   224,   225,   226,   335,
     337,   338,   339,   346,   427,   490,   491,   632,   649,   650,
    1301,  1302,  1204,  1258,   112,   115,   576,   579,  1303,   140,
    1252,  1204,  1204,  1204,  1204,  1301,  1204,  1259,  1261,    10,
     743,   744,   140,  1256,  1204,  1204,   140,  1256,  1204,  1204,
    1259,  1259,  1259,  1204,  1259,  1207,  1204,  1204,  1204,  1204,
    1204,  1204,   739,  1204,  1256,  1256,  1204,  1204,   140,  1256,
    1204,  1302,  1302,  1204,    46,   268,   584,  1204,  1204,   739,
    1484,  1485,  1496,  1256,  1256,  1204,  1204,  1204,  1256,  1256,
    1259,   739,   739,  1204,  1204,  1204,  1204,  1204,  1214,   739,
     739,   739,   739,   743,   209,   282,   498,  1521,   502,  1204,
    1207,  1207,  1207,  1207,  1207,  1207,   245,  1207,   245,  1207,
    1207,  1207,  1207,  1207,  1499,  1214,  1492,  1492,  1204,  1223,
    1224,  1225,  1496,  1204,   277,   280,   430,   953,   954,  1501,
     136,   156,   753,   739,   726,    48,  1499,   654,   726,    48,
     637,    65,   256,   365,   535,   553,   644,  1560,  1561,  1501,
    1568,   637,  1099,   160,   160,   160,   160,   160,   160,   743,
     160,  1133,   404,  1140,   572,  1493,  1493,  1499,   743,  1204,
    1326,  1481,  1183,  1184,  1193,   377,   743,  1183,  1184,  1193,
     503,   609,  1196,   249,  1195,  1329,  1329,  1193,   197,  1363,
    1487,  1496,  1395,  1125,  1499,    87,   979,   980,   987,   988,
     814,   316,     7,   814,   738,   110,   932,  1381,  1382,  1382,
     932,  1382,  1382,   583,   743,   984,   158,    74,    89,   199,
     401,   519,   996,   998,  1050,  1124,  1382,   235,  1124,   401,
    1382,  1382,  1124,  1382,   401,   401,  1382,  1382,  1382,  1382,
     583,   136,  1382,   261,   401,   564,   193,   401,   418,  1050,
    1124,   261,  1382,   401,   401,   564,   136,  1382,  1382,  1382,
    1382,  1382,  1124,   401,    48,  1382,  1382,   401,    21,    74,
     160,   583,  1050,  1128,   401,   401,  1382,  1382,  1382,  1382,
     139,   332,  1382,  1382,   401,  1382,   619,   619,  1382,   985,
      71,  1028,   450,   952,  1109,   743,   743,   501,   710,  1636,
    1087,   492,   628,  1602,   144,   609,  1156,   125,  1172,  1496,
    1171,  1486,   738,   738,  1177,   739,   743,   232,   295,   296,
     297,   298,   299,   302,   303,   304,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   317,   318,   711,   712,
     783,   784,   787,   458,   459,   460,   461,   462,   463,   464,
     770,   771,  1486,   610,  1160,    57,   448,   171,   793,   378,
       7,   717,   111,   378,   981,   932,   614,   916,     7,   228,
     125,   743,   796,   592,   592,   615,  1065,  1066,  1486,   200,
     981,   813,  1496,   813,   813,  1602,  1201,  1491,  1496,  1204,
    1204,  1204,   179,   372,   589,   605,  1210,    13,    20,  1206,
    1213,  1207,   738,  1588,  1214,  1207,   275,    33,   249,   275,
     442,   732,  1496,   744,  1486,  1366,  1364,   984,   923,   924,
     925,   943,   743,    52,   470,  1126,   192,  1642,  1362,   742,
     763,   764,   287,   287,   287,   287,   287,   287,   743,  1362,
    1434,   115,   576,   579,   846,   856,  1250,  1476,  1483,  1499,
     743,   160,   378,   739,   743,   583,   732,  1486,  1496,  1562,
     637,  1558,  1496,   160,   186,   201,   214,   266,   267,   294,
     363,   417,  1548,  1549,   635,  1307,  1308,  1486,  1491,  1491,
    1174,  1175,  1486,   236,  1305,   743,  1499,    31,   583,  1447,
    1501,  1501,   743,   583,   176,   429,   613,  1151,  1152,  1153,
     401,  1273,  1274,   583,  1443,    13,  1442,  1439,   743,   160,
     210,   378,   197,  1562,  1496,   145,   700,   720,   738,   747,
    1188,  1189,  1265,  1267,  1275,  1276,  1277,  1278,  1279,  1280,
    1281,  1486,  1588,  1307,  1186,   583,   583,   583,  1033,  1499,
    1381,   456,  1093,   433,   454,   496,  1532,  1529,  1527,  1564,
    1499,  1502,   194,   744,   744,   744,   744,   744,  1525,  1204,
    1533,   743,  1523,   249,  1416,  1492,  1204,   732,   981,   813,
     813,   813,  1486,   813,  1501,  1486,   287,   350,   543,  1408,
    1408,  1419,  1496,   813,  1419,  1501,  1411,   813,  1419,   252,
     561,   181,   194,  1402,   743,  1416,   788,  1411,  1411,  1415,
    1415,  1411,  1419,  1419,  1145,   514,  1137,    60,   739,   743,
    1588,  1473,   405,   194,   743,   739,  1256,   739,  1204,   739,
     739,   739,  1204,   150,   634,  1263,    21,   739,   615,   739,
     739,   739,   615,   743,  1259,   739,   732,   739,   743,   743,
     739,   739,   739,   197,   743,   739,   743,  1259,   739,   743,
     743,   743,   731,   743,   739,   739,   738,  1483,  1496,  1256,
     739,   739,   739,  1256,   739,   743,   739,   739,   739,   739,
     743,   739,   249,   739,   743,   743,   739,   743,   743,   739,
     739,   739,   743,   197,   743,  1256,   739,   739,   743,   743,
     743,   739,   197,  1204,   197,  1204,   197,  1204,   197,   739,
     743,   739,   739,   739,   739,   743,    21,   739,   743,   739,
     743,   739,   739,   690,  1234,  1234,   739,   743,  1229,   739,
    1229,   743,   739,  1234,  1234,  1234,  1259,   744,   744,   744,
    1499,  1204,   748,  1204,  1204,  1202,   739,   743,   738,   744,
     739,    73,   738,    73,   738,   402,   956,   216,   263,   745,
    1382,   404,   572,    13,   365,  1564,   404,   572,  1494,  1499,
     572,   572,   572,    19,  1559,   320,   321,   325,   326,  1100,
    1101,     5,   404,  1096,  1097,  1098,  1489,  1491,   122,   188,
     290,   373,   594,  1336,  1489,   122,   188,   219,   290,   373,
     594,  1334,  1491,  1491,   787,  1491,   788,   160,   126,  1141,
    1028,  1030,  1341,    22,   131,  1327,  1328,   743,  1332,  1332,
     667,   668,   670,  1197,  1198,  1199,   503,  1193,  1193,  1363,
    1486,  1496,   197,   743,   744,  1394,  1189,   122,   188,   219,
     290,   373,   594,  1335,  1338,  1339,   980,    77,    93,   265,
     343,   369,   431,   533,   816,   818,   263,   598,   934,   108,
     221,   394,   404,   411,   515,   612,   798,   799,  1491,   920,
     921,   290,   373,   594,   947,  1337,  1338,  1488,  1491,   920,
     947,   947,  1496,   922,  1382,  1073,  1496,  1050,  1051,  1163,
    1051,    64,   193,   418,   604,   997,  1049,  1064,  1073,  1496,
     738,  1496,   125,  1121,  1496,  1496,  1496,  1163,  1336,  1334,
    1496,  1334,    13,  1114,  1300,  1496,  1163,  1491,  1491,  1491,
    1491,  1028,  1382,  1334,  1114,   263,  1300,   263,  1496,  1496,
    1499,  1496,  1114,  1382,   186,   266,   369,   990,  1334,   125,
    1123,  1496,  1336,  1336,  1496,  1163,  1322,  1323,  1484,   125,
     986,  1334,  1491,  1163,  1496,  1496,  1486,  1163,  1163,    80,
      82,   125,   148,   187,   440,   989,   986,   986,   125,  1334,
    1496,  1334,  1114,   738,   372,  1499,  1382,  1382,   403,     7,
     144,   982,  1117,  1118,  1111,  1115,  1118,   718,   719,   933,
    1382,   707,  1640,   378,   808,  1103,   127,   248,  1486,   673,
     673,  1114,   418,  1296,  1297,  1298,  1496,   249,  1204,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   743,   788,   160,   160,   160,   160,   160,   160,
     160,   743,   788,   978,   979,  1486,   934,   709,   642,  1486,
    1337,   286,    77,   177,   184,   364,   917,   918,   919,   935,
     936,   937,   938,   941,   942,   943,   944,   945,   946,   932,
      48,   637,   654,  1567,  1573,  1382,    47,   216,   486,  1068,
    1068,   378,    21,   231,   275,   456,   738,   948,   949,   950,
     951,   952,   983,   985,  1181,  1183,  1378,  1456,  1496,   813,
     738,   473,  1617,     9,    31,   913,   179,   372,   589,   605,
    1588,    19,  1204,   165,  1318,  1207,  1207,   738,  1588,  1214,
    1207,   744,  1496,  1119,  1120,  1122,  1337,  1368,   984,  1501,
    1126,  1499,   743,   788,  1433,  1429,   854,   857,   858,   853,
     374,   485,   855,  1554,  1496,  1563,   744,   744,   583,   655,
    1307,   738,  1204,  1329,  1273,   743,  1176,  1177,  1493,   293,
     433,   643,  1539,  1538,  1204,  1491,   583,  1168,  1486,  1153,
     738,   501,   620,   621,   738,  1374,  1375,  1377,  1378,  1379,
    1335,   788,   847,   846,   385,  1554,  1563,   197,   738,  1588,
    1189,  1267,  1276,  1277,  1278,  1279,  1496,   743,   100,   238,
     258,   271,   355,   477,   549,  1268,  1269,  1270,  1273,  1305,
     212,  1319,  1307,  1564,  1564,  1564,  1494,  1494,   725,  1565,
      78,   595,   433,  1335,  1513,  1514,  1381,  1518,  1491,   197,
    1417,   739,  1496,   615,   275,   635,  1418,   428,  1329,  1401,
    1417,  1419,  1419,  1486,  1486,  1419,  1489,  1496,   743,   336,
     245,  1204,   739,  1233,  1234,  1233,  1233,  1233,   575,  1204,
    1204,   154,    35,    62,   112,   115,   123,   260,   354,   357,
     509,   579,   607,  1004,  1257,  1029,  1029,  1257,   739,  1233,
     739,   245,   245,  1204,  1204,  1204,   388,  1254,  1204,  1204,
    1204,  1204,  1204,  1207,   739,  1233,   739,  1233,  1204,  1204,
    1204,  1204,  1204,  1204,  1259,  1233,  1233,   245,  1204,  1204,
    1204,   739,  1233,  1204,  1204,  1204,  1204,   197,  1204,   197,
    1204,   197,  1204,  1204,  1233,  1233,  1204,    35,    62,  1334,
    1256,  1233,   738,  1235,  1236,  1237,  1496,   231,   694,  1231,
    1474,  1477,   739,  1231,   739,  1214,  1234,   739,   744,  1074,
    1301,  1301,  1225,  1258,  1496,   156,   738,  1207,   738,  1207,
    1335,   555,   957,   738,    12,   955,  1334,  1493,  1093,   456,
    1565,    21,    48,  1560,  1334,  1334,  1334,  1334,  1101,   285,
     606,   174,   465,   704,   705,  1098,  1491,   160,   406,  1142,
    1029,    73,  1457,  1481,  1363,   669,  1198,   342,   615,  1273,
     744,  1189,  1487,   732,  1496,   501,  1491,   533,   533,   533,
     533,   533,   492,  1491,   929,   930,   931,   935,   943,   945,
    1491,  1491,  1491,  1491,  1334,  1491,  1491,   739,   743,  1499,
    1073,   402,   738,  1073,   738,   263,   263,  1051,  1064,   738,
     615,   592,   992,   993,   994,   996,  1496,    34,    35,    40,
      42,    44,    45,    62,   112,   115,   123,   142,   159,   187,
     189,   205,   206,   247,   260,   279,   288,   289,   291,   328,
     329,   330,   347,   348,   349,   354,   357,   375,   376,   409,
     410,   435,   497,   501,   513,   573,   576,   579,   580,   581,
     582,   622,   623,   650,   999,  1002,  1003,  1004,  1005,  1006,
    1007,  1008,  1010,   656,   657,  1067,   144,   501,  1114,  1496,
    1159,   743,  1335,   125,  1029,  1491,   564,  1496,  1126,   637,
     564,  1491,   999,  1114,   743,  1327,  1114,   583,   583,  1300,
    1114,  1434,  1033,  1029,   923,   373,  1637,  1638,  1382,   137,
     152,  1641,    81,   488,   451,  1104,  1313,   378,   378,   739,
     739,   743,  1172,   738,  1334,  1489,  1334,  1334,  1489,  1489,
    1334,  1334,  1489,  1489,  1489,  1489,  1489,  1489,  1489,  1489,
    1334,  1334,  1489,  1477,  1489,  1334,   784,   738,   772,   772,
     738,   777,   777,   738,   780,   780,   738,   775,   771,   738,
     439,   599,   926,   927,   928,   935,   939,   940,   941,   942,
     943,   945,  1337,  1499,   738,   795,   212,  1382,  1382,  1382,
    1382,   984,   923,  1494,  1499,  1564,  1099,   612,   709,  1635,
    1486,  1378,  1486,   275,   992,   950,   949,   984,   951,   473,
     801,  1612,   123,   247,   435,   550,   991,   738,   130,   241,
     609,   914,  1206,   739,   743,  1214,    19,  1204,  1318,   732,
    1122,  1120,   925,   764,   194,   637,  1430,   160,   743,  1562,
     637,  1575,   732,   732,  1563,   385,  1329,   125,  1204,  1385,
    1386,   501,  1374,  1375,  1175,  1486,  1177,   231,  1178,  1455,
    1456,   643,   282,  1501,  1299,  1300,  1390,  1391,  1484,   739,
    1376,  1479,  1480,  1484,  1496,   738,  1380,  1383,   160,   197,
    1562,  1563,  1204,  1305,   743,   739,   739,   739,   739,   739,
    1265,  1266,  1267,  1275,  1265,   258,   258,   391,  1272,   238,
     271,   477,  1271,  1272,  1275,  1265,  1265,  1305,  1313,    48,
     217,  1309,  1319,  1093,   103,   984,  1533,  1336,  1406,   163,
     631,  1563,  1491,  1204,   373,  1407,  1411,  1411,  1334,  1204,
     739,  1233,  1204,   575,   738,  1018,  1019,  1019,   738,  1013,
     738,  1011,  1012,  1018,    62,   247,  1013,   247,  1019,   739,
     739,   739,   739,  1233,  1233,  1204,  1204,   739,   739,   743,
     739,    48,   495,  1253,   743,   743,   739,   743,   739,   249,
    1220,  1221,  1233,  1233,   739,   739,   739,   739,   743,   739,
     739,  1204,   739,   194,   739,   739,   743,  1233,   739,   743,
     743,   739,  1204,   739,  1204,   739,  1204,   739,   739,   739,
     738,  1040,  1040,   743,   739,  1236,  1238,  1239,   688,   688,
    1234,   743,  1230,  1230,  1231,  1234,  1231,   739,  1496,   739,
     959,  1496,   739,   959,   739,    48,   738,   961,  1207,   160,
     738,   228,  1565,  1494,  1491,  1495,  1494,   125,   245,   361,
     103,   125,  1335,   245,  1491,   160,   153,   164,   386,   571,
    1458,  1459,   278,  1460,  1189,  1307,  1496,  1307,   744,  1394,
    1390,   111,   111,   127,   248,   984,   799,   738,  1335,   401,
     962,   963,   738,  1204,  1073,   738,   738,  1070,  1071,  1072,
    1496,  1068,  1068,   739,   743,   999,  1018,  1018,  1019,    23,
      35,    49,   601,   626,  1018,  1028,  1036,  1037,  1038,  1013,
     414,  1009,   738,  1038,    62,   622,  1005,  1038,  1038,    62,
     623,   623,   626,   738,  1019,  1013,  1013,  1038,  1018,  1019,
     441,   995,   997,  1043,    27,    71,    75,    77,   125,   372,
     378,   418,   497,   547,   604,   706,  1021,  1022,  1023,  1034,
    1042,  1210,    35,  1018,  1039,  1018,  1018,  1019,   738,  1012,
    1020,  1011,   125,   125,   999,  1496,  1034,  1034,   566,     9,
     186,  1127,  1323,  1496,  1496,   246,  1151,   739,   730,   984,
     373,   730,  1639,  1642,   367,   416,    25,   168,   802,   583,
     137,   152,   804,  1603,  1300,  1300,  1297,   785,   786,  1334,
     739,   773,   774,  1496,   739,   778,   779,  1496,   739,   781,
     782,  1489,  1490,   738,   739,   776,  1071,  1382,  1382,   984,
     795,   384,  1071,   353,   714,   715,   716,  1496,  1491,   947,
     947,  1335,   919,    21,    48,  1096,  1636,   738,  1486,   739,
     985,   991,   378,   821,   822,   823,  1496,   516,  1618,   378,
    1259,  1206,   739,   743,  1431,   433,    56,    66,    76,    90,
      91,    92,   106,   334,   351,   472,   489,   551,   568,   859,
     858,   583,   210,   637,  1574,   739,   743,  1390,   378,  1387,
    1387,  1178,   269,   246,   739,   743,  1381,  1377,  1378,   739,
     743,   744,  1384,  1385,   743,   846,  1563,   197,   743,  1313,
    1265,   748,   258,  1272,  1272,   258,   258,   378,   615,   378,
     615,   192,   231,   614,  1291,  1292,  1293,  1294,  1295,  1204,
    1320,  1482,  1204,   698,  1315,  1309,  1565,   404,  1335,  1329,
    1329,  1308,  1419,  1301,  1204,   122,   290,   373,   594,  1038,
     373,   373,  1301,  1301,  1204,  1255,  1481,  1473,   739,  1204,
    1204,  1259,    44,   355,   739,   637,  1222,  1204,  1301,  1204,
    1204,  1204,  1204,   739,   739,   739,  1335,   739,   739,  1334,
    1233,   739,   401,  1240,  1204,  1234,  1234,   197,  1232,   739,
     743,   739,   954,   962,   739,  1335,   958,   959,    48,  1565,
    1565,   456,  1565,  1335,   125,   721,   125,  1335,  1491,    48,
      48,   153,    48,  1459,   537,   571,  1461,  1462,  1307,  1324,
    1307,   931,  1071,  1496,   739,   743,  1071,   739,   738,  1071,
    1204,   739,   743,   738,  1327,   993,   995,    35,    23,   601,
    1028,    35,  1038,  1029,  1075,  1473,  1038,   626,  1075,  1038,
     509,   607,   651,  1015,  1016,  1017,  1486,  1127,  1033,   125,
     148,   187,  1024,  1491,   115,   576,   579,   730,   731,   738,
    1026,  1027,  1475,  1476,   609,   125,   125,   139,   332,  1025,
     263,  1337,    71,  1023,   203,  1000,   263,   372,  1039,  1038,
    1039,  1015,   373,  1015,  1015,   738,  1475,  1127,  1486,  1496,
     738,   373,  1638,   373,   416,  1204,  1204,   378,   808,   813,
     378,    77,   809,    21,   637,  1155,   739,   743,   739,   743,
     739,   743,   744,   739,   743,   774,   739,   743,   739,   947,
     947,   928,   738,   739,  1489,  1489,  1489,  1489,  1495,  1494,
    1640,  1071,   739,   948,   516,   488,   739,   743,  1002,  1491,
     239,   249,   393,   824,   825,   826,   827,  1486,   739,  1259,
     175,   285,  1563,   385,   210,  1307,  1386,  1387,   147,   566,
    1391,  1386,  1377,  1378,  1479,  1496,   739,  1383,  1563,  1491,
     739,   258,   258,  1204,   738,  1204,   738,  1050,  1050,  1292,
     639,   743,  1321,  1236,  1316,  1317,  1315,   788,   739,   739,
     739,   739,   739,   739,   743,   739,   739,   739,   743,  1233,
     739,   743,   739,   342,   265,   428,   739,   739,   739,   739,
     739,   739,  1041,   743,    48,   388,  1241,   186,   266,  1231,
    1496,   216,   263,   739,   739,  1491,  1494,   120,   120,  1473,
    1473,    48,  1473,    48,    48,  1462,   276,  1333,  1324,   739,
     620,   964,   963,   739,  1069,  1070,   739,   739,    77,   262,
    1060,  1061,  1062,  1063,  1066,  1067,  1072,   373,  1029,  1039,
     739,   743,   739,  1017,   738,  1044,  1477,  1477,  1204,  1026,
     621,  1033,    15,    21,  1204,  1112,  1113,   962,  1301,   511,
    1491,   143,  1105,  1378,  1604,   373,   786,   774,   779,  1496,
     782,   743,   738,   637,  1054,  1055,  1056,  1063,   798,  1057,
    1058,  1059,  1063,   228,  1641,   739,  1491,   802,  1613,   823,
    1034,   739,   743,  1496,   194,   739,  1574,   385,  1329,   263,
    1486,    73,  1282,  1299,  1299,   194,  1290,  1290,  1482,    21,
     743,   373,  1481,  1204,   342,   173,   739,  1334,  1320,    48,
     430,   482,   682,  1242,  1248,  1234,   738,   955,   111,   465,
    1633,  1634,  1565,  1473,  1473,  1473,  1332,  1333,  1054,   249,
     272,    77,   111,   235,   322,   340,   364,   564,   975,   976,
     977,  1410,  1057,   739,   743,  1060,  1327,  1491,  1382,  1062,
     739,  1038,  1473,  1038,  1045,  1496,   319,  1046,   739,   738,
     739,   739,   803,   810,   811,   637,  1605,   674,   774,   774,
     398,  1119,  1056,   739,  1119,  1059,    48,  1060,   807,   808,
     473,  1619,   826,  1002,   149,   609,  1273,   738,   739,   739,
     739,   212,   258,   388,   738,   738,  1237,  1317,   739,   739,
     739,  1326,    33,   103,   245,   697,  1243,  1244,  1245,  1474,
    1477,  1207,   738,   136,   369,   535,   738,   966,   968,   574,
    1382,   136,   136,  1382,  1382,  1382,  1382,   738,   972,   977,
     158,  1043,  1070,  1334,  1327,   739,   743,   198,   400,   510,
     378,  1047,  1204,   538,   805,    54,    68,   182,   230,   257,
     270,   381,   474,   812,   863,   865,   866,   867,   869,   870,
     871,   872,   873,   874,   876,   884,   885,   888,   899,   902,
     904,   905,  1488,  1498,  1505,    53,    64,   282,   739,   743,
    1488,  1337,  1119,   804,  1002,   815,  1034,   484,  1390,  1030,
     701,  1283,  1284,  1496,  1305,    48,    48,  1296,  1298,   245,
     697,  1244,  1246,  1474,  1477,   484,  1204,   692,   679,  1247,
     692,   692,   739,   959,  1382,   535,   738,   967,   968,   969,
     327,   965,   968,  1491,  1382,  1382,  1337,  1337,  1335,  1496,
     555,   973,   974,  1382,  1496,   130,   609,   739,  1204,   155,
     806,   886,   889,  1496,   197,   363,   877,   864,  1498,  1498,
    1496,   868,   755,   292,   455,   636,   908,    32,   906,   745,
      64,   385,    64,   774,   809,  1034,   134,   816,   817,  1210,
    1620,   191,   413,  1606,  1607,   482,  1463,   703,   739,   743,
     194,  1002,   739,   739,  1204,   681,    19,   681,   681,  1301,
     103,   212,   369,   696,   554,   960,   739,  1493,   739,   743,
     327,   970,   971,  1207,  1491,  1491,  1499,   739,   743,  1499,
      52,   369,   470,   501,  1048,  1048,   548,   629,  1001,  1204,
    1204,   634,   891,   895,   197,  1496,   879,   880,  1204,   829,
     862,   863,   865,   867,   869,   871,   872,   873,   874,   876,
     884,   899,   902,   904,   829,   909,   907,   900,   903,   385,
     385,   739,   143,  1614,   134,   862,  1499,  1609,   228,  1457,
    1491,  1284,   702,  1034,  1301,  1246,   692,   484,   689,  1335,
     960,  1634,   968,   739,   743,   975,   974,     6,   125,   372,
     378,   378,  1021,   887,   896,   150,   895,   898,   246,   154,
    1204,   154,   862,   741,   608,  1204,   830,   908,   906,   810,
     815,   862,    48,  1460,  1282,   171,  1285,   681,   971,   609,
     130,   634,   890,   892,  1204,   829,   154,   875,   230,   881,
     292,   741,   911,   910,   124,   828,   831,   901,  1498,   901,
    1615,  1473,   231,  1464,   703,  1048,  1048,   893,   892,   898,
     897,    54,   878,  1496,   575,  1204,   143,    95,   172,   834,
     860,  1496,   154,   862,   741,   862,   373,   738,  1466,  1491,
    1204,   154,   575,   743,   829,   912,   829,   215,   743,  1002,
      86,   105,   741,   278,   482,  1465,   739,   742,  1467,  1468,
    1484,   501,  1469,   125,   162,   372,  1286,  1287,  1288,  1289,
     894,    54,   829,  1496,   882,   154,   154,   194,  1496,  1034,
     194,   194,  1499,   739,   743,  1470,  1471,  1484,  1491,  1288,
    1289,  1287,  1289,   378,   575,   150,   151,   883,   455,   636,
     832,   125,   861,   837,   838,  1334,   833,  1468,   743,  1381,
     378,   378,   162,   699,   829,   829,   879,   521,   523,   835,
     836,   837,   840,  1210,  1496,  1204,  1179,  1471,  1386,   743,
     862,   196,   836
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   749,   750,   750,   750,   750,   750,   751,   752,   751,
     751,   753,   753,   754,   754,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   755,   755,   755,   755,
     755,   755,   755,   755,   755,   755,   756,   757,   757,   758,
     759,   759,   761,   760,   762,   762,   763,   763,   764,   766,
     765,   768,   767,   769,   767,   770,   770,   771,   771,   771,
     771,   771,   771,   771,   772,   772,   773,   773,   774,   775,
     775,   776,   776,   777,   777,   778,   778,   779,   780,   780,
     781,   781,   782,   783,   783,   784,   784,   784,   784,   784,
     784,   784,   784,   784,   784,   784,   784,   784,   784,   784,
     784,   784,   784,   784,   784,   784,   784,   784,   784,   785,
     785,   785,   786,   787,   787,   787,   787,   788,   788,   789,
     789,   789,   789,   790,   791,   793,   792,   792,   792,   792,
     792,   792,   792,   794,   794,   795,   795,   795,   795,   795,
     796,   796,   797,   797,   797,   798,   798,   799,   799,   799,
     799,   799,   799,   799,   801,   800,   803,   802,   802,   804,
     804,   804,   804,   805,   805,   806,   806,   807,   807,   808,
     808,   809,   809,   811,   810,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   813,   813,
     814,   814,   815,   815,   816,   816,   816,   816,   816,   816,
     816,   817,   817,   817,   818,   818,   819,   820,   820,   821,
     821,   822,   822,   823,   824,   824,   825,   825,   826,   827,
     827,   827,   827,   828,   828,   829,   829,   830,   830,   831,
     831,   832,   831,   833,   831,   834,   834,   835,   835,   836,
     837,   837,   838,   839,   839,   840,   840,   840,   840,   840,
     841,   842,   842,   843,   843,   844,   844,   845,   845,   846,
     846,   846,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   848,   849,   850,   850,   850,   851,
     851,   852,   852,   853,   854,   854,   855,   855,   856,   857,
     857,   858,   859,   859,   859,   859,   859,   859,   859,   859,
     859,   859,   859,   859,   859,   860,   860,   861,   861,   862,
     862,   862,   862,   862,   862,   862,   862,   862,   862,   862,
     862,   862,   864,   863,   866,   865,   868,   867,   870,   869,
     871,   872,   873,   875,   874,   876,   877,   877,   877,   878,
     878,   880,   881,   882,   879,   883,   883,   883,   884,   884,
     886,   887,   885,   889,   888,   890,   890,   891,   891,   893,
     894,   892,   896,   897,   895,   898,   898,   900,   899,   901,
     901,   903,   902,   905,   904,   907,   906,   908,   909,   910,
     908,   911,   912,   908,   913,   913,   914,   914,   914,   915,
     915,   916,   916,   917,   917,   918,   918,   919,   919,   919,
     919,   919,   919,   919,   919,   919,   919,   920,   920,   921,
     921,   922,   922,   922,   922,   922,   922,   923,   923,   924,
     924,   925,   926,   926,   927,   927,   928,   928,   928,   928,
     928,   928,   928,   929,   929,   930,   930,   931,   931,   931,
     932,   933,   933,   934,   935,   936,   937,   938,   939,   940,
     941,   942,   943,   944,   945,   945,   946,   947,   947,   948,
     948,   949,   949,   950,   950,   950,   951,   951,   952,   953,
     953,   953,   953,   953,   953,   954,   954,   955,   955,   956,
     956,   957,   957,   957,   958,   958,   959,   959,   960,   960,
     961,   961,   962,   962,   963,   964,   964,   964,   965,   965,
     966,   966,   967,   967,   969,   968,   970,   970,   971,   971,
     972,   972,   973,   973,   974,   975,   975,   976,   976,   977,
     977,   977,   977,   977,   977,   977,   977,   978,   978,   979,
     979,   980,   980,   981,   981,   982,   982,   983,   983,   984,
     984,   985,   985,   985,   985,   985,   985,   985,   985,   985,
     985,   985,   985,   985,   985,   985,   985,   985,   985,   985,
     985,   985,   985,   985,   985,   985,   985,   985,   985,   985,
     985,   985,   986,   986,   987,   988,   989,   989,   989,   989,
     989,   989,   990,   990,   990,   991,   991,   991,   991,   992,
     992,   993,   993,   994,   995,   995,   995,   996,   996,   996,
     996,   996,   996,   997,   998,   998,   999,   999,  1000,  1000,
    1001,  1001,  1001,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
    1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
    1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
    1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,  1002,
    1003,  1003,  1003,  1003,  1003,  1003,  1003,  1003,  1004,  1004,
    1005,  1005,  1006,  1006,  1006,  1006,  1006,  1007,  1007,  1007,
    1007,  1007,  1008,  1008,  1009,  1009,  1010,  1010,  1010,  1010,
    1011,  1011,  1011,  1012,  1013,  1013,  1014,  1014,  1014,  1015,
    1015,  1016,  1016,  1017,  1017,  1017,  1018,  1018,  1018,  1018,
    1019,  1019,  1020,  1020,  1021,  1021,  1022,  1022,  1023,  1023,
    1023,  1023,  1023,  1023,  1023,  1023,  1023,  1023,  1023,  1023,
    1023,  1023,  1023,  1024,  1024,  1024,  1025,  1025,  1025,  1026,
    1027,  1027,  1028,  1028,  1029,  1029,  1030,  1030,  1031,  1031,
    1032,  1032,  1033,  1034,  1034,  1035,  1035,  1036,  1036,  1036,
    1037,  1037,  1037,  1038,  1038,  1038,  1038,  1038,  1038,  1038,
    1039,  1039,  1041,  1040,  1042,  1042,  1043,  1044,  1044,  1045,
    1045,  1046,  1046,  1046,  1046,  1047,  1047,  1047,  1047,  1047,
    1048,  1048,  1048,  1048,  1048,  1049,  1049,  1050,  1050,  1051,
    1051,  1052,  1052,  1052,  1053,  1053,  1054,  1054,  1055,  1055,
    1056,  1056,  1057,  1057,  1058,  1058,  1059,  1060,  1060,  1061,
    1061,  1062,  1062,  1063,  1063,  1063,  1064,  1064,  1064,  1065,
    1065,  1066,  1066,  1067,  1067,  1068,  1068,  1068,  1069,  1069,
    1070,  1070,  1071,  1071,  1072,  1072,  1073,  1073,  1074,  1074,
    1075,  1075,  1076,  1076,  1078,  1077,  1080,  1079,  1082,  1081,
    1084,  1083,  1085,  1083,  1087,  1086,  1088,  1089,  1089,  1089,
    1089,  1090,  1091,  1092,  1092,  1092,  1092,  1092,  1092,  1093,
    1093,  1094,  1095,  1096,  1096,  1097,  1097,  1098,  1098,  1098,
    1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,  1098,
    1099,  1099,  1100,  1100,  1101,  1101,  1101,  1101,  1102,  1103,
    1103,  1103,  1103,  1104,  1104,  1105,  1105,  1106,  1106,  1107,
    1107,  1108,  1108,  1109,  1109,  1110,  1110,  1110,  1110,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1112,
    1112,  1113,  1113,  1114,  1114,  1115,  1115,  1115,  1115,  1115,
    1116,  1116,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1117,  1118,  1118,  1118,  1119,  1119,  1119,
    1119,  1119,  1120,  1121,  1121,  1122,  1123,  1123,  1124,  1124,
    1125,  1125,  1126,  1126,  1126,  1127,  1127,  1127,  1128,  1128,
    1128,  1128,  1129,  1129,  1130,  1130,  1131,  1133,  1132,  1134,
    1135,  1135,  1136,  1136,  1137,  1137,  1137,  1138,  1139,  1139,
    1140,  1140,  1141,  1141,  1142,  1142,  1143,  1143,  1144,  1144,
    1145,  1145,  1146,  1146,  1147,  1147,  1147,  1147,  1147,  1148,
    1149,  1149,  1149,  1150,  1151,  1151,  1152,  1152,  1153,  1153,
    1153,  1154,  1155,  1155,  1156,  1156,  1156,  1157,  1158,  1159,
    1159,  1160,  1160,  1161,  1161,  1161,  1161,  1161,  1161,  1162,
    1163,  1163,  1163,  1165,  1164,  1164,  1166,  1166,  1167,  1167,
    1168,  1169,  1169,  1170,  1170,  1171,  1172,  1172,  1173,  1173,
    1174,  1174,  1175,  1176,  1177,  1177,  1178,  1178,  1179,  1179,
    1179,  1180,  1180,  1181,  1181,  1181,  1181,  1181,  1181,  1181,
    1182,  1182,  1182,  1182,  1182,  1183,  1183,  1184,  1185,  1185,
    1186,  1186,  1187,  1188,  1188,  1189,  1189,  1190,  1190,  1191,
    1191,  1192,  1192,  1193,  1193,  1194,  1194,  1195,  1195,  1195,
    1196,  1196,  1197,  1198,  1198,  1199,  1199,  1200,  1200,  1200,
    1201,  1201,  1202,  1202,  1202,  1202,  1202,  1203,  1203,  1204,
    1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,  1204,
    1205,  1205,  1205,  1205,  1205,  1206,  1206,  1206,  1206,  1206,
    1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,  1207,
    1207,  1207,  1207,  1207,  1208,  1208,  1209,  1209,  1210,  1210,
    1211,  1211,  1212,  1212,  1212,  1212,  1212,  1212,  1212,  1213,
    1213,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,
    1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,  1216,
    1216,  1216,  1216,  1217,  1217,  1217,  1217,  1217,  1217,  1217,
    1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,  1217,
    1217,  1217,  1217,  1217,  1217,  1217,  1218,  1218,  1218,  1218,
    1218,  1218,  1218,  1219,  1219,  1220,  1220,  1221,  1221,  1222,
    1222,  1223,  1223,  1224,  1224,  1225,  1226,  1226,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,
    1229,  1229,  1229,  1230,  1230,  1231,  1231,  1231,  1232,  1232,
    1232,  1233,  1233,  1234,  1235,  1235,  1236,  1237,  1238,  1239,
    1239,  1240,  1240,  1241,  1241,  1242,  1242,  1243,  1243,  1244,
    1244,  1244,  1244,  1244,  1245,  1246,  1246,  1246,  1246,  1246,
    1247,  1247,  1247,  1247,  1247,  1248,  1248,  1248,  1249,  1250,
    1251,  1251,  1251,  1252,  1252,  1253,  1253,  1254,  1254,  1255,
    1255,  1256,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,
    1257,  1257,  1257,  1257,  1258,  1258,  1259,  1259,  1260,  1260,
    1261,  1261,  1262,  1262,  1263,  1263,  1264,  1264,  1265,  1265,
    1265,  1266,  1266,  1267,  1267,  1267,  1267,  1267,  1267,  1268,
    1268,  1268,  1269,  1269,  1269,  1269,  1270,  1270,  1271,  1271,
    1272,  1272,  1273,  1273,  1274,  1275,  1275,  1275,  1275,  1275,
    1275,  1276,  1276,  1277,  1277,  1278,  1279,  1279,  1280,  1280,
    1281,  1282,  1283,  1283,  1284,  1284,  1284,  1285,  1285,  1286,
    1286,  1286,  1286,  1286,  1287,  1288,  1289,  1289,  1289,  1290,
    1290,  1290,  1290,  1291,  1291,  1292,  1292,  1293,  1293,  1294,
    1294,  1295,  1296,  1296,  1297,  1297,  1298,  1298,  1299,  1300,
    1300,  1301,  1301,  1301,  1301,  1301,  1301,  1301,  1301,  1301,
    1301,  1301,  1301,  1302,  1302,  1302,  1302,  1302,  1302,  1302,
    1302,  1302,  1303,  1303,  1303,  1303,  1304,  1304,  1304,  1305,
    1305,  1306,  1306,  1307,  1308,  1308,  1309,  1309,  1310,  1310,
    1311,  1311,  1312,  1313,  1313,  1314,  1314,  1315,  1315,  1316,
    1316,  1317,  1318,  1318,  1319,  1319,  1320,  1320,  1321,  1321,
    1322,  1322,  1323,  1324,  1324,  1325,  1326,  1326,  1327,  1327,
    1328,  1328,  1329,  1329,  1330,  1331,  1331,  1331,  1332,  1332,
    1332,  1332,  1332,  1333,  1333,  1334,  1334,  1334,  1334,  1334,
    1334,  1335,  1335,  1335,  1335,  1335,  1336,  1336,  1336,  1336,
    1336,  1337,  1337,  1337,  1337,  1338,  1339,  1339,  1340,  1340,
    1341,  1341,  1342,  1343,  1343,  1343,  1344,  1345,  1346,  1347,
    1348,  1349,  1349,  1350,  1351,  1352,  1353,  1354,  1355,  1356,
    1357,  1358,  1359,  1360,  1361,  1362,  1362,  1363,  1363,  1364,
    1364,  1365,  1365,  1366,  1366,  1367,  1367,  1368,  1368,  1369,
    1369,  1369,  1370,  1370,  1370,  1371,  1371,  1371,  1371,  1372,
    1372,  1373,  1373,  1374,  1374,  1374,  1375,  1375,  1375,  1376,
    1376,  1377,  1378,  1378,  1379,  1379,  1380,  1380,  1381,  1381,
    1382,  1382,  1383,  1384,  1384,  1385,  1385,  1386,  1386,  1387,
    1387,  1388,  1389,  1389,  1390,  1390,  1391,  1392,  1392,  1393,
    1393,  1393,  1394,  1394,  1395,  1395,  1396,  1396,  1396,  1397,
    1398,  1398,  1399,  1399,  1400,  1400,  1401,  1401,  1401,  1401,
    1401,  1401,  1401,  1401,  1401,  1402,  1402,  1404,  1403,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1406,  1405,  1407,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,  1405,
    1405,  1405,  1405,  1405,  1405,  1405,  1408,  1408,  1408,  1409,
    1409,  1410,  1410,  1411,  1411,  1412,  1412,  1413,  1413,  1414,
    1414,  1414,  1414,  1415,  1415,  1416,  1416,  1417,  1417,  1418,
    1418,  1418,  1419,  1419,  1419,  1420,  1421,  1422,  1422,  1422,
    1422,  1422,  1422,  1423,  1423,  1424,  1424,  1425,  1425,  1425,
    1427,  1426,  1429,  1428,  1428,  1430,  1430,  1431,  1430,  1432,
    1432,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,
    1433,  1433,  1433,  1434,  1434,  1436,  1435,  1435,  1437,  1437,
    1438,  1438,  1440,  1439,  1441,  1439,  1442,  1442,  1443,  1443,
    1445,  1444,  1446,  1447,  1447,  1448,  1449,  1449,  1449,  1450,
    1451,  1452,  1452,  1453,  1453,  1454,  1454,  1454,  1455,  1455,
    1456,  1456,  1457,  1457,  1458,  1458,  1459,  1459,  1459,  1459,
    1460,  1460,  1461,  1461,  1462,  1462,  1463,  1463,  1464,  1464,
    1465,  1465,  1466,  1466,  1466,  1467,  1467,  1468,  1468,  1469,
    1469,  1470,  1470,  1471,  1472,  1472,  1472,  1472,  1473,  1473,
    1473,  1474,  1475,  1475,  1475,  1476,  1476,  1476,  1476,  1476,
    1476,  1476,  1476,  1476,  1476,  1477,  1477,  1477,  1477,  1477,
    1478,  1478,  1478,  1479,  1479,  1480,  1480,  1481,  1482,  1483,
    1483,  1484,  1484,  1485,  1485,  1486,  1486,  1487,  1487,  1488,
    1488,  1489,  1490,  1491,  1492,  1493,  1494,  1495,  1496,  1496,
    1497,  1497,  1498,  1498,  1499,  1499,  1499,  1500,  1500,  1500,
    1501,  1501,  1501,  1502,  1502,  1503,  1503,  1503,  1503,  1503,
    1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,
    1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,
    1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,
    1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,
    1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,
    1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,  1504,
    1504,  1505,  1505,  1505,  1505,  1505,  1505,  1505,  1505,  1505,
    1505,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,
    1506,  1506,  1506,  1506,  1506,  1506,  1506,  1506,  1507,  1507,
    1508,  1509,  1509,  1509,  1509,  1509,  1510,  1510,  1510,  1510,
    1510,  1510,  1510,  1511,  1511,  1512,  1512,  1513,  1513,  1514,
    1515,  1515,  1516,  1516,  1517,  1517,  1518,  1518,  1519,  1519,
    1519,  1519,  1519,  1520,  1520,  1520,  1520,  1521,  1521,  1521,
    1521,  1522,  1522,  1522,  1522,  1522,  1522,  1523,  1524,  1524,
    1524,  1524,  1524,  1524,  1524,  1525,  1525,  1525,  1526,  1526,
    1527,  1528,  1528,  1529,  1530,  1530,  1531,  1531,  1532,  1532,
    1532,  1532,  1533,  1533,  1533,  1533,  1533,  1533,  1533,  1535,
    1534,  1534,  1536,  1536,  1537,  1537,  1538,  1539,  1539,  1539,
    1539,  1541,  1540,  1540,  1542,  1543,  1544,  1545,  1546,  1546,
    1546,  1546,  1546,  1547,  1547,  1548,  1548,  1548,  1548,  1549,
    1549,  1549,  1549,  1549,  1550,  1550,  1551,  1550,  1550,  1550,
    1552,  1552,  1553,  1552,  1552,  1554,  1554,  1554,  1554,  1555,
    1555,  1556,  1556,  1557,  1557,  1557,  1557,  1557,  1557,  1557,
    1557,  1557,  1557,  1557,  1557,  1557,  1557,  1557,  1557,  1557,
    1557,  1557,  1557,  1557,  1557,  1557,  1557,  1557,  1557,  1557,
    1557,  1557,  1557,  1557,  1557,  1557,  1557,  1558,  1558,  1559,
    1559,  1560,  1560,  1561,  1561,  1561,  1562,  1562,  1562,  1562,
    1563,  1563,  1564,  1564,  1565,  1565,  1566,  1566,  1567,  1567,
    1567,  1567,  1567,  1568,  1568,  1568,  1568,  1568,  1568,  1568,
    1569,  1569,  1570,  1570,  1571,  1571,  1572,  1572,  1573,  1573,
    1573,  1573,  1573,  1574,  1574,  1575,  1575,  1577,  1576,  1578,
    1578,  1579,  1579,  1579,  1580,  1580,  1580,  1581,  1581,  1582,
    1583,  1583,  1584,  1585,  1586,  1586,  1586,  1587,  1588,  1589,
    1590,  1590,  1590,  1590,  1590,  1590,  1590,  1590,  1591,  1592,
    1592,  1592,  1593,  1593,  1593,  1593,  1593,  1594,  1594,  1594,
    1594,  1594,  1594,  1595,  1595,  1596,  1597,  1598,  1598,  1598,
    1599,  1600,  1600,  1600,  1601,  1601,  1601,  1603,  1602,  1604,
    1605,  1605,  1605,  1605,  1606,  1606,  1607,  1607,  1609,  1608,
    1610,  1610,  1612,  1613,  1614,  1615,  1611,  1617,  1618,  1619,
    1620,  1616,  1621,  1621,  1621,  1621,  1621,  1621,  1622,  1622,
    1623,  1623,  1623,  1624,  1624,  1625,  1625,  1625,  1626,  1626,
    1627,  1627,  1627,  1628,  1628,  1629,  1629,  1630,  1630,  1631,
    1632,  1632,  1633,  1633,  1634,  1634,  1634,  1635,  1635,  1636,
    1636,  1637,  1637,  1638,  1638,  1639,  1639,  1640,  1640,  1641,
    1641,  1641,  1642,  1642
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     4,
       1,     2,     0,     4,     0,     2,     3,     1,     2,     0,
       3,     0,     6,     0,     6,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     3,     1,     3,     1,     2,
       3,     5,     7,     2,     3,     1,     3,     3,     2,     3,
       1,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     0,     3,     9,
       6,     7,     9,     4,    10,     0,     6,     2,     8,     7,
       6,     7,    11,     8,     7,     0,     3,     3,     6,     3,
       0,     3,    12,    11,    11,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     0,    12,     0,     6,     2,     0,
       1,     3,     1,     0,     2,     0,     2,     0,     1,     3,
       4,     0,     2,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       0,     2,     0,     2,     2,     2,     2,     2,     3,     3,
       1,     1,     1,     2,     3,     3,     3,     0,     3,     0,
       1,     3,     1,     3,     0,     1,     3,     1,     4,     0,
       1,     1,     1,     0,     3,     2,     3,     0,     3,     5,
       5,     0,     7,     0,     6,     1,     1,     1,     3,     1,
       1,     1,     3,     0,     1,     1,     1,     1,     2,     1,
       3,     1,     1,     0,     1,     0,     2,     3,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     4,     0,     1,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     0,     8,     1,     1,     1,     1,     1,     0,
       2,     0,     4,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     0,     1,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     3,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     4,     3,     1,     1,     3,     1,     1,     2,
       1,     2,     1,     0,     2,     1,     2,     1,     6,     6,
       5,     4,     5,     4,     5,     0,     1,     0,     3,     0,
       2,     0,     8,     9,     0,     1,     1,     3,     0,     2,
       0,     3,     1,     3,     5,     0,     4,     3,     1,     1,
       1,     3,     1,     3,     0,     4,     1,     3,     1,     1,
       0,     3,     1,     3,     3,     0,     1,     2,     1,     3,
       4,     3,     3,     3,     4,     4,     3,     0,     1,     1,
       2,     1,     1,     0,     3,     1,     2,     1,     3,     0,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     5,     1,     1,     3,     4,     4,     3,     2,     2,
       3,     3,     1,     1,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     3,     0,     1,     1,     6,     7,     7,
       7,     8,     2,     4,     0,     2,     2,     9,     0,     2,
       0,     1,     1,     3,     3,     3,     1,     2,     1,     1,
       3,     2,     3,     2,     2,     1,     3,     3,     2,     3,
       1,     2,     2,     2,     1,     2,     1,     1,     1,     2,
       3,     2,     3,     2,     2,     5,     5,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     2,     0,     1,     1,     1,     1,     1,
       0,     1,     1,     5,     0,     3,     0,     2,     3,     0,
       1,     2,     1,     1,     1,     1,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     1,     2,     1,     1,     2,
       2,     4,     3,     1,     3,     2,     1,     2,     2,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     2,
       1,     1,     2,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     1,     0,     2,     0,     1,     1,     2,     2,
       1,     2,     2,     0,     1,     1,     1,     3,     1,     3,
       0,     1,     0,     4,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     2,     2,     1,     1,     0,
       1,     1,     1,     1,     0,     1,     0,     1,     1,     2,
       1,     3,     0,     1,     1,     2,     1,     0,     1,     1,
       2,     1,     1,     3,     2,     1,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     0,     2,
       1,     3,     4,     4,     0,     5,     0,     5,     0,     5,
       0,     5,     0,     4,     0,    10,     7,     6,     6,     6,
       4,     7,     7,     5,     7,     5,     5,     5,     5,     0,
       2,     8,     3,     0,     1,     1,     2,     2,     2,     2,
       5,     3,     3,     3,     3,     5,     4,     3,     4,     4,
       0,     2,     2,     1,     2,     2,     2,     2,     3,     0,
       3,     1,     4,     0,     3,     0,     2,     0,     1,     1,
       2,     1,     3,     1,     2,     0,     1,     1,     3,     2,
       2,     3,     6,     5,     3,     4,     4,     4,     4,     5,
       4,     3,     3,     8,     7,     4,     4,     1,     1,     0,
       1,     2,     2,     1,     1,     1,     3,     3,     1,     3,
       1,     3,     6,     5,     2,     6,     5,     4,     4,     3,
       3,     2,     2,     6,     8,     5,     4,     3,     5,     5,
       5,     5,     1,     3,     1,     1,     1,     0,     1,     1,
       2,     2,     3,     1,     1,     3,     1,     1,     0,     1,
       0,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     2,     2,     2,     4,     3,     0,     4,     3,
       0,     1,     1,     3,     3,     2,     2,     4,     0,     3,
       0,     3,     0,     3,     0,     3,     0,     1,     1,     3,
       1,     1,     0,     2,     1,     3,     3,     3,     1,     4,
       0,     1,     1,     5,     0,     1,     1,     2,     1,     1,
       1,     5,     0,     3,     0,     5,     4,     2,     4,     0,
       1,     1,     2,     1,     1,     1,     1,     1,     2,     4,
       0,     1,     1,     0,     4,     3,     3,     5,     1,     3,
       3,     5,     7,     1,     3,     2,     1,     1,     8,     5,
       1,     3,     3,     4,     0,     4,     0,     2,     1,     1,
       1,     3,     2,     4,     5,     4,     5,     3,     4,     3,
       1,     4,     4,     4,     4,     3,     3,     1,     9,     8,
       0,     1,     2,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     1,     0,     1,     2,     1,     3,     4,     4,
       1,     1,     2,     0,     1,     2,     1,     3,     1,     1,
       1,     2,     0,     2,     2,     1,     1,     0,     2,     3,
       3,     3,     2,     3,     4,     3,     4,     3,     4,     1,
       3,     4,     3,     4,     1,     3,     4,     5,     7,     6,
       8,     5,     6,     4,     4,     5,     3,     4,     1,     3,
       3,     3,     3,     3,     3,     5,     5,     3,     3,     3,
       3,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     1,     3,     2,     2,     2,     2,     1,     3,     5,
       6,     2,     4,     7,     2,     6,     5,     6,     6,     4,
       4,     5,     3,     3,     4,     6,     2,     4,     4,     4,
      10,     6,     8,     6,     4,     4,     6,     4,     4,     4,
       6,     4,     7,     7,     7,     6,     6,     6,     6,     3,
       4,     6,     8,     2,     2,     8,     8,     6,     6,     1,
       6,     6,     8,     8,     6,     8,     6,     2,     8,     8,
       2,     2,     2,     4,     4,     4,     4,     3,     8,     6,
       8,     4,     6,     4,     6,     8,     4,     3,     6,     4,
       6,     4,     7,     7,    10,     1,     4,     4,     4,     4,
       4,     6,     4,     4,     6,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     2,     1,     1,     5,     6,
       5,     5,     5,     7,     5,     6,     5,     6,     5,     6,
       5,     6,     5,     5,     5,     5,     5,     6,     8,     4,
       4,     4,     4,     4,     5,     7,     7,     6,     6,     9,
       0,     3,     3,     0,     2,     0,     2,     2,     0,     2,
       2,     0,     1,     2,     1,     1,     1,     3,     4,     0,
       1,     0,     3,     0,     3,     0,     3,     1,     1,     2,
       2,     2,     4,     2,     4,     1,     2,     2,     2,     4,
       0,     3,     2,     2,     3,     1,     1,     1,     4,     2,
       3,     1,     4,     0,     1,     0,     2,     0,     3,     3,
       1,     2,     2,     3,     2,     1,     2,     1,     2,     1,
       2,     2,     2,     1,     0,     1,     1,     3,     1,     3,
       1,     3,     0,     1,     0,     2,     4,     5,     1,     1,
       4,     1,     1,     5,     7,     5,     7,     3,     3,     3,
       4,     4,     1,     2,     2,     1,     3,     3,     0,     1,
       0,     1,     0,     1,     4,     1,     1,     1,     1,     1,
       1,     3,     5,     3,     3,     4,     3,     3,     3,     4,
       8,     4,     1,     3,     3,     7,     4,     0,     1,     0,
       1,     1,     2,     2,     3,     3,     1,     1,     2,     0,
       2,     3,     3,     1,     1,     6,     6,     1,     2,     0,
       1,     1,     0,     1,     1,     1,     1,     3,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     0,
       2,     0,     1,     1,     0,     2,     0,     2,     2,     3,
       3,     1,     4,     0,     3,     1,     3,     0,     2,     1,
       3,     3,     2,     0,     0,     4,     3,     1,     0,     1,
       3,     1,     2,     0,     1,     3,     3,     1,     0,     1,
       1,     1,     0,     1,     2,     1,     3,     3,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       2,     1,     2,     5,     2,     1,     3,     0,     6,     6,
       4,     6,     4,     5,     4,     4,     5,     4,     4,     4,
       5,     5,     4,     6,     4,     1,     3,     1,     3,     0,
       2,     0,     1,     0,     1,     1,     3,     1,     1,     8,
       9,     8,     6,     7,     6,     0,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     4,     1,     3,     4,     3,
       1,     2,     1,     1,     1,     1,     3,     1,     1,     1,
       0,     1,     3,     0,     1,     3,     1,     1,     1,     0,
       5,    10,     0,     1,     3,     1,     3,     0,     1,     9,
       7,     8,     0,     2,     0,     2,     1,     1,     1,     3,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     6,     2,
       2,     0,     6,     0,     7,     6,     2,     5,     5,     2,
       2,     1,     4,     3,     2,     3,     2,     2,     1,     1,
       3,     5,     4,     3,     3,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     0,     1,     0,
       1,     1,     2,     1,     1,     0,     2,     0,     2,     0,
       2,     2,     0,     2,     2,     3,     3,     1,     1,     1,
       1,     1,     3,     1,     1,     0,     3,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     3,     0,     3,     3,
       1,     2,     2,     2,     2,     2,     3,     1,     1,     1,
       1,     1,     1,     0,     1,     0,     3,     3,     3,     1,
       0,     2,     0,     4,     0,     3,     0,     1,     0,     2,
       0,     3,     3,     2,     2,     3,     0,     1,     1,     2,
      18,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       2,     2,     2,     1,     1,     3,     5,     2,     1,     1,
       1,     1,     1,     3,     5,     1,     3,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     2,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     5,     7,     3,     3,     3,     6,
       6,     6,     4,     0,     2,     4,     6,     1,     3,     1,
       2,     2,     0,     2,     1,     3,     2,     1,     1,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     0,     2,     2,     2,     2,     2,     3,     3,     4,
       6,     2,     3,     3,     2,     1,     3,     3,     2,     2,
       1,     0,     2,     3,     0,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     4,     1,     1,     1,     3,     3,     1,     1,     2,
       2,     0,     3,     2,     1,     1,     3,     4,     4,     3,
       6,     7,    10,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     4,     7,     0,     9,     8,     6,
       5,     8,     0,    10,     7,     0,     1,     1,     1,     0,
       1,     1,     3,     2,     3,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     2,     2,     0,     3,     0,
       1,     3,     1,     2,     2,     2,     1,     3,     3,     1,
       1,     3,     1,     3,     0,     3,     0,     3,     4,     4,
       6,     6,     1,     7,     9,     5,     4,     7,     7,     2,
       1,     3,     1,     3,     0,     3,     1,     3,     0,     2,
       2,     2,     2,     0,     3,     0,     3,     0,     3,     0,
       1,     0,     3,     2,     0,     1,     2,     0,     1,     4,
       4,     5,     2,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     3,
       3,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     1,     2,     1,
       2,     3,     3,     3,     0,     3,     3,     0,     7,     2,
       0,     3,     4,     4,     1,     1,     0,     2,     0,    12,
       7,     6,     0,     0,     0,     0,    14,     0,     0,     0,
       0,    11,     4,     4,     3,     4,     3,     3,     0,     2,
       1,     3,     5,     1,     1,     0,     1,     1,     0,     2,
       0,     1,     3,     5,     3,     3,     3,     1,     3,     4,
       6,    10,     1,     5,     0,     2,     3,     1,     1,     0,
       3,     1,     3,     1,     3,     1,     2,     0,     3,     0,
       1,     1,     0,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 1923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 21960 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 1928 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 21974 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 1938 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 21996 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 1956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 22004 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 1963 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 22020 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 1975 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 22047 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 2000 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 22056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 2012 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 22062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 2018 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22068 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2019 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22074 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2020 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22080 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 2022 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2023 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22092 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 2025 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2026 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22104 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22110 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 2029 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22116 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2030 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22122 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 2032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22128 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 2034 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22134 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 2036 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22140 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2037 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22146 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2038 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22152 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2039 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22158 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 2045 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22164 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 2049 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22170 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2050 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22176 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2051 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22182 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 2053 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22188 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2054 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22194 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 2057 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22200 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 2059 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22206 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2061 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2063 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22230 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2064 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22236 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2065 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22242 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 64:
#line 2067 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22248 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2068 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22254 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2069 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22260 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22266 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2072 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2073 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2075 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22284 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2076 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22290 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2078 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22296 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2082 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22302 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2083 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22308 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2084 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22314 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2085 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22320 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2088 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22326 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2089 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22332 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2091 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22338 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2092 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22344 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2093 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22350 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2095 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 22356 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22362 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2099 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22368 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2101 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22374 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22380 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2104 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22386 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22392 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2107 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22398 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2108 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 22404 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2113 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lex_str));
          }
#line 22415 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2128 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 22436 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2148 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 22447 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 22458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2165 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lex_str));
          }
#line 22469 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2172 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22475 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2187 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 22486 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2199 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 22498 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2207 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 22508 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 22523 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2229 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22529 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 22543 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2241 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 22549 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2250 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 22560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2257 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 22571 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 22582 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2271 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 22593 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 22604 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2285 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 22616 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2293 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 22627 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2302 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 22637 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2308 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 22645 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2315 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 22656 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2322 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 22665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2330 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 22676 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2339 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 22686 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2345 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 22694 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2351 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 22706 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2359 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 22716 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2367 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 22726 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2373 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 22734 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2380 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 22745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2387 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 22754 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2395 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lex_str).str, (yyvsp[-2].lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            (yyval.item)= table_item;
          }
#line 22767 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2407 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 22777 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2413 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 22785 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2420 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 22796 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2427 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 22805 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2435 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 22816 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2450 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 22824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2454 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lex_str).str;
          }
#line 22832 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 22840 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2462 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lex_str).str;
            if (strlen((yyvsp[0].lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 22854 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2472 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 22862 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2476 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 22870 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2480 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 22879 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2485 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 22894 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2496 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 22903 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2501 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 22911 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2505 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 22919 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2509 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lex_str).str;
          }
#line 22927 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2513 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 22935 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 22943 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2521 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 22951 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2525 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 22960 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2530 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 22968 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2534 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 22976 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2538 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lex_str).str;
          }
#line 22984 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2542 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 22994 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2548 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 23032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2582 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 23040 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2587 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 23050 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2604 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 23058 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2610 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 23066 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2614 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 23086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2630 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 23094 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2634 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 23105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2644 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 23114 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2649 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lex_str).str);
         Lex->mi.channel= (yyvsp[0].lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 23130 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 23143 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2675 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 23156 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2685 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 23164 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2690 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 23172 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2697 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 23180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2707 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 23190 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2716 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 23202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2724 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 23213 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2731 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23219 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2735 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-3].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 23233 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2746 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lex_str), pc, (yyvsp[-1].lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 23256 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2766 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lex_str), (yyvsp[-2].lex_str), (yyvsp[-1].lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 23278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2785 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lex_str), (yyvsp[-1].lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 23301 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2805 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 23318 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2822 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 23326 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2827 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 23334 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2834 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_OOM, MYF(0)); /* purecov: inspected */
          }
#line 23344 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2840 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lex_str);
            }
          }
#line 23360 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2852 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lex_str);
            }
          }
#line 23376 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2865 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 23393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2878 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lex_str);
            }
          }
#line 23409 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2893 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 23417 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2898 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 23425 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2907 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 23436 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2915 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 23447 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 23458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2938 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lex_str));
          }
#line 23466 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2942 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lex_str));
          }
#line 23474 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2946 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lex_str));
          }
#line 23482 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2950 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lex_str));
          }
#line 23490 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2954 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 23499 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2959 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lex_str));
          }
#line 23507 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 2963 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 23515 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2970 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 23535 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 2990 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 23547 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3001 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 23558 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3010 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 23568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 229:
#line 3018 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 23574 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 3020 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 23584 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3026 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 23594 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 23604 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3041 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 23615 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3048 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 23625 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3058 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 23635 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3066 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 23641 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3072 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 23651 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3078 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 23661 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 241:
#line 3086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 23667 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3088 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 23676 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3095 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 23726 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3141 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 23740 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3170 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (*THR_MALLOC) sp_name(to_lex_cstring((yyvsp[-2].lex_str)), (yyvsp[0].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 23758 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (*THR_MALLOC) sp_name(db, (yyvsp[0].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 23778 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23784 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3203 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23790 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3207 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23796 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3208 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23802 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3214 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lex_str)); }
#line 23808 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 265:
#line 3216 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 23814 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 23820 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3220 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 23826 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 23832 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 23838 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3226 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23844 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 23850 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3232 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 23856 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3233 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 23862 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3238 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 23870 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3242 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 23878 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3249 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 23886 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3255 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 23892 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3257 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 23900 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3275 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[0].charset)))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lex_str), true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 23952 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3337 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lex_str), true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[0].charset)))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_STR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.maybe_null= true;
          }
#line 24003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3386 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 24009 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3387 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 24015 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3388 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 24021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3389 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 24027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24033 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3398 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24039 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3404 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 24047 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3408 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 24072 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3436 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[-1].charset)))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_STR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.maybe_null= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 24171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3531 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 24192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 301:
#line 3548 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 24237 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3589 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 24275 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3626 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 24288 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3635 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 24353 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3698 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 24359 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3699 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 24365 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3705 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 24371 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3707 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 24377 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3712 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 24401 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3735 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 24416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3750 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lex_str)) || is_sqlstate_completion((yyvsp[0].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 24439 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3771 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24445 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3772 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24451 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3777 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 24459 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3781 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 24476 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3794 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 24486 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3800 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 24496 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3806 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 24506 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3815 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 24520 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3828 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 24550 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3854 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 24556 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3859 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 24562 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3861 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 24568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3866 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 24574 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3868 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 24580 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3873 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 24590 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3880 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 24600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3892 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 24606 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3894 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 24630 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3914 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 24636 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3920 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 24642 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3922 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 24648 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3924 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 24654 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3926 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 24660 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3928 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 24666 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3930 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 24672 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3932 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 24678 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3934 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 24684 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3936 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 24690 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3938 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 24696 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3940 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 24702 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3942 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 24708 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3947 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 24723 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3961 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 24740 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3977 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 24746 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3979 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 24752 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 3981 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 24758 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3986 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 24768 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3992 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 24778 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4001 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 24788 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 24798 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4016 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 24808 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4024 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[0].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 24840 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4052 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 24849 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 24855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 24861 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4071 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 24867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4076 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 24877 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4082 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 24887 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4091 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 24897 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4099 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 24903 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4101 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 24909 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4103 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 24915 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 24921 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4107 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 24927 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4109 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 24933 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4111 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 24939 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4113 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 24945 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4115 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 24951 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4117 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 24957 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4119 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 24963 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4121 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 24969 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4123 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 24975 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4128 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lex_str), true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 24999 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4148 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lex_str), true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 25023 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 25032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4176 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 25041 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 4200 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 25047 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 4202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 25057 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 4210 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 25070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 4219 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 25122 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 4270 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 25134 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 4278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 25184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 4326 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
#line 25199 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 4337 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 25212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 400:
#line 4349 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 25270 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 401:
#line 4406 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 25318 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 402:
#line 4453 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 25342 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 403:
#line 4476 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 25366 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 4496 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25372 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 405:
#line 4501 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 25396 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4530 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 25418 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4548 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 25440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 25452 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4576 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 25493 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4614 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
#line 25515 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4632 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 25528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4655 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 25542 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 25588 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4710 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 25596 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4717 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 25604 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4724 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 25612 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4741 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 25624 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4749 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 25669 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4791 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 25678 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 432:
#line 4799 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 25690 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 25731 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4845 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 25740 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4853 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 25758 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4871 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 25780 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4889 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 25801 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4908 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 25807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4909 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 25813 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4914 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 25833 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4930 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 25852 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4947 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 25867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4958 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 25876 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4966 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 25893 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4981 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 25927 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 5015 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 25944 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 5028 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 25956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 5036 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 25998 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 5077 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 26017 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5094 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26029 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 26071 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5145 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 26077 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5147 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 26083 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5152 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 26089 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5154 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 26095 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5156 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 26101 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5170 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= { nullptr, 0}; }
#line 26107 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5172 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lex_str) = (yyvsp[0].lex_str);
      }
#line 26115 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5178 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= { nullptr, 0}; }
#line 26121 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 26129 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5186 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 26135 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26145 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5198 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5219 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 26161 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5225 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26181 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 5248 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 26187 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 5254 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 26197 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 5260 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 26207 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 5272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 26213 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 5278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26223 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 5284 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26233 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 5302 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 26239 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 505:
#line 5308 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26249 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 5314 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 26259 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 510:
#line 5328 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 26265 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 511:
#line 5332 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 26271 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 512:
#line 5333 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 26277 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 5337 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 26283 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 5342 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 26291 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 5349 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 26299 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 5356 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 26307 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 5363 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 26315 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 5370 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 26323 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5377 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 26331 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 26339 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5391 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lex_str));
          }
#line 26347 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5398 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine((yyvsp[0].lex_str));
          }
#line 26355 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5405 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 26363 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5412 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 26371 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 26379 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5423 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lex_str));
          }
#line 26387 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5429 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 26393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5431 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[0].lex_str).str;
            size_t str_len= (yyvsp[0].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 26443 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5507 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 26452 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 26461 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5525 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 26472 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5533 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression);
          }
#line 26483 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression);
          }
#line 26494 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5549 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression)= (yyvsp[0].query_expression); }
#line 26500 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5566 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 26508 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5573 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 26516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5577 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 26524 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5581 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 26532 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5585 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 26540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5589 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 26548 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5593 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 26556 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5599 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 26562 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 546:
#line 5600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 26568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5605 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 26574 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5607 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 26592 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5624 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 26598 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5626 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 26611 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5637 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 26617 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5640 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 26625 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5645 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 26633 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5652 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 26639 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5659 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lex_str).str))
              MYSQL_YYABORT;
          }
#line 26649 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lex_str).str))
              MYSQL_YYABORT;
          }
#line 26659 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5674 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 26665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5676 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 26678 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5687 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 26684 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5688 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 26690 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5693 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 26700 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5699 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 26710 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5708 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 26719 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5716 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 26727 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5720 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 26736 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5725 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 26745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5732 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 26751 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5738 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 26759 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5742 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 26767 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5749 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 26778 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5756 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 26788 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5765 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 26803 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5776 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 26811 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5783 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 26821 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5789 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 26831 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5797 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 26837 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5798 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 26843 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5803 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 26849 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5804 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 26855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5809 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 26865 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5815 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 26875 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 26883 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5830 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 26889 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5836 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 26899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5842 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 26909 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5851 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lex_str).str); }
#line 26915 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5853 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine((yyvsp[0].lex_str)); }
#line 26921 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 26927 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5857 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 26933 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5859 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 26939 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5861 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lex_str).str); }
#line 26945 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5863 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lex_str).str); }
#line 26951 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5865 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lex_str).str); }
#line 26957 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5873 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26963 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5874 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26969 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5878 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26975 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 600:
#line 5879 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26981 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5884 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].charset)))
              MYSQL_YYABORT;
          }
#line 26990 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5889 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].charset)))
              MYSQL_YYABORT;
          }
#line 26999 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5896 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 27005 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5897 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 27011 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5902 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5908 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27031 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 5917 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27041 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27051 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 5937 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option((yyvsp[0].lex_str));
          }
#line 27059 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5941 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 27067 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5945 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option((yyvsp[0].lex_str));
          }
#line 27075 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 5949 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 27083 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5953 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 27091 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 5957 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 27099 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5961 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lex_str).str);
          }
#line 27107 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5965 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lex_str));
          }
#line 27115 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 5969 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lex_str));
	  }
#line 27123 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 5973 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lex_str));
	  }
#line 27131 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 5977 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 27139 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 5981 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 27147 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 5985 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 27155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 624:
#line 5989 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 27163 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 625:
#line 5993 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 27184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6010 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 27192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6014 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 27200 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6018 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 27208 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6022 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 27216 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6026 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 27224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6030 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 27232 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6034 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].charset));
          }
#line 27240 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6038 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].charset));
          }
#line 27248 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6042 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 27256 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6046 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lex_str).str);
          }
#line 27264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6050 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lex_str).str);
          }
#line 27272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6054 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lex_str).str);
          }
#line 27280 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6058 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 27288 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 27296 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6066 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lex_str));
          }
#line 27304 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 27312 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6077 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 27330 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6090 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 27336 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6094 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset) = (yyvsp[0].charset); }
#line 27342 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset) = (yyvsp[0].charset);}
#line 27348 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 27354 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6103 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 27360 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6104 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 27366 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 27372 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6106 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 27378 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6107 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 27384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6111 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 27390 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6112 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 27396 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6113 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 27402 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6117 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 27408 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6118 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 27414 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6119 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 27420 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6120 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 27426 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6125 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 27436 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6131 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 27446 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6139 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 27452 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6140 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 27458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6145 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lex_str), (yyvsp[-1].field_def), (yyvsp[0].check_constraint));
          }
#line 27466 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6151 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.check_constraint)= NULL; }
#line 27472 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6153 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Currently we ignore the CHECK clause.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= (yyvsp[0].check_constraint);
          }
#line 27485 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6162 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.check_constraint)= NULL;
          }
#line 27494 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 27503 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6177 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 27512 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6183 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 27520 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6188 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 27533 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6197 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lex_str), (yyvsp[-4].lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 27545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6205 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= (yyvsp[0].check_constraint);
          }
#line 27553 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Currently we ignore CHECK clauses in the query executor.

              Return expression for syntax validation purposes only:
            */
            (yyval.check_constraint)= NEW_PTN PT_check_constraint((yyvsp[-1].item));
          }
#line 27566 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6223 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= NULL_STR; }
#line 27572 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 27578 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6229 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 27586 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6235 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yyvsp[-7].charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 27607 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6259 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 27613 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6260 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 27619 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6261 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 27625 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6266 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 27633 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6270 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 27641 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6274 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type((yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 27649 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 27657 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6282 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 27665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6286 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 27673 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6290 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 27681 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6294 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27690 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6299 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27699 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6304 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 27712 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6313 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 27725 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6322 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 27733 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6326 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 27741 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6330 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27750 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6335 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 27763 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6344 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 27771 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6348 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 27791 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6364 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 27799 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6368 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 27807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6372 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 27815 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6376 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 27823 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6380 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 27831 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 27839 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6389 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 27847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 27855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6397 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 27863 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6401 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27872 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6406 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27881 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6411 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27890 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6421 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27908 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6426 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27916 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6430 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27924 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6434 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 27933 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6439 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 27941 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6443 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 27949 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6450 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 27955 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6452 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 27961 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6454 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 27967 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6456 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 27973 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 27979 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6460 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 27985 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6462 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 27991 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6464 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 27997 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6468 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6469 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28009 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6473 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28015 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6474 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6478 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6479 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28033 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6480 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28039 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28045 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6482 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28051 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6486 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 28057 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6487 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 28063 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6488 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 28069 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6489 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 28075 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6490 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 28081 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6495 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 28090 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6500 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 28096 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6509 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 28102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6510 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 28108 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 28114 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6512 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 28120 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 28129 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6522 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 28138 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6531 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lex_str).str;
          }
#line 28147 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6539 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 28153 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lex_str).str; }
#line 28159 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6544 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28165 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 28171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6547 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lex_str).str, NULL, &error);
           }
#line 28180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6554 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option)= Field_option::NONE; }
#line 28186 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option)= static_cast<Field_option>(static_cast<ulong>((yyvsp[-1].field_option)) |
                                          static_cast<ulong>((yyvsp[0].field_option)));
          }
#line 28195 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option)= Field_option::NONE; }
#line 28201 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6569 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option)= Field_option::UNSIGNED; }
#line 28207 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6570 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option)= Field_option::ZEROFILL_UNSIGNED; }
#line 28213 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6574 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lex_str).str; }
#line 28219 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6575 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lex_str).str; }
#line 28225 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6576 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lex_str).str; }
#line 28231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6577 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lex_str).str; }
#line 28237 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6580 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 28243 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6586 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 28252 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6594 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 28258 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 28268 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6606 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 28279 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6616 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 28287 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6620 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 28295 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6624 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 28303 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6628 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 28311 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6632 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 28319 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6636 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 28327 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6640 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 28335 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6644 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 28343 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6648 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 28351 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6652 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 28359 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6656 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr((yyvsp[0].lex_str));
          }
#line 28367 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6660 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyvsp[0].charset));
          }
#line 28375 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6664 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 28383 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6668 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 28391 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6672 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 28404 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6683 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 28410 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6684 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 28416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6685 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 28422 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6689 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 28428 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6690 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 28434 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6691 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 28440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6696 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 28448 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6702 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 28456 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6715 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.charset), (yyvsp[0].lex_str).str);
          }
#line 28469 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6723 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 28475 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6727 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= NULL; }
#line 28481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6728 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset) = (yyvsp[0].charset); }
#line 28487 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6733 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 28500 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6741 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_bin; }
#line 28506 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=(yyvsp[0].charset);   }
#line 28512 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6746 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)=NULL; }
#line 28518 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6751 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[0].lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.charset));
          }
#line 28528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6759 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset) = nullptr; }
#line 28534 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6760 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset) = (yyvsp[0].charset); }
#line 28540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6764 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28546 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6765 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28552 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6770 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1; }
#line 28558 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6771 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1_bin; }
#line 28564 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6772 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.charset)= &my_charset_latin1_bin; }
#line 28570 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6777 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 28582 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6785 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 28591 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6790 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 28600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6798 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 28609 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6803 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 28618 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6808 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 28627 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 6813 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 28636 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 6818 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].charset)) : (yyvsp[-1].charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 28647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 6825 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 28656 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6830 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 28667 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6839 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28673 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6840 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28679 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6845 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 28691 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6853 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 28697 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 28709 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6877 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 28715 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6878 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 28721 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6883 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 28732 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6890 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 28743 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 28749 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6900 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 28755 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6901 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 28761 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6902 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 28767 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6907 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 28776 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6912 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 28785 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 6917 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 28794 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 6923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 28803 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 6929 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 28812 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 6936 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 28818 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 6937 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 28824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 6938 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 28830 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 6939 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 28836 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 6940 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 28842 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 6944 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 28848 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 6945 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 28854 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 6949 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28860 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 6950 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28866 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 6954 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28872 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 6959 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28878 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 6960 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28884 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 6961 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28890 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 6965 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 28896 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 6966 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 28902 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 6970 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 28908 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 6976 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28918 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 6982 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 28928 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 6992 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lex_str)));
          }
#line 28943 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7005 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 28949 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7011 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28959 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7017 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 28969 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7029 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 28975 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7035 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28985 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7041 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 28995 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7049 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 29001 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7050 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 29007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7055 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 29013 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7057 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lex_str)));
          }
#line 29021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7061 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 29029 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7084 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lex_str), NULL}; }
#line 29035 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7085 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 29041 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 29047 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7090 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 29053 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7095 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 29059 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7096 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 29065 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 893:
#line 7100 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 29071 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7101 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 29077 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 29083 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7106 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 29089 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7107 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 29095 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7112 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 29105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7118 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 29116 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7128 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 29126 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7134 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 29142 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7149 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 29152 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 29163 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7166 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 29173 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7174 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= NULL_STR; }
#line 29179 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7179 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= null_lex_str; }
#line 29185 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 29191 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7185 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 29201 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7191 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 29210 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7203 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 29224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7213 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 29238 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7226 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 29250 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7234 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 29263 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 916:
#line 7246 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 29278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7257 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 29289 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7267 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 29304 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 29315 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7288 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 29330 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7299 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29336 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7306 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 29352 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7318 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29358 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7323 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 29378 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7343 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 29395 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7360 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lex_str), pc, (yyvsp[-1].lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29418 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7382 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lex_str), (yyvsp[-1].lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7401 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lex_str), (yyvsp[-1].lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29463 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7420 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lex_str), (yyvsp[0].lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29475 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7428 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29498 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7451 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 29522 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7474 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 29534 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7488 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 29551 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7501 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 29561 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7507 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (*THR_MALLOC) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (*THR_MALLOC) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 29577 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7519 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (*THR_MALLOC) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (*THR_MALLOC) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 29593 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7531 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (*THR_MALLOC) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 29608 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7544 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 29614 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lex_str)); }
#line 29620 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7552 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 29629 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 29639 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29645 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7579 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 29655 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7585 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 29665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7591 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 29677 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7599 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 29696 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7614 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 29708 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7622 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 29720 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7630 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 29731 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7637 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 29742 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7644 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 29753 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7651 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 29764 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7658 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 29774 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7664 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 29784 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7670 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 29794 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7678 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29800 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7683 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29806 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7684 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29812 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7689 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 29822 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7695 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 29832 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7701 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 29842 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7707 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 29852 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7716 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 29867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7729 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 29873 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7730 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29879 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7731 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29885 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7732 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29891 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7736 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 29897 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7738 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 29910 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7749 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 29916 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7750 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 29922 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7754 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
#line 29928 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7755 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 29934 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7761 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 29950 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7776 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 29959 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7781 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 29968 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7789 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 29976 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7793 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 29984 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7800 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 29993 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7805 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 30002 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7811 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 30012 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7820 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 30020 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 30028 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7835 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 30036 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7839 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 30044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7843 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 30052 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 30060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7852 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 30068 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7857 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 30076 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7862 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 30084 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7866 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 30093 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7873 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 30102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7878 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 30110 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7882 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 30118 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7886 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 30126 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7891 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 30134 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7896 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 30142 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7901 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 30150 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7906 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 30158 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7910 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 30166 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 7914 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 30174 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7920 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 30180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7926 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 30188 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7930 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 30196 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7936 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 30202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 7946 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 30213 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7953 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 30222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7958 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 30230 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 7962 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 30239 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7967 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 30251 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 7979 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 30260 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7987 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lex_str), (yyvsp[-2].field_def), (yyvsp[-1].check_constraint), (yyvsp[0].c_str));
          }
#line 30268 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7991 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 30276 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 7995 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 30284 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7999 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lex_str), (yyvsp[-2].lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 30292 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 30300 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lex_str).str);
          }
#line 30309 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8012 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lex_str).str);
          }
#line 30317 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8016 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 30325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8020 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lex_str).str);
          }
#line 30333 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8024 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 30341 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8028 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 30349 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lex_str).str, (yyvsp[0].item));
          }
#line 30357 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8036 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lex_str).str, (yyvsp[-1].item));
          }
#line 30365 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8040 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lex_str).str, NULL);
          }
#line 30373 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lex_str).str, (yyvsp[0].visibility));
          }
#line 30381 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8048 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 30389 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8052 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
          }
#line 30397 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
          }
#line 30405 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1040:
#line 8060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].charset), (yyvsp[0].charset));
          }
#line 30413 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8064 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].charset) ? (yyvsp[0].charset) : YYTHD->variables.collation_database);
          }
#line 30423 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 30431 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8074 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 30439 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 8081 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 30448 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 30457 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8091 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 30466 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 30472 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8100 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 30481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 30490 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8110 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 30500 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8116 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 30510 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8124 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 30516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8129 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 30524 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8133 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 30542 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8149 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 30548 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8154 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 30556 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8158 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 30574 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8179 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30580 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30586 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 30592 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8185 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 30598 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8186 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 30604 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8190 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 30610 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8191 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lex_str).str; }
#line 30616 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 30622 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8196 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30628 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8197 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30634 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8198 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30640 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8199 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30646 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8204 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
#line 30655 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8209 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
#line 30664 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8216 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30670 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-1].num);
        }
#line 30681 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8228 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 30696 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8243 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 30717 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 30734 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8280 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 30742 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8284 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 30750 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8291 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 30758 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8295 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 30766 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8302 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 30774 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8306 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 30782 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8310 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 30790 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8321 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 30798 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lex_str).str;
          }
#line 30806 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8331 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 30814 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8335 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 30823 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8341 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 30831 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8345 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lex_str).str;
          }
#line 30839 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8351 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 30847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8355 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lex_str).str;
          }
#line 30855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8362 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 30863 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8366 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 30871 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8373 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 30879 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8377 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 30887 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 30895 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8388 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 30903 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8395 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 30912 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8400 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 30938 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8427 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 30947 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8432 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 30956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8437 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 30964 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8444 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 30979 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8457 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30985 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 30991 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8459 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 30997 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8465 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31006 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8472 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 31012 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8479 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 31021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8486 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 31027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8487 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 31033 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8488 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 31039 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8494 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 31049 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8502 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 31055 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8504 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 31074 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8522 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 31084 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 31095 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8535 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 31106 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lex_str);
          }
#line 31115 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8553 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31124 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 31130 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8567 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 31139 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8575 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 31145 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8577 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 31151 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8579 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 31157 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8581 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 31163 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8583 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 31169 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8585 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 31175 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8590 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 31183 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8596 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 31189 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8597 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31195 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8598 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31201 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8603 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 31209 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8607 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31215 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8609 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 31223 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8616 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 31232 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8621 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 31241 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8634 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 31255 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_str));
          }
#line 31263 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8652 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_str));
          }
#line 31272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8660 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 31282 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8666 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 31292 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8675 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 31300 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8681 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 31306 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8682 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str) = default_key_cache_base; }
#line 31312 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8688 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 31320 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8692 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 31328 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8699 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 31338 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8705 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 31348 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8714 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 31356 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8721 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 31364 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8727 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 31370 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8729 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 31381 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8738 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 31387 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8739 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8744 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 31401 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8748 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 31411 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8790 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= (yyvsp[-1].top_level_node);
          }
#line 31419 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8794 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-1].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[0]));

            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 31433 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8842 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].query_expression_body), (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 31441 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8850 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-4].with_clause), (yyvsp[-3].query_expression_body), (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 31449 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8857 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[-3].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression(body, (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 31459 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto nested= NEW_PTN PT_nested_query_expression((yyvsp[-3].query_expression));
            auto body= NEW_PTN PT_query_expression_body_primary(nested);
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-4].with_clause), body, (yyvsp[-2].order), (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 31469 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8875 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_expression)->body(), NULL, (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 31479 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8884 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression)->body(), NULL, (yyvsp[-1].limit_clause), (yyvsp[0].locking_clause_list));
          }
#line 31489 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8892 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].query_expression) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_expression)->body(), NULL, NULL, (yyvsp[0].locking_clause_list));
          }
#line 31499 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8901 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body)= NEW_PTN PT_query_expression_body_primary((yyvsp[0].query_primary));
          }
#line 31507 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8905 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body)= NEW_PTN PT_union(NEW_PTN PT_query_expression((yyvsp[-3].query_expression_body)), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 31515 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8909 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-3].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            (yyvsp[-3].query_expression)->set_parentheses();

            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[-3].query_expression), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 31528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8918 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[0]));

            auto lhs_qe= NEW_PTN PT_query_expression((yyvsp[-3].query_expression_body));
            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[0].query_expression));

            (yyval.query_expression_body)= NEW_PTN PT_union(lhs_qe, (yylsp[-3]), (yyvsp[-1].num), nested_qe);
          }
#line 31546 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8932 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-3].query_expression) == NULL || (yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].query_expression)->is_union())
              YYTHD->syntax_error_at((yylsp[0]));

            (yyvsp[-3].query_expression)->set_parentheses();

            PT_nested_query_expression *nested_qe=
              NEW_PTN PT_nested_query_expression((yyvsp[0].query_expression));
            (yyval.query_expression_body)= NEW_PTN PT_union((yyvsp[-3].query_expression), (yylsp[-3]), (yyvsp[-1].num), nested_qe);
          }
#line 31564 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8949 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_expression)= (yyvsp[-1].query_expression); }
#line 31570 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8951 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We don't call set_parentheses() on a query expression here. It
              makes no difference to the contextualization phase whether a
              query expression was within parentheses unless it is used in
              conjunction with UNION. Therefore set_parentheses() is called
              only in the rules producing UNION syntax.

              The need for set_parentheses() is purely to support legacy parse
              rules, and we are gradually moving away from them and using the
              query_expression_body to define UNION syntax. When this move is
              complete, we will not need set_parentheses() any more, and the
              contextualize() phase can be greatly simplified.
            */
            (yyval.query_expression)= (yyvsp[-1].query_expression);
          }
#line 31591 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8971 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 31600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8987 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 31617 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 9007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows)); // windows
          }
#line 31634 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 9022 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 31640 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 9027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 31646 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 9031 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 31652 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 9037 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 31662 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9043 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 31672 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9052 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 31680 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 31689 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9069 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 31697 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9073 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 31707 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9081 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locking_clause_list)= NULL; }
#line 31713 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9087 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 31723 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9093 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 31733 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 31741 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9106 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 31749 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9110 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 31757 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9116 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 31763 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9117 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 31769 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9121 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 31775 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9125 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 31781 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9130 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 31787 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9131 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 31793 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9136 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 31803 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9142 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 31813 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9148 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 31824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9157 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 31830 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9159 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, (yyvsp[0].lex_str));
          }
#line 31838 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9166 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=null_lex_str;}
#line 31844 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9167 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31850 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9168 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31856 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9169 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31862 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9170 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 31868 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9174 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31874 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9175 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31880 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9181 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 31890 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9187 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 31899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 31909 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9198 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[0].item));
          }
#line 31917 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_istrue((yyloc), (yyvsp[-2].item));
          }
#line 31925 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1234:
#line 9206 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnottrue((yyloc), (yyvsp[-3].item));
          }
#line 31933 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9210 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isfalse((yyloc), (yyvsp[-2].item));
          }
#line 31941 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9214 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotfalse((yyloc), (yyvsp[-3].item));
          }
#line 31949 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 31957 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 31965 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1240:
#line 9230 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 31973 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9234 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 31981 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1242:
#line 9238 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 31989 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9242 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 32006 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9259 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 32014 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9263 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
#line 32023 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9268 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 32031 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 32042 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9279 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 32050 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9283 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 32061 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9290 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 32069 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9294 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 32077 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9298 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 32089 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9306 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[0].item));
          }
#line 32097 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9310 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_not((yyloc), item);
          }
#line 32108 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9317 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 32120 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), item);
          }
#line 32132 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9337 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32140 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9341 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32148 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9345 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32156 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9349 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32164 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9353 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32172 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9357 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9361 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 32188 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9365 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 32196 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9369 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32204 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9373 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 32212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9377 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 32220 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9381 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 32228 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9385 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32236 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9389 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32244 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 32250 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9417 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 32256 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9418 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 32262 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9419 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 32268 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9420 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 32274 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9421 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 32280 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9422 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 32286 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9426 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 32292 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9427 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 32298 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9437 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lex_str));
          }
#line 32306 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9441 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 32312 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9446 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 32320 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1303:
#line 9450 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 32328 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9454 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 32336 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 32344 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9462 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_negate_expression((yyloc), (yyvsp[0].item));
          }
#line 32352 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9466 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 32360 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9469 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 32366 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9471 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 32374 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9475 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 32382 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9479 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 32390 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9483 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lex_str), (yyvsp[-1].item));
          }
#line 32398 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9487 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 32406 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9491 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 32414 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9495 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), &(yyvsp[-1].cast_type));
          }
#line 32422 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9499 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 32430 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9503 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), &(yyvsp[-1].cast_type));
          }
#line 32438 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9507 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].charset));
          }
#line 32446 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 32454 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9515 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 32462 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1321:
#line 9520 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 32470 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9524 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 32481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9531 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 32493 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9548 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 32501 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9552 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].charset));
          }
#line 32509 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9556 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 32517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_typecast((yyloc), (yyvsp[-1].item));
          }
#line 32525 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9564 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 32533 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 32541 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9572 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 32549 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9576 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 32557 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9580 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 32565 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9584 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 32573 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9588 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 32581 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9592 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 32589 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9596 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 32597 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 32605 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9604 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_time_typecast((yyloc), (yyvsp[-1].item));
          }
#line 32613 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9608 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_datetime_typecast((yyloc), (yyvsp[-1].item));
          }
#line 32621 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9612 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 32629 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9616 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 32638 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9621 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 32647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9626 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 32656 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1344:
#line 9631 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 32664 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9635 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 32672 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9639 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 32680 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9643 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 32688 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 32697 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9652 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 32705 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9656 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 32713 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9675 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 32721 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9679 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 32729 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9683 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 32737 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9687 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9692 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 32753 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9697 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 32761 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9701 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 32769 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9705 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 32777 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9709 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32786 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9714 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 32794 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9718 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 32802 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9722 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 32810 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9726 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 32818 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9730 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 32826 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9734 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 32834 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9738 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 32842 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9742 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32851 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9747 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 32859 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9751 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 32867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9755 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 32875 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9759 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32883 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9763 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32891 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9775 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 32899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9779 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 32907 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9783 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 32915 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9787 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 32923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9791 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 32931 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9795 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 32939 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9799 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 32947 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9803 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 32955 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 9807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 32963 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 9811 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 32971 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 9815 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 32979 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9819 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 32987 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9823 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 32995 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9827 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 33003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9831 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 33011 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9835 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 33019 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9839 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 33027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9843 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 33035 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 9847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 33043 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 9851 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 33051 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 9855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 33059 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9859 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 33067 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 33077 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 9873 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 33087 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9879 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 33097 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9885 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 33107 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9891 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 33117 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9897 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 33125 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9901 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 33135 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9919 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lex_str), (yyvsp[-1].item_list2));
          }
#line 33143 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lex_str), (yyvsp[-3].lex_str), (yyvsp[-1].item_list2));
          }
#line 33151 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 9930 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 33157 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 9932 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 33171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 9944 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 33177 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 9945 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 33183 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 9949 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 33189 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 9950 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 33195 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 9954 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 33201 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 9955 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 33207 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 9960 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 33217 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 9966 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 33227 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 9975 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lex_str), (yylsp[-1]).cpp);
          }
#line 33235 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 9987 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 33243 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 9991 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 33251 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 9995 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33259 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 9999 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33267 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33275 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_json_object((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33283 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10011 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33291 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10015 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 33299 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10019 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33307 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10023 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 33315 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33323 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10036 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33331 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10040 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33339 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33347 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10048 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 33355 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10052 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 33363 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 33371 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 33379 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10064 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 33387 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10068 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 33395 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10075 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 33403 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10082 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 33411 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 33419 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10090 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 33427 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1442:
#line 10094 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 33435 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 33443 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 33451 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10106 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 33466 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10117 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 33481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10128 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 33489 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10132 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 33497 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10136 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 33510 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10148 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 33519 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10153 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 33528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10158 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 33537 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10166 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 33545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10170 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 33553 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10177 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 33561 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10181 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 33569 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10185 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 33577 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10193 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 33585 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10197 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 33593 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10201 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 33601 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10208 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 33609 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 33617 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1463:
#line 10219 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 33625 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1464:
#line 10226 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 33633 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10230 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 33641 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10237 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYTHD->charset());
          }
#line 33649 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10244 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 33657 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10254 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 33675 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10271 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 33683 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10275 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 33691 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10282 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 33699 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10286 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 33707 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10293 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 33715 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10297 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 33723 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10304 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 33731 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10310 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 33739 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10317 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 33748 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10322 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 33756 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10329 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 33764 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10333 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 33772 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10337 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 33780 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10341 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 33788 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10345 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 33796 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10352 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 33804 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10359 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 33812 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10363 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 33820 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10367 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 33828 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10371 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 33836 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10375 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 33844 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10382 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 33852 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10386 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 33860 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10390 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 33868 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10394 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 33876 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10398 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 33883 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10403 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 33889 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10404 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 33895 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10405 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 33901 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10410 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 33909 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33915 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10421 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lex_str), (yyvsp[0].item));
          }
#line 33926 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10428 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lex_str));
          }
#line 33934 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10432 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lex_str), (yylsp[-1]), (yyvsp[0].lex_str));
          }
#line 33942 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10438 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 33948 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10439 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 33954 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10444 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 33964 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10449 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 33970 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10453 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 33976 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10454 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 33982 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10459 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 33991 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10464 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 34002 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10474 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 34010 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 34021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10488 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 34044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10507 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 34056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10515 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 34067 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10522 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 34078 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10529 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 34089 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10536 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 34100 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10543 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 34111 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10550 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 34122 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10557 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 34133 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10564 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 34144 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10571 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 34155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10580 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 34161 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10586 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 34171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10592 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 34181 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 34187 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10601 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 34193 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10606 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 34203 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10612 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 34213 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10620 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 34219 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10621 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 34225 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10625 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 34231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10626 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 34237 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10631 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (*THR_MALLOC) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 34249 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10639 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 34259 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 34265 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10648 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 34271 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10649 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 34277 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10660 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 34283 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10661 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 34289 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10743 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 34297 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10748 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 34305 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10752 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 34313 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10756 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 34321 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10761 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 34334 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10770 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 34342 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10776 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 34348 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10777 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 34354 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10778 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 34360 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10782 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 34366 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10783 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 34372 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10784 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 34378 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10785 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 34384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10788 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 34390 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10789 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 34396 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 34402 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10813 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 34410 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10843 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 34416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10845 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 34422 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 34428 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10848 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 34434 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10852 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 34440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10854 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 34450 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10862 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 34456 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10863 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 34462 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10868 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 34470 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10874 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 34476 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10875 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 34482 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10880 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 34499 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10893 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 34511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10905 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].lex_str), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 34527 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10920 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 34535 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10927 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 34545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10933 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 34555 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10942 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lex_str));
          }
#line 34563 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10947 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_path((yyvsp[-6].lex_str), (yyvsp[-5].type), (yyvsp[-4].charset), (yyvsp[-3].jt_column_type), (yyvsp[-1].lex_str),
                                                       (yyvsp[0].jt_on_error_or_empty).error.type,
                                                       *(yyvsp[0].jt_on_error_or_empty).error.default_str,
                                                       (yyvsp[0].jt_on_error_or_empty).empty.type,
                                                       *(yyvsp[0].jt_on_error_or_empty).empty.default_str);
          }
#line 34575 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10955 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].lex_str), (yyvsp[0].jtc_list));
          }
#line 34583 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10961 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 34591 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10965 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 34599 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10972 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).error.default_str= &NULL_STR;

            (yyval.jt_on_error_or_empty).empty.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).empty.default_str= &NULL_STR;
          }
#line 34611 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10980 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).error.default_str= &NULL_STR;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[0].jt_on_response).default_str;
          }
#line 34623 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10988 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[0].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= enum_jtc_on::JTO_IMPLICIT;
            (yyval.jt_on_error_or_empty).empty.default_str= &NULL_STR;
          }
#line 34635 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10996 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[0].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[-1].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[-1].jt_on_response).default_str;
          }
#line 34647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11004 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error.type= (yyvsp[-1].jt_on_response).type;
            (yyval.jt_on_error_or_empty).error.default_str= (yyvsp[-1].jt_on_response).default_str;

            (yyval.jt_on_error_or_empty).empty.type= (yyvsp[0].jt_on_response).type;
            (yyval.jt_on_error_or_empty).empty.default_str= (yyvsp[0].jt_on_response).default_str;
          }
#line 34659 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11014 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 34665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11017 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 34671 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_ERROR;
            (yyval.jt_on_response).default_str= &NULL_STR;
          }
#line 34680 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11026 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_NULL;
            (yyval.jt_on_response).default_str= &NULL_STR;
          }
#line 34689 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11031 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response).type= enum_jtc_on::JTO_DEFAULT;
            (yyval.jt_on_response).default_str= YYTHD->memdup_typed(&(yyvsp[0].lex_str));
          }
#line 34698 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11039 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 34706 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11042 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 34712 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11043 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 34718 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 34724 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11048 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 34730 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11049 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 34736 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11055 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 34745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11061 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 34754 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 34763 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1609:
#line 11077 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 34769 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11087 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 34780 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 34790 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11104 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 34800 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11113 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 34810 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11119 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 34819 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11131 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lex_str).str),
                                               (yyvsp[0].lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 34832 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11140 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lex_str).str),
                                               (yyvsp[0].lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 34845 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11151 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34851 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11152 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 34857 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11153 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 34863 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11154 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 34869 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 34875 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11156 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 34881 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11157 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 34887 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11158 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 34893 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11159 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 34899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11160 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 34905 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11161 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 34911 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11162 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 34917 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11166 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 34923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11167 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 34929 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11168 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 34935 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11169 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 34941 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11170 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 34947 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11171 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 34953 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11172 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 34959 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11173 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 34965 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11174 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 34971 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11178 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 34977 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11179 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 34983 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11180 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 34989 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11181 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 34995 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11191 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 35001 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lex_str)); }
#line 35007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item) != NULL)
              (yyval.item)= new PTI_context<CTX_WHERE>((yyloc), (yyvsp[0].item));
            else
              (yyval.item)= NULL;
          }
#line 35018 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11210 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35024 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 35032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35038 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11220 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_context<CTX_HAVING>((yyloc), (yyvsp[0].item));
          }
#line 35046 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11227 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 35054 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 35062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11238 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 35071 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11243 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 35081 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11252 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).raw.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).raw.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).raw.start - YYLIP->get_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 35098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11268 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 35111 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11277 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 35119 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11284 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 35129 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11290 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 35139 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11299 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 35147 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11303 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 35155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11310 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 35165 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11316 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 35175 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 35186 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11334 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11335 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35198 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11343 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 35204 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11345 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 35212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11352 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 35221 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11357 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35232 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11367 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 35238 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11368 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 35244 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35253 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11389 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11399 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 35272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11409 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 35278 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11415 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 35286 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11422 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 35295 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11427 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35306 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11436 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 35312 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11441 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 35318 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11442 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 35324 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11446 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 35330 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11452 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 35338 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11459 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 35348 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11465 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 35358 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11471 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 35368 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11480 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), (yyvsp[0].lex_str), (yylsp[0]).raw);
          }
#line 35376 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11484 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 35384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11488 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
          }
#line 35392 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11492 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
          }
#line 35400 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11496 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
          }
#line 35408 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11502 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35414 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11503 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35420 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11507 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35426 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11508 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 35432 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11509 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35438 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11510 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35444 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35450 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11512 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35456 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35462 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 35468 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11518 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35474 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11519 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35480 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11520 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 35486 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11524 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35492 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11525 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35498 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11526 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35504 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11527 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35510 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11532 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35522 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11533 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11534 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 35534 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11535 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 35540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 35546 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11550 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 35556 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11556 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 35566 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11565 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lex_str));
          }
#line 35574 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11569 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lex_str));
          }
#line 35582 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11576 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 35590 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11585 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lex_str), (yyvsp[-2].charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 35598 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11589 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lex_str));
          }
#line 35606 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11592 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 35612 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11601 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_expression_body_primary(
                      NEW_PTN PT_query_specification((yyvsp[-1].select_options), (yyvsp[0].item_list2)))));
          }
#line 35623 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11611 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35631 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11622 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 35648 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11638 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 35658 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lex_str);
          }
#line 35669 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11657 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (*THR_MALLOC) sp_name(to_lex_cstring((yyvsp[-2].lex_str)), (yyvsp[0].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 35696 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11680 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (*THR_MALLOC) sp_name(to_lex_cstring(db), (yyvsp[0].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 35732 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11715 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 35740 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11722 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 35756 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11737 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 35767 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11747 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 35783 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11762 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 35793 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11771 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 35805 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11782 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35827 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11802 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35850 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 35873 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lex_str), (yyvsp[-1].num));
          }
#line 35882 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
	  }
#line 35890 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11862 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 35898 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11869 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 35908 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11875 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 35918 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11884 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 35928 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11890 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 35938 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11898 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 35944 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 35950 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11903 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11904 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35962 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11908 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 35968 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11914 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 35978 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11920 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 35988 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11944 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].column_row_value_list_pair).column_list, (yyvsp[-1].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 35999 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11959 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-1].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-1].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 36013 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11976 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 36024 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11991 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL, NULL);
          }
#line 36035 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1773:
#line 12004 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL, NULL);
          }
#line 36049 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1774:
#line 12019 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL, NULL);
          }
#line 36060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12028 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 36066 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12029 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 36072 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12031 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 36085 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12039 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 36091 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12043 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 36097 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12045 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 36110 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 36119 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12067 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 36128 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12072 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 36137 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12080 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression);
          }
#line 36146 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12085 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression);
          }
#line 36155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12090 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression);
          }
#line 36164 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12098 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36174 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12104 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12113 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 36192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12130 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 36201 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12135 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 36211 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12154 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 36217 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12159 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 36227 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12169 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 36237 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12175 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36247 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12185 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 36255 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 36264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12197 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 36272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12215 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 36281 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 36287 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12223 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 36293 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12228 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 36304 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12235 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 36317 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12247 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 36326 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12254 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 36332 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12255 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 36338 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12270 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-8].with_clause), (yyvsp[-7].optimizer_hints), (yyvsp[-6].num), (yyvsp[-4].table), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 36346 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12280 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 36354 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12291 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 36362 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12302 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 36368 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12303 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 36374 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12307 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 36380 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1827:
#line 12308 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 36386 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12309 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 36392 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12314 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 36400 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12334 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 36408 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12338 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 36416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12342 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 36424 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12346 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 36432 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12350 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 36440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12354 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 36448 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12358 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 36456 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12362 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 36464 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12366 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 36472 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12373 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 36480 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12377 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 36492 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12390 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 36503 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12401 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 36516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12410 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 36526 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 36542 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12428 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 36557 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12439 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 36572 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12450 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 36584 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 36595 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12465 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, (yyvsp[-1].lex_str), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 36607 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12473 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 36613 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12480 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 36635 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12498 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 36643 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12502 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 36651 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12506 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 36660 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 36669 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 36678 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12521 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 36687 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12531 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 36704 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12544 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 36715 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12551 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 36727 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12559 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 36739 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12567 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 36751 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12575 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 36763 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12583 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 36775 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12591 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 36789 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12601 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 36815 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12623 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 36824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12628 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 36850 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12650 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 36863 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12659 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 36876 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12668 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 36886 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12674 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0);
            MAKE_CMD(tmp);
          }
#line 36895 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12679 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0);
            MAKE_CMD(tmp);
          }
#line 36904 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12684 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 36913 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12689 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lex_str);
          }
#line 36923 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12695 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 36936 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12704 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 36948 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12712 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 36956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12716 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 36964 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12720 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 36975 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12727 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 36986 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12734 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 36996 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12740 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 37010 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12750 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 37024 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12760 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 37033 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12765 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 37042 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12770 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 37051 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12775 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 37061 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12784 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 37067 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12786 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 37073 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12788 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 37079 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12802 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 37085 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12803 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lex_str).str; }
#line 37091 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 37097 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12808 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 37103 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12812 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 37109 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12813 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 37115 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12817 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 37121 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12818 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 37127 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12819 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 37133 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12820 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 37139 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12829 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 37145 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12830 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 37151 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12834 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 37157 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12835 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 37163 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12841 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_wild((yyvsp[0].lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 37172 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12846 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Select->set_where_cond((yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 37184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12856 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where)= { NULL_STR, nullptr }; }
#line 37190 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12857 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where)= { (yyvsp[0].lex_str), nullptr}; }
#line 37196 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12858 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where)= { NULL_STR, (yyvsp[0].item)}; }
#line 37202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12864 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lex_str));
          }
#line 37210 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12871 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 37218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12883 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 37226 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12895 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
          }
#line 37234 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12899 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 37250 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12913 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 37256 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12915 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 37265 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12927 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 37276 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12934 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37282 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12939 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37299 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12951 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37305 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37311 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12958 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 37327 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12970 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 37339 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12978 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 37355 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12994 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37361 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12999 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 37367 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 13001 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 37373 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 13003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 37379 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 13005 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 37385 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 37391 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13009 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 37397 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13011 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 37403 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13013 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 37409 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13015 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 37415 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13017 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 37421 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13019 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 37427 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 37433 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13025 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 37439 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13031 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 37448 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13036 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37454 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13038 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 37465 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13053 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 37475 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13059 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lex_str);
          }
#line 37485 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13067 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 37491 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 37511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1976:
#line 13089 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 37517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13090 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 37523 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13094 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37529 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13096 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > MAX_LOG_UNIQUE_FN_EXT)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulong_num), MAX_LOG_UNIQUE_FN_EXT);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulong_num);
          }
#line 37544 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13110 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 37554 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13116 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 37560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13125 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lex_str).str;
          }
#line 37568 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13129 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 37581 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13143 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 37594 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13154 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 37600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 37606 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13156 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 37612 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1989:
#line 13163 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lex_str).str;
          }
#line 37622 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13191 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 37645 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13212 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 37651 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13213 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 37657 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13217 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 37663 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13218 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 37669 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 37675 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13223 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 37681 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 37687 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13228 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 37693 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13233 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 37699 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13234 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 37705 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13238 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 37711 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13239 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 37717 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13244 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 37726 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13253 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 37735 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13258 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 37745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 37754 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13269 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 37763 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 13276 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 37769 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13277 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 37775 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13282 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 37784 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13291 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 37793 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13296 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 37802 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13303 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 37808 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13304 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 37814 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13308 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 37820 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2019:
#line 13309 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lex_str).str); }
#line 37826 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13318 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 37832 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13319 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 37838 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13320 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 37844 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 37854 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13331 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 37864 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13341 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lex_str));
          }
#line 37872 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13347 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 37878 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13348 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 37884 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13353 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 37896 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13361 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 37917 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13381 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 37937 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13402 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lex_str));
          }
#line 37946 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13407 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 37956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13413 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].charset), (yyvsp[0].lex_str));
          }
#line 37965 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13418 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lex_str));
          }
#line 37974 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13426 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 37985 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13433 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING s= Item_hex_string::make_hex_str((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 37996 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING s= Item_bin_string::make_bin_str((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 38007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13450 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 38027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13469 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 38033 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13471 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 38044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 38050 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13482 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 38056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13485 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 38072 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13497 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("FALSE"), 0, 1);
          }
#line 38080 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13501 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_int((yyloc), NAME_STRING("TRUE"), 1, 1);
          }
#line 38088 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13505 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lex_str));
          }
#line 38096 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13509 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lex_str));
          }
#line 38104 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13513 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].charset), (yyvsp[0].lex_str));
          }
#line 38112 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].charset), (yyvsp[0].lex_str));
          }
#line 38120 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13524 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lex_str));
          }
#line 38128 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lex_str));
          }
#line 38136 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13532 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
          }
#line 38144 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13536 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, YYCSCL);
          }
#line 38152 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
          }
#line 38160 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13548 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 38168 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13552 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 38176 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13556 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 38184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13575 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[-2].lex_str).str);
          }
#line 38192 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13579 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[-4].lex_str).str, (yyvsp[-2].lex_str).str);
          }
#line 38200 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13586 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 38208 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13593 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 38216 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13600 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), (yyvsp[0].lex_str));
          }
#line 38224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13608 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lex_str));
          }
#line 38232 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13616 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
          }
#line 38240 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13620 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lex_str).str, (yyvsp[-2].lex_str).str, (yyvsp[0].lex_str).str);
          }
#line 38248 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13627 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 38258 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13633 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lex_str)), to_lex_cstring((yyvsp[0].lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 38272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13646 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 38282 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13652 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lex_str)),
                                    to_lex_cstring((yyvsp[-1].lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 38294 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13662 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 38300 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13664 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lex_str).str,
                                                     (yyvsp[0].lex_str).str+(yyvsp[0].lex_str).length,
                                                     (yyvsp[0].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lex_str).length)
              {
                ErrConvString err((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[0].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 38331 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13694 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 38345 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13707 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lex_str).str, "."))
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 38359 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13720 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 38376 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13736 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 38393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13752 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[0].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 38411 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13776 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 38417 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13778 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[0].keyword).str, (yyvsp[0].keyword).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].keyword).length;
          }
#line 38429 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13790 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str).str= YYTHD->strmake((yyvsp[0].keyword).str, (yyvsp[0].keyword).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].keyword).length;
          }
#line 38440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13799 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 38446 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13801 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[0].keyword).str, (yyvsp[0].keyword).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[0].keyword).length;
          }
#line 38458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13811 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 38464 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13812 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 38470 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13813 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 38476 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 38485 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13829 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lex_str), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 38494 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13834 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 38509 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13848 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 38518 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13853 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lex_str), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 38527 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2520:
#line 14341 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 38535 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2521:
#line 14350 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 38543 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2522:
#line 14354 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 38551 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2523:
#line 14358 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 38559 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2524:
#line 14362 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                (yylsp[-1]));
          }
#line 38569 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2525:
#line 14368 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    (yylsp[-1]));
          }
#line 38580 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2526:
#line 14378 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 38588 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2527:
#line 14382 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 38597 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2528:
#line 14387 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 38606 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2529:
#line 14392 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 38615 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2530:
#line 14397 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 38624 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2531:
#line 14402 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 38633 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2532:
#line 14407 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 38642 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2533:
#line 14414 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 38648 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2534:
#line 14415 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 38654 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2535:
#line 14420 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lex_str)), nullptr);
          }
#line 38662 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2536:
#line 14424 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 38670 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2537:
#line 14431 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 38680 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2538:
#line 14437 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 38690 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2539:
#line 14445 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 38696 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2540:
#line 14451 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 38707 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2541:
#line 14458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 38717 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2542:
#line 14467 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 38723 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2543:
#line 14468 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 38729 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2544:
#line 14474 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 38737 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2545:
#line 14478 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 38745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2546:
#line 14486 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 38753 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2547:
#line 14489 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 38759 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2548:
#line 14493 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 38765 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2549:
#line 14494 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 38771 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2550:
#line 14495 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 38777 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2551:
#line 14496 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38783 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2552:
#line 14497 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38789 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2553:
#line 14501 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38795 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2554:
#line 14502 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 38801 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2555:
#line 14503 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2556:
#line 14504 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38813 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2557:
#line 14508 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 38819 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2558:
#line 14509 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 38825 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2559:
#line 14510 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38831 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2560:
#line 14511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38837 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2561:
#line 14515 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 38843 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2562:
#line 14516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 38849 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2563:
#line 14517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 38855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2564:
#line 14518 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 38861 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2565:
#line 14519 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38867 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2566:
#line 14520 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 38873 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2567:
#line 14526 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 38881 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2568:
#line 14536 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 38889 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2569:
#line 14540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lex_str), (yyvsp[0].item));
          }
#line 38897 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2570:
#line 14545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 38905 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2571:
#line 14549 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].charset));
          }
#line 38913 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2572:
#line 14553 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 38924 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2573:
#line 14560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].charset), (yyvsp[0].charset));
          }
#line 38932 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2574:
#line 14564 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 38940 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2575:
#line 14571 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d((yyvsp[0].lex_str));
          }
#line 38948 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2576:
#line 14575 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), (yyvsp[-2].lex_str), (yyvsp[0].lex_str));
          }
#line 38956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2577:
#line 14579 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lex_str));
          }
#line 38964 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2578:
#line 14586 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 38972 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2579:
#line 14590 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 38980 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2580:
#line 14597 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 38988 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2581:
#line 14603 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 38994 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2582:
#line 14604 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 39000 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2583:
#line 14609 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 39008 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2584:
#line 14615 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 39014 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2585:
#line 14616 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 39020 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2586:
#line 14620 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 39026 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2587:
#line 14621 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 39032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2588:
#line 14625 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 39038 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2589:
#line 14626 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 39044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2590:
#line 14627 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 39050 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2591:
#line 14628 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 39056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2593:
#line 14633 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2594:
#line 14635 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 39070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2595:
#line 14639 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 39078 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2596:
#line 14643 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 39086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2597:
#line 14647 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 39094 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2598:
#line 14651 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 39102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2599:
#line 14660 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 39117 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2600:
#line 14671 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39123 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2601:
#line 14673 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 39134 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 14693 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 39163 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 14720 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 39169 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 14721 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 39175 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 14723 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 39184 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 14727 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 39190 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 14732 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 39205 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 14743 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39211 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 14745 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 39222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 14756 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 39231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 14764 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 39239 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 14771 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= NEW_PTN PT_alter_instance((yyvsp[0].alter_instance_action));
          }
#line 39248 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 14778 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lex_str), "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 39264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 14797 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 39272 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 14801 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lex_str)));
          }
#line 39280 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 14810 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 39288 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 14820 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lex_str)),
                                              to_lex_cstring((yyvsp[-3].lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 39297 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 14832 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 39307 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 14840 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 39313 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 14841 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 39319 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 14845 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 39325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2626:
#line 14846 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 39331 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2627:
#line 14847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 39337 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 14848 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 39343 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 14852 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 39349 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 14853 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 39355 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 14854 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 39361 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 14855 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 39367 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 14856 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 39373 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 14863 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 39382 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 14868 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 39401 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 14883 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 39410 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 14888 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 39428 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 14902 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 39437 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 14907 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 39449 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 14918 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 39458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 14924 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-6].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
          }
#line 39477 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 14939 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 39486 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 14944 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
          }
#line 39502 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 14956 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 39516 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 14968 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 39522 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 14969 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 39528 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 14970 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 39534 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 14971 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 39540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 14981 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 39550 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 14987 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 39560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 14996 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lex_str));
          }
#line 39571 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 15003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lex_str), (yyvsp[0].lex_str)); }
#line 39577 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 15005 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 39583 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15007 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 39589 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15009 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 39595 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15011 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 39601 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15013 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 39607 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15015 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 39613 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15017 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 39619 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15019 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 39625 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15021 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 39631 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15023 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 39637 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15025 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 39643 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15027 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 39649 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15029 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 39655 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15031 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 39661 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15033 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 39667 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15035 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 39676 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15040 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 39682 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15042 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 39700 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 39706 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15058 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 39712 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15060 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 39718 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 39724 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15064 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 39730 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2678:
#line 15066 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 39736 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15068 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 39742 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15070 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 39748 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15072 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 39754 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15074 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 39760 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15076 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 39766 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15078 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 39772 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15080 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 39778 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15082 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 39784 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15086 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39790 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2688:
#line 15087 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39796 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lex_str).str;
          }
#line 39810 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15112 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lex_str).str;
          }
#line 39824 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15122 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lex_str).str;
          }
#line 39838 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15135 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 39856 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15149 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 39872 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15161 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 39888 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15173 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
#line 39901 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15185 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (*THR_MALLOC) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 39911 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15191 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 39921 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15200 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (*THR_MALLOC) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 39931 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15206 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 39941 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15214 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39947 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15215 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39953 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15219 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39959 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15220 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39965 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15224 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lex_str).length;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 39979 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15234 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
          }
#line 39993 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15244 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
          }
#line 40009 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15256 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 40026 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15269 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
          }
#line 40037 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15279 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 40054 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15293 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 40074 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15309 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 40088 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15319 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
          }
#line 40102 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15330 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 40118 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15343 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 40135 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15356 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
          }
#line 40146 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15366 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 40155 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15371 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 40164 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15379 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 40173 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15384 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 40182 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15391 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 40188 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15392 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 40194 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15397 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 40204 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15403 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 40214 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15413 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 40222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 15417 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 40230 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 15421 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 40238 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15425 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 40246 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15431 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40252 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15433 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 40258 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15437 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 40264 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15438 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 40270 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2737:
#line 15443 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 40280 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2738:
#line 15448 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40286 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15452 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40292 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15453 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40298 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 40304 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15459 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 40310 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15460 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 40316 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15465 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 40322 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15466 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 40328 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15467 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 40334 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15471 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40340 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15472 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40346 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15477 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 40359 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15489 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 40372 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15499 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 40382 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15508 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 40392 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15517 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 40402 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15530 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 40408 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15531 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 40414 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15532 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 40420 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15545 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].query_expression) == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].query_expression)->has_into_clause())
              YYTHD->syntax_error_at((yylsp[0]));

            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_expression));
          }
#line 40434 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15557 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 40440 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15558 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 40446 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15559 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 40452 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15560 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 40458 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15561 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 40464 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15562 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 40470 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15563 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_FOUND_ROWS; }
#line 40476 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15564 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 40482 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15575 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 40493 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15585 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40499 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15587 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40505 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15589 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40511 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15622 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 40526 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15636 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 40534 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15649 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40540 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 15651 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40546 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15653 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40552 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15658 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 40558 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15663 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 40564 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15665 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 40570 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15667 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 40576 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15672 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 40582 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15674 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 40588 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15676 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 40594 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15681 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 40634 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15721 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_expression));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 40686 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15771 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 40692 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15772 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 40698 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15773 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 40704 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15774 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 40710 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15785 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 40716 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15787 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 40722 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15792 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 40731 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15798 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length };
            }
#line 40740 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15815 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 40776 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15847 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 40807 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15884 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lex_str).str;
          }
#line 40828 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15902 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lex_str).str;
          }
#line 40849 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15924 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 40876 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15948 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 40884 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15954 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(&cs, cs, (yyvsp[0].charset)))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_STR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 40929 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15995 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 40941 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 16003 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 41000 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 16062 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 41024 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 16082 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 41032 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 16087 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 41044 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 16095 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 41056 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 16103 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 41069 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 16117 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 41078 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 16122 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 41087 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 16127 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 41096 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 16132 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 41105 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 16137 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 41114 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 16142 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 41123 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 16149 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41129 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 16150 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41135 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 16154 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 41148 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 16163 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 41162 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 16173 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 41181 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 16190 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41187 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 16191 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41193 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 16195 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 41199 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 16196 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 41205 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 16197 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 41211 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 16201 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 41217 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 16202 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 41223 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 16207 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 41229 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 16209 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 41235 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 16211 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 41241 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 16216 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_install_plugin((yyvsp[-2].lex_str), (yyvsp[0].lex_str));
          }
#line 41251 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 16222 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 41261 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 16231 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_uninstall_plugin((yyvsp[0].lex_str));
          }
#line 41271 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 16237 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (*THR_MALLOC) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 41281 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 16246 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 41291 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 16252 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 41301 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 16261 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 41314 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 16279 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 41325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 16289 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 41347 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 16310 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= null_lex_str;
          }
#line 41355 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16314 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str)= (yyvsp[-1].lex_str);
          }
#line 41363 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16321 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 41371 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16325 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 41379 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 16329 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 41387 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 16335 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 41393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 16336 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 41399 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 16341 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 41410 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16347 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 41416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16352 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 41427 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16359 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 41438 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16369 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 41449 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16376 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 41463 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 16388 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lex_str).str, nullptr, 10)); }
#line 41469 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 16389 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lex_str).str, nullptr, 10)); }
#line 41475 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 16393 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 41481 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 16395 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 41490 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 16402 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 41496 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 16404 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 41505 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 16409 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 41514 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 16416 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 41520 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 16417 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 41526 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 41530 "/mnt/workspace/percona-xtrabackup-8.0-source-tarball/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
